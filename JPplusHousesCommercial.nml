# 1 "JPplusHousesCommercial.pnml"
/*---HEADER--*/

// Define the GRF
# 1 "src/header_commercial.pnml" 1
/* *** Begin Header *** */

/*
*	Welcome to JPplusHouses - Commercial!
*/

grf {
	grfid: 						"KR06";
	name: 						string(STR_GRF_NAME_COMMERCIAL);
	desc: 						string(STR_GRF_DESC_COMMERCIAL);
	version: 					1;
	min_compatible_version: 	1;
	url: 						string(STR_WEBSITE);

	// Parameter to decide which cargoes are required, if any, to allow Commercial buildings to appear
	param 0 {
  		param_commercial_cargoes {
			type: 				int;
   			name: 				string(STR_PARAM_NAME_COMMERCIAL_CARGOES);
   			desc: 				string(STR_PARAM_DESC_COMMERCIAL_CARGOES);
   			def_value: 			0;
			min_value:			0;
			max_value:			1;
			names: {
				0: string(STR_PARAM_VALUE_COMMERCIAL_CARGOES_NONE);
				1: string(STR_PARAM_VALUE_COMMERCIAL_CARGOES_MAIL_ONLY);
			};
   		}
	}
	param 5 {
		param_commercial_threshold_7L8L {
			type:				int;
			name:				string(STR_PARAM_NAME_COMMERCIAL_THRESHOLD_7L8L);
			desc: 				string(STR_PARAM_DESC_THRESHOLD);
			min_value:			1000;
			max_value:			5000000;
			def_value: 			10000;
		}
	}
	param 6 {
		param_commercial_threshold_9L10L {
			type:				int;
			name:				string(STR_PARAM_NAME_COMMERCIAL_THRESHOLD_9L10L);
			desc: 				string(STR_PARAM_DESC_THRESHOLD);
			min_value:			1000;
			max_value:			5000000;
			def_value: 			25000;
		}
	}
	param 7 {
		param_commercial_threshold_11L12L {
			type:				int;
			name:				string(STR_PARAM_NAME_COMMERCIAL_THRESHOLD_11L12L);
			desc: 				string(STR_PARAM_DESC_THRESHOLD);
			min_value:			1000;
			max_value:			5000000;
			def_value: 			50000;
		}
	}
}

if (version_openttd(1,10,0,28004) > openttd_version) {
	error(FATAL, string(STR_ERROR_GAME_VERSION));
}

if (grf_order_behind("KR05") == 0) {
    error(FATAL, MUST_LOAD_AFTER, string(STR_ERROR_USED_WITH_PART_ONE));
}

if (grf_future_status("KR05") == 0) {
    error(FATAL, MUST_LOAD_AFTER, string(STR_ERROR_USED_WITH_PART_ONE));
}

disable_item(FEAT_HOUSES);

/* *** End Header *** */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/cargotable.pnml" 1
/* Begin cargotable */

cargotable {
	PASS, 		// Obviously
	MAIL, 		// Obviously
	GOOD, 		// For Commercial Buildings
	CASS,		// For Shops
	EOIL,		// For Restaurants
	FISH,		// For Restaurants
	FOOD, 		// For Stadiums and Restaurants
	FRUT,		// For Shops
	JAVA,		// For Restaurants
	LVST,		// For Restaurants
	BEER, 		// For Stadiums
	PETR,		// For Petrol Stations
	RFPR,		// For Hospitals	
}

/* Production loop, shared by all houses. Individual production rates stored in temporary registers in the function below.*/

switch (FEAT_HOUSES, SELF, switch_alt_production, getbits(extra_callback_info1, 0, 8)) {
	0: (PASS * 256) + (abs(extra_callback_info2 % 8) == 0) * LOAD_TEMP(1);
	1: (MAIL * 256) + (abs(extra_callback_info2 % 8) == 0) * LOAD_TEMP(2);
	return CB_RESULT_HOUSE_NO_MORE_PRODUCTION;
}

/* Production levels for passengers and mail, are passed as arguments to this function for use in the production loop. */
switch (FEAT_HOUSES, SELF, func_produce, pass, mail, [STORE_TEMP(pass, 1), STORE_TEMP(mail, 2)] ) {switch_alt_production;}

/* End cargotable */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/sprite_templates.pnml" 1
// Begin Sprite Templates

// Ground Tile Template

template template_ground(x, y) {   
	//left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		31,		-31,		01,	    NOCROP | ANIM]
    sw: [ x+65,		y,		64,		31,		-31,		01,	    NOCROP | ANIM]
    nw: [ x+130,	y,		64,		31,		-31,		01,	    NOCROP | ANIM]
    ne: [ x+195,	y,		64,		31,		-31,		01,	    NOCROP | ANIM]
}

// House Templates

template template_house_80_2dir(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    nw: [ x,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    ne: [ x+65,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
}

template template_house_80(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		80,		-31,		-48,	NOCROP | ANIM]
}

template template_house_80_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		80,	    -37,		-48,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		80,	    -37,		-48,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,		80,	    -37,		-48,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		80,	    -37,		-48,	NOCROP | ANIM]
}

template template_house_80_wide_ground(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x+6,		y,		64,		80,	    -31,		-48,	NOCROP | ANIM]
    sw: [ x+83,		y,		64,		80,	    -31,		-48,	NOCROP | ANIM]  
    nw: [ x+160,	y,		64,		80,	    -31,		-48,	NOCROP | ANIM]
    ne: [ x+237,	y,		64,		80,	    -31,		-48,	NOCROP | ANIM]
}

template template_house_100_1dir(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    sw: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    nw: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    ne: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
}

template template_house_100(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		100,	-31,		-68,	NOCROP | ANIM]
}

template template_house_100_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		100,	-37,		-68,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		100,	-37,		-68,	NOCROP | ANIM]
    nw: [ x+154,	y,		76,		100,	-37,		-68,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		100,	-37,		-68,	NOCROP | ANIM]
}

template template_house_128_1dir(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    sw: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    nw: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    ne: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
}

template template_house_128(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		128,	-31,		-96,	NOCROP | ANIM]
}

template template_house_128_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		128,	-37,		-96,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		128,	-37,		-96,	NOCROP | ANIM]
    nw: [ x+154,	y,		76,		128,	-37,		-96,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		128,	-37,		-96,	NOCROP | ANIM]
}

template template_house_150(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		150,	-31,		-118,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		150,	-31,		-118,	NOCROP | ANIM]  
    nw: [ x+130,	y,		64,	    150,	-31,		-118,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		150,	-31,		-118,	NOCROP | ANIM]
}

template template_house_150_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		150,	-37,		-118,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		150,	-37,		-118,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,	    150,	-37,		-118,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		150,	-37,		-118,	NOCROP | ANIM]
}

template template_house_200(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		200,	-31,		-168,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		200,	-31,		-168,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		200,	-31,		-168,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		200,	-31,		-168,	NOCROP | ANIM]
}

template template_house_200_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		200,	-37,		-168,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		200,	-37,		-168,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,		200,	-37,		-168,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		200,	-37,		-168,	NOCROP | ANIM]
}

template template_house_250(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		250,	-31,		-218,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		250,	-31,		-218,	NOCROP | ANIM]  
    nw: [ x+130,	y,		64,		250,	-31,		-218,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		250,	-31,		-218,	NOCROP | ANIM]
}

template template_house_250_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		250,	-37,		-218,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		250,	-37,		-218,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,		250,	-37,		-218,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		250,	-37,		-218,	NOCROP | ANIM]
}

// End Sprite Templates
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/id_commercial.pnml" 1
// Assign COMMERCIAL IDs

// Shotengai
item(FEAT_HOUSES, item_shotengai_01,                00, HOUSE_SIZE_1X1) {}

// Post War
item(FEAT_HOUSES, item_commercial_post_5L6L,        58, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_post_7L8L,        37, HOUSE_SIZE_1X1) {}

// Boom period
item(FEAT_HOUSES, item_commercial_boom_5L6L,        19, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_boom_7L8L,        47, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_boom_9L10L,       92, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_boom_11L12L,      39, HOUSE_SIZE_1X1) {}

// Late Twentieth Century
item(FEAT_HOUSES, item_commercial_late_5L6L,        01, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_late_7L8L,        100,HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_late_9L10L,       38, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_late_11L12L,      90, HOUSE_SIZE_1X1) {}

// Post Y2K
item(FEAT_HOUSES, item_commercial_y2kp_5L6L,        02, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_y2kp_7L8L,        03, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_y2kp_9L10L,       98, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_commercial_y2kp_11L12L,      99, HOUSE_SIZE_1X1) {}

// SKYSCRAPERS
item(FEAT_HOUSES, item_bank_building,               86, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_enterprise_tower,            81, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_insurance_tower,             82, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_large_office_building,       79, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_modern_office_tower,         83, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_multimedia_offices,          80, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_office_tower,                78, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_sato_building,               84, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_sugiyama_office_building,    87, HOUSE_SIZE_1X1) {}
//item(FEAT_HOUSES, item_tsuno_building,            76, HOUSE_SIZE_1X2) {}  // 77,          FEAT_HOUSES
item(FEAT_HOUSES, item_ueda_office_block,           89, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_yamaguchi_office,            36, HOUSE_SIZE_1X1) {}
//item(FEAT_HOUSES, item_yamashiro_office_building, 102,HOUSE_SIZE_1X2) {}  // 103,         FEAT_HOUSES
# 1 "JPplusHousesCommercial.pnml" 4

// Primary Functions (i.e. do not use any other Function)
# 1 "src/functions/AdjacentToCommercial.pnml" 1
/* Begin Adjacent to Commercial */

/* Check for Commercial (Shops, Offices and Skyscrapers) within 1 tile excluding diagonals */
/* Begin Adjacent to Commercial */

/* Check for Commercial (Shops, Offices and Skyscrapers) within 1 tile excluding diagonals */

switch (FEAT_HOUSES, SELF, AdjacentToCommercialNE, nearby_tile_house_class(-1, 0) == 266 || nearby_tile_house_class(-1, 0) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, AdjacentToCommercialNW, nearby_tile_house_class( 0,-1) == 266 || nearby_tile_house_class( 0,-1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, AdjacentToCommercialSE, nearby_tile_house_class( 0, 1) == 266 || nearby_tile_house_class( 0, 1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, AdjacentToCommercialSW, nearby_tile_house_class( 1, 0) == 266 || nearby_tile_house_class( 1, 0) == 261 ) {return;}

switch (FEAT_HOUSES, SELF, AdjacentToCommercial, AdjacentToCommercialNE() || AdjacentToCommercialNW() || AdjacentToCommercialSE() || AdjacentToCommercialSW() ) {return;}
/*
switch (FEAT_HOUSES, SELF, DiagonalToCommercialN, nearby_tile_house_class(-1,-1) == 258 || nearby_tile_house_class(-1,-1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, DiagonalToCommercialE, nearby_tile_house_class(-1, 1) == 258 || nearby_tile_house_class(-1, 1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, DiagonalToCommercialS, nearby_tile_house_class( 1, 1) == 258 || nearby_tile_house_class( 1, 1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, DiagonalToCommercialW, nearby_tile_house_class( 1,-1) == 258 || nearby_tile_house_class( 1,-1) == 261 ) {return;}
*/
//switch (FEAT_HOUSES, SELF, DiagonalToCommercial, DiagonalToCommercialN() || DiagonalToCommercialE() || DiagonalToCommercialS() || DiagonalToCommercialW() ) {return;}

//switch (FEAT_HOUSES, SELF, CommercialWithinOneTile, AdjacentToCommercial() || DiagonalToCommercial() ) {return;}


/* End Adjacent to Commercial */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/AcrossRoads.pnml" 1
/* Begin AcrossRoads */

// Purpose of this function is to allow Class 2 and Class 5 to build across roads (and station tiles).

/* NORTHWEST */

/* One tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadNWOneTile, 		

	// Tile one tile away is a Road or Station tile
	( nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || nearby_tile_class( 0,-1) == TILE_CLASS_STATION ) 

&& 	// AND

	// Two tiles away in the same direction is either a Class 2 or Class 5 
	( nearby_tile_house_class ( 0,-2) == 266 || nearby_tile_house_class ( 0,-2) == 261 )

) {return;}

/* Two tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadNWTwoTiles, 
	// Tiles both one and two tiles away are Road tiles
	(	
		( nearby_tile_class( 0,-1) == TILE_CLASS_ROAD  || nearby_tile_class( 0,-1) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 0,-2) == TILE_CLASS_ROAD  || nearby_tile_class( 0,-2) == TILE_CLASS_STATION ) 
	) 
			
&& // AND
			
	// Three tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class ( 0,-3) == 266 || nearby_tile_house_class ( 0,-3) == 261)	
		
) {return;}

// Three tile wide road
switch (FEAT_HOUSES, SELF, AcrossRoadNWThreeTiles, 
	// Tiles one, two and three tiles away are all Road tiles
	(		
		( nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || nearby_tile_class( 0,-1) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 0,-2) == TILE_CLASS_ROAD || nearby_tile_class( 0,-2) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 0,-3) == TILE_CLASS_ROAD || nearby_tile_class( 0,-3) == TILE_CLASS_STATION )
	)

&& // AND
	
	// Four tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class ( 0,-4) == 266 || nearby_tile_house_class ( 0,-4) == 261 )
		
) {return;}


// Giving for NORTHWEST 
switch (FEAT_HOUSES, SELF, AcrossRoadNW, AcrossRoadNWOneTile() || AcrossRoadNWTwoTiles() || AcrossRoadNWThreeTiles() ) {return;}

/* SOUTHEAST */

/* One tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadSEOneTile, 		

	// Tile one tile away is a Road or Station tile
	( nearby_tile_class( 0, 1) == TILE_CLASS_ROAD || nearby_tile_class( 0, 1) == TILE_CLASS_STATION ) 

&& 	// AND

	// Two tiles away in the same direction is either a Class 2 or Class 5 
	( nearby_tile_house_class ( 0, 2) == 266 || nearby_tile_house_class ( 0, 2) == 261 )

) {return;}

/* Two tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadSETwoTiles, 
	// Tiles both one and two tiles away are Road tiles
	(	
		( nearby_tile_class( 0, 1) == TILE_CLASS_ROAD  || nearby_tile_class( 0, 1) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 0, 2) == TILE_CLASS_ROAD  || nearby_tile_class( 0, 2) == TILE_CLASS_STATION ) 
	) 
			
&& // AND
			
	// Three tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class ( 0, 3) == 266 || nearby_tile_house_class ( 0, 3) == 261)	
		
) {return;}

// Three tile wide road
switch (FEAT_HOUSES, SELF, AcrossRoadSEThreeTiles, 
	// Tiles one, two and three tiles away are all Road tiles
	(		
		( nearby_tile_class( 0, 1) == TILE_CLASS_ROAD || nearby_tile_class( 0, 1) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 0, 2) == TILE_CLASS_ROAD || nearby_tile_class( 0, 2) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 0, 3) == TILE_CLASS_ROAD || nearby_tile_class( 0, 3) == TILE_CLASS_STATION )
	)

&& // AND
	
	// Four tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class ( 0, 4) == 266 || nearby_tile_house_class ( 0, 4) == 261 )
		
) {return;}


// Giving for SOUTHEAST
switch (FEAT_HOUSES, SELF, AcrossRoadSE, AcrossRoadSEOneTile() || AcrossRoadSETwoTiles() || AcrossRoadSEThreeTiles() ) {return;}


/* NORTHEAST */

/* One tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadNEOneTile, 		

	// Tile one tile away is a Road or Station tile
	( nearby_tile_class(-1, 0) == TILE_CLASS_ROAD || nearby_tile_class(-1, 0) == TILE_CLASS_STATION ) 

&& 	// AND

	// Two tiles away in the same direction is either a Class 2 or Class 5 
	( nearby_tile_house_class (-2, 0) == 266 || nearby_tile_house_class (-2, 0) == 261 )

) {return;}

/* Two tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadNETwoTiles, 
	// Tiles both one and two tiles away are Road tiles
	(	
		( nearby_tile_class(-1, 0) == TILE_CLASS_ROAD  || nearby_tile_class(-1, 0) == TILE_CLASS_STATION ) && 
		( nearby_tile_class(-2, 0) == TILE_CLASS_ROAD  || nearby_tile_class(-2, 0) == TILE_CLASS_STATION ) 
	) 
			
&& // AND
			
	// Three tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class (-3, 0) == 266 || nearby_tile_house_class (-3, 0) == 261)	
		
) {return;}

// Three tile wide road
switch (FEAT_HOUSES, SELF, AcrossRoadNEThreeTiles, 
	// Tiles one, two and three tiles away are all Road tiles
	(		
		( nearby_tile_class(-1, 0) == TILE_CLASS_ROAD || nearby_tile_class(-1, 0) == TILE_CLASS_STATION ) && 
		( nearby_tile_class(-2, 0) == TILE_CLASS_ROAD || nearby_tile_class(-2, 0) == TILE_CLASS_STATION ) && 
		( nearby_tile_class(-3, 0) == TILE_CLASS_ROAD || nearby_tile_class(-3, 0) == TILE_CLASS_STATION )
	)

&& // AND
	
	// Four tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class (-4, 0) == 266 || nearby_tile_house_class (-4, 0) == 261 )
		
) {return;}


// Giving for NORTHEAST
switch (FEAT_HOUSES, SELF, AcrossRoadNE, AcrossRoadNEOneTile() || AcrossRoadNETwoTiles() || AcrossRoadNEThreeTiles() ) {return;}


// SOUTHWEST

/* One tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadSWOneTile, 		

	// Tile one tile away is a Road or Station tile
	( nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION ) 

&& 	// AND

	// Two tiles away in the same direction is either a Class 2 or Class 5 
	( nearby_tile_house_class ( 2, 0) == 266 || nearby_tile_house_class ( 2, 0) == 261 )

) {return;}

/* Two tile wide road */

switch (FEAT_HOUSES, SELF, AcrossRoadSWTwoTiles, 
	// Tiles both one and two tiles away are Road tiles
	(	
		( nearby_tile_class( 1, 0) == TILE_CLASS_ROAD  || nearby_tile_class( 1, 0) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 2, 0) == TILE_CLASS_ROAD  || nearby_tile_class( 2, 0) == TILE_CLASS_STATION ) 
	) 
			
&& // AND
			
	// Three tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class ( 3, 0) == 266 || nearby_tile_house_class ( 3, 0) == 261)	
		
) {return;}

// Three tile wide road
switch (FEAT_HOUSES, SELF, AcrossRoadSWThreeTiles, 
	// Tiles one, two and three tiles away are all Road tiles
	(		
		( nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 2, 0) == TILE_CLASS_ROAD || nearby_tile_class( 2, 0) == TILE_CLASS_STATION ) && 
		( nearby_tile_class( 3, 0) == TILE_CLASS_ROAD || nearby_tile_class( 3, 0) == TILE_CLASS_STATION )
	)

&& // AND
	
	// Four tiles away in the same direction is either a Class 2 or Class 5 
	(nearby_tile_house_class ( 4, 0) == 266 || nearby_tile_house_class ( 4, 0) == 261 )
		
) {return;}


// Giving for SOUTHWEST
switch (FEAT_HOUSES, SELF, AcrossRoadSW, AcrossRoadSWOneTile() || AcrossRoadSWTwoTiles() || AcrossRoadSWThreeTiles() ) {return;}


// Combining All four
switch (FEAT_HOUSES, SELF, AcrossRoads, AcrossRoadSE() || AcrossRoadSW() || AcrossRoadNE() || AcrossRoadNW() ) {return;}
 
/* End AcrossRoads */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/AcrossTracks.pnml" 1
/* Begin Across Tracks */

switch (FEAT_HOUSES, SELF, AcrossTracks, 
		// Direction 1
	(	
		(
			(	
			nearby_tile_class( 0,-1) == TILE_CLASS_RAIL && 
			nearby_tile_class( 0,-2) == TILE_CLASS_RAIL 
			) 
			&& 
			(	
			nearby_tile_house_class ( 0,-3) == 266 || 
			nearby_tile_house_class ( 0,-3) == 261
			)
		)
		||
		(
			(
			nearby_tile_class( 0,-1) == TILE_CLASS_RAIL && 
			nearby_tile_class( 0,-2) == TILE_CLASS_RAIL &&
			nearby_tile_class( 0,-3) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class ( 0,-4) == 266 || 
			nearby_tile_house_class ( 0,-4) == 261 
			)
		)
		||
		(
			(
			nearby_tile_class( 0,-1) == TILE_CLASS_RAIL && 
			nearby_tile_class( 0,-2) == TILE_CLASS_RAIL &&
			nearby_tile_class( 0,-3) == TILE_CLASS_RAIL &&
			nearby_tile_class( 0,-4) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class ( 0,-5) == 266 || 
			nearby_tile_house_class ( 0,-5) == 261 
			)
		)
	) 
	
	||	// Direction 2 

	(	
		(
			(	
			nearby_tile_class( 0, 1) == TILE_CLASS_RAIL && 
			nearby_tile_class( 0, 2) == TILE_CLASS_RAIL 
			) 
			&& 
			(	
			nearby_tile_house_class ( 0, 3) == 266 || 
			nearby_tile_house_class ( 0, 3) == 261
			)
		)
		||
		(
			(
			nearby_tile_class( 0, 1) == TILE_CLASS_RAIL && 
			nearby_tile_class( 0, 2) == TILE_CLASS_RAIL &&
			nearby_tile_class( 0, 3) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class ( 0, 4) == 266 || 
			nearby_tile_house_class ( 0, 4) == 261 
			)
		)
		||
		(
			(
			nearby_tile_class( 0, 1) == TILE_CLASS_RAIL && 
			nearby_tile_class( 0, 2) == TILE_CLASS_RAIL &&
			nearby_tile_class( 0, 3) == TILE_CLASS_RAIL &&
			nearby_tile_class( 0, 4) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class ( 0, 5) == 266 || 
			nearby_tile_house_class ( 0, 5) == 261 
			)
		)
	) 
	
	|| 	// Direction 3

	(	
		(
			(	
			nearby_tile_class(-1, 0) == TILE_CLASS_RAIL && 
			nearby_tile_class(-2, 0) == TILE_CLASS_RAIL 
			) 
			&& 
			(	
			nearby_tile_house_class (-3, 0) == 266 || 
			nearby_tile_house_class (-3, 0) == 261
			)
		)
		||
		(
			(
			nearby_tile_class(-1, 0) == TILE_CLASS_RAIL && 
			nearby_tile_class(-2, 0) == TILE_CLASS_RAIL &&
			nearby_tile_class(-3, 0) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class (-4, 0) == 266 || 
			nearby_tile_house_class (-4, 0) == 261 
			)
		)
		||
		(
			(
			nearby_tile_class(-1, 0) == TILE_CLASS_RAIL && 
			nearby_tile_class(-2, 0) == TILE_CLASS_RAIL &&
			nearby_tile_class(-3, 0) == TILE_CLASS_RAIL &&
			nearby_tile_class(-4, 0) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class (-5, 0) == 266 || 
			nearby_tile_house_class (-5, 0) == 261 
			)
		)
	) 
		
	||	// Direction 4

	(	
		(
			(	
			nearby_tile_class( 1, 0) == TILE_CLASS_RAIL && 
			nearby_tile_class( 2, 0) == TILE_CLASS_RAIL 
			) 
			&& 
			(	
			nearby_tile_house_class ( 3, 0) == 266 || 
			nearby_tile_house_class ( 3, 0) == 261
			)
		)
		||
		(
			(
			nearby_tile_class( 1, 0) == TILE_CLASS_RAIL && 
			nearby_tile_class( 2, 0) == TILE_CLASS_RAIL &&
			nearby_tile_class( 3, 0) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class ( 4, 0) == 266 || 
			nearby_tile_house_class ( 4, 0) == 261 
			)
		)
		||
		(
			(
			nearby_tile_class( 1, 0) == TILE_CLASS_RAIL && 
			nearby_tile_class( 2, 0) == TILE_CLASS_RAIL &&
			nearby_tile_class( 3, 0) == TILE_CLASS_RAIL &&
			nearby_tile_class( 4, 0) == TILE_CLASS_RAIL
			)
			&&
			(
			nearby_tile_house_class ( 5, 0) == 266 || 
			nearby_tile_house_class ( 5, 0) == 261 
			)
		)
	) 
) {return;}

/* End Across Tracks */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/FuncServiceMAIL.pnml" 1
/* Mail Service Check */
switch(FEAT_HOUSES, SELF, FuncServiceMAIL, 	(cargo_accepted_nearby_last_month(MAIL) == 1 || cargo_accepted_nearby_this_month(MAIL) == 1)) {return;}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/FuncServicePASS.pnml" 1
/* Passenger Service Check */
switch(FEAT_HOUSES, SELF, FuncServicePASS, 	(cargo_accepted_nearby_last_month(PASS) == 1 || cargo_accepted_nearby_this_month(PASS) == 1)) {return;}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/HasRoadAdjacent.pnml" 1
/* Check for road (and stations) in adjacent tiles functions */
switch (FEAT_HOUSES, SELF, HasRoadAdjacentNE, nearby_tile_class(-1, 0) == TILE_CLASS_ROAD || nearby_tile_class(-1, 0) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentNW, nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || nearby_tile_class( 0,-1) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSE, nearby_tile_class( 0, 1) == TILE_CLASS_ROAD || nearby_tile_class( 0, 1) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSW, nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION) {return;}

//switch (FEAT_HOUSES, SELF, HasRoadAdjacentE, nearby_tile_class(-1, 1) == TILE_CLASS_ROAD || nearby_tile_class(-1, 1) == TILE_CLASS_STATION) {return;}
//switch (FEAT_HOUSES, SELF, HasRoadAdjacentS, nearby_tile_class( 1, 1) == TILE_CLASS_ROAD || nearby_tile_class( 1, 1) == TILE_CLASS_STATION) {return;}
//switch (FEAT_HOUSES, SELF, HasRoadAdjacentW, nearby_tile_class( 1,-1) == TILE_CLASS_ROAD || nearby_tile_class( 1,-1) == TILE_CLASS_STATION) {return;}

/*
switch (FEAT_HOUSES, SELF, HasRoadAdjacentNWSW, nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || nearby_tile_class( 0,-1) == TILE_CLASS_STATION || 
	nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION) {return;}
*/
/*
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSESW, nearby_tile_class( 0, 1) == TILE_CLASS_ROAD || nearby_tile_class( 0, 1) == TILE_CLASS_STATION || 
	nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION) {return;}
*/
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/IsCity.pnml" 1
/* Function to check if City */
switch (FEAT_HOUSES, PARENT, IsCity, is_city == 1) {return;}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/IsUniqueHouse.pnml" 1
/* House is Unique */
switch (FEAT_HOUSES, SELF, IsUniqueHouse, same_house_count_town == 0) {return;}
# 1 "JPplusHousesCommercial.pnml" 4
//#include "src/functions/OnGenerationOnly.pnml"
# 1 "src/functions/Population.pnml" 1
/* Begin Population */

switch (FEAT_HOUSES, PARENT, Population, population) {return;}

/* End Population*/
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/PopulationThresholdsCommercial.pnml" 1
/* Population Thresholds*/
switch (FEAT_HOUSES, PARENT, PopOver7L8LCommercialThreshold,   population >= param_commercial_threshold_7L8L)   {return;}
switch (FEAT_HOUSES, PARENT, PopOver9L10LCommercialThreshold,  population >= param_commercial_threshold_9L10L)  {return;}
switch (FEAT_HOUSES, PARENT, PopOver11L12LCommercialThreshold, population >= param_commercial_threshold_11L12L) {return;}
# 1 "JPplusHousesCommercial.pnml" 4
//#include "src/functions/TileGap.pnml"

// Secondary Functions (i.e. those that use Primary Functions, therefore must appear later)
# 1 "src/functions/SpriteDirections.pnml" 1
/* Begin Sprite Directions*/

/*

When using Sprite Directions, list out the outcomes desired with the following results the switch in the nml file for the House

0 
1  SE Only
2  SW Only
3  SE && SW		SOUTH
4  NW Only
5  NW && SE		
6  NW && SW		WEST
7  NW, SE, SW
8  NE Only
9  NE && SE		EAST
10 NE && SW
11 NE, SE, SW
12 NE && NW		NORTH
13 NE, NW, SE
14 NE, NW, SW
15 All			ALL

*/

// Road to the SE
switch (FEAT_HOUSES, SELF, switch_SE_facing, HasRoadAdjacentSE() )
	{1: return 1; return 0;}

// Road to the SW
switch (FEAT_HOUSES, SELF, switch_SW_facing, HasRoadAdjacentSW() )
	{1: return 2; return 0;}

// Road to the NW
switch (FEAT_HOUSES, SELF, switch_NW_facing, HasRoadAdjacentNW() )
	{1: return 4; return 0;}

// Road to the NE
switch (FEAT_HOUSES, SELF, switch_NE_facing, HasRoadAdjacentNE() )
	{1: return 8; return 0;}

switch (FEAT_HOUSES, SELF, SpriteDirections, 
	switch_SE_facing() + 	// 0 or 1
	switch_SW_facing() +	// 0 or 2
	switch_NW_facing() +	// 0 or 4
	switch_NE_facing()		// 0 or 8
){return;}


/* End Sprite Directions */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/CommercialPopCheck.pnml" 1
/* Begin Commercial Population Checks */

switch (FEAT_HOUSES, SELF, CommercialPopCheck, 
	
	same_class_count_town < Population() / 1000

	||

	same_class_count_town == 0

) {return;}

/* End Commercial Population Checks */
# 1 "JPplusHousesCommercial.pnml" 4
//#include "src/functions/HouseGap.pnml"
//#include "src/functions/SmallApartmentsCheck.pnml"
# 1 "src/functions/ClusterBuildingClass.pnml" 1
/* Begin Cluster Building Class */

/* Buildings after the first of the class must cluster near the same class */

switch (FEAT_HOUSES, SELF, ClusterBuildingClass, 
	// If first of class and Town Zone Centre ("4"), then allow 
	same_class_count_town == 0  || 								
	
	// Thereafter, must be adjacent to a Commercial building (Class 10 or Class 5)
	AdjacentToCommercial() ||								

	/* SPECIFIC EXCEPTIONS */

	// Allow to build across roads of varying width (1, 2 and 3 tiles) from a Class 2 or Class 5 Building
	AcrossRoads()  ||									
	
	// Allow building across tracks from a Class 2 or Class 5 
	AcrossTracks()
	
	) {return;}

/* End Cluster Building Class */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/IfFirstSkyscraper.pnml" 1
/* Begin If First Skyscraper */

// Allow first skyscraper to build near Class 2
switch (FEAT_HOUSES, SELF, IfFirstSkyscraper, 
	((same_class_count_town == 0 && AdjacentToCommercial() ) || 
	nearest_house_matching_criterion(2, SEARCH_HOUSE_BY_CLASS) >= 1 )
) {return;}

/* End If First Skyscraper */
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/CommercialCargoes.pnml" 1
/* Begin Commercial Cargoes */

switch(FEAT_HOUSES, SELF, CommercialCargoes,
	param_commercial_cargoes == 0 ||                            // No Cargo requirements - return 1 if no cargoes selected 
	(param_commercial_cargoes == 1 && FuncServiceMAIL() )       // Mail - return 1 if Mail delivered
) {return;}

/* End Commercial Cargoes*/
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/functions/ProtectCommercial.pnml" 1
/* Begin Protect Commercial*/

/* When Population factor unsufficient, then protect current Commercial */

// Purpose of this is to prevent the Commercial cluster from splitting

switch (FEAT_HOUSES, SELF, ProtectCommercial, 
	// Check if there is NOT sufficient population to build another Commercial
	!CommercialPopCheck() &&

    // Passenger service remains in place
    FuncServicePASS() 
	
	) {return;}

/* End Protect Commercial */
# 1 "JPplusHousesCommercial.pnml" 4

// GROUND
# 1 "src/houses/ground/ground.pnml" 1
// Begin ground

// Grass
spriteset (spr_ground_grass, 							"src/houses/ground/grass.png") 					{template_ground(1,1)}
// Snow
spriteset (spr_ground_snow, 						    "src/houses/ground/snow.png") 					{template_ground(1,1)}
// Concrete
spriteset (spr_ground_concrete, 						"src/houses/ground/concrete.png") 				{template_ground(1,1)}
// Temple
spriteset (spr_ground_temple, 							"src/houses/ground/temple.png") 				{template_ground(1,1)}
// Shiro
spriteset (spr_ground_shiro, 							"src/houses/ground/shiro.png") 					{template_ground(1,1)}

// End ground
# 1 "JPplusHousesCommercial.pnml" 4

// SPRITES

// Commercial
# 1 "src/houses/commercial/aoki_office/aoki_office.pnml" 1
// Begin aoki_office

// Building Sprites
spriteset (spr_aoki_office_6L_norm, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(1,1)}
spriteset (spr_aoki_office_6L_snow, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(400,1)}

spriteset (spr_aoki_office_8L_norm, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(1,130)}
spriteset (spr_aoki_office_8L_snow, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(400,130)}

spriteset (spr_aoki_office_10L_norm, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(1,259)}
spriteset (spr_aoki_office_10L_snow, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(400,259)}

spriteset (spr_aoki_office_12L_norm, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(1,388)}
spriteset (spr_aoki_office_12L_snow, 				"src/houses/commercial/aoki_office/building.png") 					{template_house_128(400,388)}

// Ground Tiles
spriteset (spr_aoki_office_ground, 					"src/houses/commercial/aoki_office/ground.png") 					{template_ground(1,1)}
spriteset (spr_aoki_office_ground_snow, 			"src/houses/commercial/aoki_office/ground.png") 					{template_ground(1,33)}

// Spritelayouts
// 6L
spritelayout sprlay_aoki_office_6L_norm {
	ground {
		sprite: spr_aoki_office_ground(construction_state);
	}
	building {
		sprite: spr_aoki_office_6L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoki_office_6L_snow {
	ground {
		sprite: spr_aoki_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoki_office_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 8L
spritelayout sprlay_aoki_office_8L_norm {
	ground {
		sprite: spr_aoki_office_ground(construction_state);
	}
	building {
		sprite: spr_aoki_office_8L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoki_office_8L_snow {
	ground {
		sprite: spr_aoki_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoki_office_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 10L
spritelayout sprlay_aoki_office_10L_norm {
	ground {
		sprite: spr_aoki_office_ground(construction_state);
	}
	building {
		sprite: spr_aoki_office_10L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoki_office_10L_snow {
	ground {
		sprite: spr_aoki_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoki_office_10L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 12L
spritelayout sprlay_aoki_office_12L_norm {
	ground {
		sprite: spr_aoki_office_ground(construction_state);
	}
	building {
		sprite: spr_aoki_office_12L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoki_office_12L_snow {
	ground {
		sprite: spr_aoki_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoki_office_12L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_aoki_office_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoki_office_6L_snow;
	sprlay_aoki_office_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_aoki_office_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoki_office_8L_snow;
	sprlay_aoki_office_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_aoki_office_10L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoki_office_10L_snow;
	sprlay_aoki_office_10L_norm;
}

switch(FEAT_HOUSES, SELF, switch_aoki_office_12L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoki_office_12L_snow;
	sprlay_aoki_office_12L_norm;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_aoki_office_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// End aoki_office
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/aoyama_office/aoyama_office.pnml" 1
// Begin aoyama_office

// Building Sprites
spriteset (spr_aoyama_office_5L_norm, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(1,1)}
spriteset (spr_aoyama_office_5L_snow, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(400,1)}

spriteset (spr_aoyama_office_6L_norm, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(1,130)}
spriteset (spr_aoyama_office_6L_snow, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(400,130)}

spriteset (spr_aoyama_office_7L_norm, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(1,259)}
spriteset (spr_aoyama_office_7L_snow, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(400,259)}

spriteset (spr_aoyama_office_8L_norm, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(1,388)}
spriteset (spr_aoyama_office_8L_snow, 				"src/houses/commercial/aoyama_office/building.png") 				{template_house_128(400,388)}

// Ground Tiles
spriteset (spr_aoyama_office_ground, 				"src/houses/commercial/aoyama_office/ground.png") 					{template_ground(1,1)}
spriteset (spr_aoyama_office_ground_snow, 			"src/houses/commercial/aoyama_office/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 5-storey
spritelayout sprlay_aoyama_office_5L_norm {
	ground {
		sprite: spr_aoyama_office_ground(construction_state);
	}
	building {
		sprite: spr_aoyama_office_5L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoyama_office_5L_snow {
	ground {
		sprite: spr_aoyama_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoyama_office_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-storey
spritelayout sprlay_aoyama_office_6L_norm {
	ground {
		sprite: spr_aoyama_office_ground(construction_state);
	}
	building {
		sprite: spr_aoyama_office_6L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoyama_office_6L_snow {
	ground {
		sprite: spr_aoyama_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoyama_office_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 7-storey
spritelayout sprlay_aoyama_office_7L_norm {
	ground {
		sprite: spr_aoyama_office_ground(construction_state);
	}
	building {
		sprite: spr_aoyama_office_7L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoyama_office_7L_snow {
	ground {
		sprite: spr_aoyama_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoyama_office_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 8-storey
spritelayout sprlay_aoyama_office_8L_norm {
	ground {
		sprite: spr_aoyama_office_ground(construction_state);
	}
	building {
		sprite: spr_aoyama_office_8L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_aoyama_office_8L_snow {
	ground {
		sprite: spr_aoyama_office_ground_snow(construction_state);
	}
	building {
		sprite: spr_aoyama_office_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_aoyama_office_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoyama_office_5L_snow;
	sprlay_aoyama_office_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_aoyama_office_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoyama_office_6L_snow;
	sprlay_aoyama_office_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_aoyama_office_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoyama_office_7L_snow;
	sprlay_aoyama_office_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_aoyama_office_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_aoyama_office_8L_snow;
	sprlay_aoyama_office_8L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_aoyama_office_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/ishida_commercial_building/ishida_commercial_building.pnml" 1
// Begin ishida_commercial_building

// Building Sprites
spriteset (spr_ishida_commercial_building_11L_norm, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(1,1)}
spriteset (spr_ishida_commercial_building_11L_snow, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(400,1)}

spriteset (spr_ishida_commercial_building_13L_norm, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(1,130)}
spriteset (spr_ishida_commercial_building_13L_snow, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(400,130)}

spriteset (spr_ishida_commercial_building_15L_norm, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(1,259)}
spriteset (spr_ishida_commercial_building_15L_snow, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(400,259)}

spriteset (spr_ishida_commercial_building_16L_norm, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(1,388)}
spriteset (spr_ishida_commercial_building_16L_snow, 			"src/houses/commercial/ishida_commercial_building/building.png") 				{template_house_128(400,388)}

// Ground Tiles
spriteset (spr_ishida_commercial_building_ground, 				"src/houses/commercial/ishida_commercial_building/ground.png") 					{template_ground(1,1)}
spriteset (spr_ishida_commercial_building_ground_snow, 			"src/houses/commercial/ishida_commercial_building/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 11-storey
spritelayout sprlay_ishida_commercial_building_11L_norm {
	ground {
		sprite: spr_ishida_commercial_building_ground(3);
	}
	building {
		sprite: spr_ishida_commercial_building_11L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishida_commercial_building_11L_snow {
	ground {
		sprite: spr_ishida_commercial_building_ground_snow(3);
	}
	building {
		sprite: spr_ishida_commercial_building_11L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 13-storey
spritelayout sprlay_ishida_commercial_building_13L_norm {
	ground {
		sprite: spr_ishida_commercial_building_ground(3);
	}
	building {
		sprite: spr_ishida_commercial_building_13L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishida_commercial_building_13L_snow {
	ground {
		sprite: spr_ishida_commercial_building_ground_snow(3);
	}
	building {
		sprite: spr_ishida_commercial_building_13L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 15-storey
spritelayout sprlay_ishida_commercial_building_15L_norm {
	ground {
		sprite: spr_ishida_commercial_building_ground(3);
	}
	building {
		sprite: spr_ishida_commercial_building_15L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishida_commercial_building_15L_snow {
	ground {
		sprite: spr_ishida_commercial_building_ground_snow(3);
	}
	building {
		sprite: spr_ishida_commercial_building_15L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 16-storey
spritelayout sprlay_ishida_commercial_building_16L_norm {
	ground {
		sprite: spr_ishida_commercial_building_ground(3);
	}
	building {
		sprite: spr_ishida_commercial_building_16L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishida_commercial_building_16L_snow {
	ground {
		sprite: spr_ishida_commercial_building_ground_snow(3);
	}
	building {
		sprite: spr_ishida_commercial_building_16L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_ishida_commercial_building_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishida_commercial_building_11L_snow;
	sprlay_ishida_commercial_building_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_ishida_commercial_building_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishida_commercial_building_13L_snow;
	sprlay_ishida_commercial_building_13L_norm;
}

switch(FEAT_HOUSES, SELF, switch_ishida_commercial_building_15L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishida_commercial_building_15L_snow;
	sprlay_ishida_commercial_building_15L_norm;
}

switch(FEAT_HOUSES, SELF, switch_ishida_commercial_building_16L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishida_commercial_building_16L_snow;
	sprlay_ishida_commercial_building_16L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_ishida_commercial_building_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
//#include "src/houses/commercial/hotel_grand/hotel_grand.pnml"
//#include "src/houses/commercial/hotel/hotel.pnml"
//#include "src/houses/commercial/hotel_old/hotel_old.pnml"
# 1 "src/houses/commercial/hashimoto_office_tower/hashimoto_office_tower.pnml" 1
// Begin hashimoto_office_tower

// Building Sprites
spriteset (spr_hashimoto_office_tower_a_9L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(1,1)}
spriteset (spr_hashimoto_office_tower_a_9L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(400,1)}

spriteset (spr_hashimoto_office_tower_b_10L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(1,1)}
spriteset (spr_hashimoto_office_tower_b_10L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(400,1)}

spriteset (spr_hashimoto_office_tower_a_11L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(1,130)}
spriteset (spr_hashimoto_office_tower_a_11L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(400,130)}

spriteset (spr_hashimoto_office_tower_b_12L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(1,130)}
spriteset (spr_hashimoto_office_tower_b_12L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(400,130)}

spriteset (spr_hashimoto_office_tower_a_13L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(1,259)}
spriteset (spr_hashimoto_office_tower_a_13L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(400,259)}

spriteset (spr_hashimoto_office_tower_b_14L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(1,259)}
spriteset (spr_hashimoto_office_tower_b_14L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(400,259)}

spriteset (spr_hashimoto_office_tower_a_15L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(1,388)}
spriteset (spr_hashimoto_office_tower_a_15L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_a.png") 				{template_house_128(400,388)}

spriteset (spr_hashimoto_office_tower_b_16L_norm, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(1,388)}
spriteset (spr_hashimoto_office_tower_b_16L_snow, 				"src/houses/commercial/hashimoto_office_tower/building_b.png") 				{template_house_128(400,388)}

// Ground Tiles
spriteset (spr_hashimoto_office_tower_ground, 					"src/houses/commercial/hashimoto_office_tower/ground.png") 					{template_ground(1,1)}
spriteset (spr_hashimoto_office_tower_ground_snow, 				"src/houses/commercial/hashimoto_office_tower/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// A

// Normal Sprites
spritelayout sprlay_hashimoto_office_tower_a_9L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_9L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_a_11L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_11L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_a_13L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_13L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_a_15L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_15L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hashimoto_office_tower_a_9L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_9L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_a_11L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_11L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_a_13L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_13L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_a_15L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_a_15L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

// B

// Normal Sprites
spritelayout sprlay_hashimoto_office_tower_b_10L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_10L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_b_12L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_12L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_b_14L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_14L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_b_16L_norm {
	ground {
		sprite: spr_hashimoto_office_tower_ground (3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_16L_norm (3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hashimoto_office_tower_b_10L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_10L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}
spritelayout sprlay_hashimoto_office_tower_b_12L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_12L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_b_14L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_14L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hashimoto_office_tower_b_16L_snow {
	ground {
		sprite: 		spr_hashimoto_office_tower_ground_snow(3);
	}
	building {
		sprite: 		spr_hashimoto_office_tower_b_16L_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites

// A
switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_a_9L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_a_9L_snow;
	sprlay_hashimoto_office_tower_a_9L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_a_11L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_a_11L_snow;
	sprlay_hashimoto_office_tower_a_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_a_13L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_a_13L_snow;
	sprlay_hashimoto_office_tower_a_13L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_a_15L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_a_15L_snow;
	sprlay_hashimoto_office_tower_a_15L_norm;
}

// B
switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_b_10L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_b_10L_snow;
	sprlay_hashimoto_office_tower_b_10L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_b_12L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_b_12L_snow;
	sprlay_hashimoto_office_tower_b_12L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_b_14L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_b_14L_snow;
	sprlay_hashimoto_office_tower_b_14L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hashimoto_office_tower_b_16L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_hashimoto_office_tower_b_16L_snow;
	sprlay_hashimoto_office_tower_b_16L_norm;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_hashimoto_office_tower_9L_snow) {
	1: switch_hashimoto_office_tower_a_9L_sprites;
	1: switch_hashimoto_office_tower_b_10L_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_hashimoto_office_tower_11L_snow) {
	1: switch_hashimoto_office_tower_a_11L_sprites;
	1: switch_hashimoto_office_tower_b_12L_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_hashimoto_office_tower_13L_snow) {
	1: switch_hashimoto_office_tower_a_13L_sprites;
	1: switch_hashimoto_office_tower_b_14L_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_hashimoto_office_tower_15L_snow) {
	1: switch_hashimoto_office_tower_a_15L_sprites;
	1: switch_hashimoto_office_tower_b_16L_sprites;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_hashimoto_office_tower_colors)
	{
		//1: PALETTE_CC_RED;
		//2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		//1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		//2: PALETTE_CC_DARK_GREEN;
		//3: PALETTE_CC_CREAM;
		//1: PALETTE_CC_MAUVE;
		//4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// End hashimoto_office_tower
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/ishii_office_tower/ishii_office_tower.pnml" 1
// Begin ishii_office_tower

// Building Sprites
spriteset (spr_ishii_office_tower_11L_norm, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(1,1)}
spriteset (spr_ishii_office_tower_11L_snow, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(400,454)}

spriteset (spr_ishii_office_tower_13L_norm, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(1,1)}
spriteset (spr_ishii_office_tower_13L_snow, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(400,303)}

spriteset (spr_ishii_office_tower_15L_norm, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(1,1)}
spriteset (spr_ishii_office_tower_15L_snow, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(400,152)}

spriteset (spr_ishii_office_tower_17L_norm, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(1,1)}
spriteset (spr_ishii_office_tower_17L_snow, 					"src/houses/commercial/ishii_office_tower/building.png") 				{template_house_150(400,1)}

// Ground Tiles
spriteset (spr_ishii_office_tower_ground, 						"src/houses/commercial/ishii_office_tower/ground.png") 					{template_ground(1,1)}
spriteset (spr_ishii_office_tower_ground_snow, 					"src/houses/commercial/ishii_office_tower/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 11-storey
spritelayout sprlay_ishii_office_tower_11L_norm {
	ground {
		sprite: spr_ishii_office_tower_ground(3);
	}
	building {
		sprite: spr_ishii_office_tower_11L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishii_office_tower_11L_snow {
	ground {
		sprite: spr_ishii_office_tower_ground_snow(3);
	}
	building {
		sprite: spr_ishii_office_tower_11L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 13-storey
spritelayout sprlay_ishii_office_tower_13L_norm {
	ground {
		sprite: spr_ishii_office_tower_ground(3);
	}
	building {
		sprite: spr_ishii_office_tower_13L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishii_office_tower_13L_snow {
	ground {
		sprite: spr_ishii_office_tower_ground_snow(3);
	}
	building {
		sprite: spr_ishii_office_tower_13L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 15-storey
spritelayout sprlay_ishii_office_tower_15L_norm {
	ground {
		sprite: spr_ishii_office_tower_ground(3);
	}
	building {
		sprite: spr_ishii_office_tower_15L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishii_office_tower_15L_snow {
	ground {
		sprite: spr_ishii_office_tower_ground_snow(3);
	}
	building {
		sprite: spr_ishii_office_tower_15L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 17-storey
spritelayout sprlay_ishii_office_tower_17L_norm {
	ground {
		sprite: spr_ishii_office_tower_ground(3);
	}
	building {
		sprite: spr_ishii_office_tower_17L_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_ishii_office_tower_17L_snow {
	ground {
		sprite: spr_ishii_office_tower_ground_snow(3);
	}
	building {
		sprite: spr_ishii_office_tower_17L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_ishii_office_tower_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishii_office_tower_11L_snow;
	sprlay_ishii_office_tower_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_ishii_office_tower_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishii_office_tower_13L_snow;
	sprlay_ishii_office_tower_13L_norm;
}

switch(FEAT_HOUSES, SELF, switch_ishii_office_tower_15L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishii_office_tower_15L_snow;
	sprlay_ishii_office_tower_15L_norm;
}

switch(FEAT_HOUSES, SELF, switch_ishii_office_tower_17L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ishii_office_tower_17L_snow;
	sprlay_ishii_office_tower_17L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_ishii_office_tower_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// End ishii_office_tower
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/obuilding/obuilding.pnml" 1
// Begin O-Building

// Building Sprites
spriteset (spr_obuilding, 						"src/houses/commercial/obuilding/building.png") 					{template_house_128(1,1)}
spriteset (spr_obuilding_snow, 					"src/houses/commercial/obuilding/building.png") 					{template_house_128(1,130)}

// Ground Tiles
spriteset (spr_obuilding_ground, 				"src/houses/commercial/obuilding/ground.png") 						{template_ground(1,1)}
spriteset (spr_obuilding_ground_snow, 			"src/houses/commercial/obuilding/ground.png") 						{template_ground(1,33)}

// Spritelayouts
spritelayout sprlay_obuilding_norm {
	ground {
		sprite: spr_obuilding_ground(3);
	}
	building {
		sprite: spr_obuilding(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_obuilding_snow {
	ground {
		sprite: spr_obuilding_ground_snow(3);
	}
	building {
		sprite: spr_obuilding_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_obuilding_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_obuilding_snow;
	sprlay_obuilding_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_obuilding_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/okada_office_tower/okada_office_tower.pnml" 1
// Begin okada_office_tower

// Building Sprites
spriteset (spr_okada_office_tower_a_6L_norm, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(1,1)}
spriteset (spr_okada_office_tower_a_6L_snow, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(400,1)}

spriteset (spr_okada_office_tower_b_6L_norm, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(1,1)}
spriteset (spr_okada_office_tower_b_6L_snow, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(400,1)}

spriteset (spr_okada_office_tower_a_8L_norm, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(1,130)}
spriteset (spr_okada_office_tower_a_8L_snow, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(400,130)}

spriteset (spr_okada_office_tower_b_8L_norm, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(1,130)}
spriteset (spr_okada_office_tower_b_8L_snow, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(400,130)}

spriteset (spr_okada_office_tower_a_10L_norm, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(1,259)}
spriteset (spr_okada_office_tower_a_10L_snow, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(400,259)}

spriteset (spr_okada_office_tower_b_10L_norm, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(1,259)}
spriteset (spr_okada_office_tower_b_10L_snow, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(400,259)}

spriteset (spr_okada_office_tower_a_12L_norm, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(1,388)}
spriteset (spr_okada_office_tower_a_12L_snow, 				"src/houses/commercial/okada_office_tower/building_a.png") 					{template_house_128(400,388)}

spriteset (spr_okada_office_tower_b_12L_norm, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(1,388)}
spriteset (spr_okada_office_tower_b_12L_snow, 				"src/houses/commercial/okada_office_tower/building_b.png") 					{template_house_128(400,388)}

// Ground Tiles
spriteset (spr_okada_office_tower_ground, 					"src/houses/commercial/okada_office_tower/ground.png") 						{template_ground(1,1)}
spriteset (spr_okada_office_tower_ground_snow, 				"src/houses/commercial/okada_office_tower/ground.png") 						{template_ground(1,33)}

// Spritelayouts

// 6-storey
spritelayout sprlay_okada_office_tower_a_6L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_6L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_a_6L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_6L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_6L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_6L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_6L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_6L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// 8-storey
spritelayout sprlay_okada_office_tower_a_8L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_8L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_a_8L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_8L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_8L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_8L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_8L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_8L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// 10-storey
spritelayout sprlay_okada_office_tower_a_10L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_10L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_a_10L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_10L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_10L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_10L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_10L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_10L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// 12-storey
spritelayout sprlay_okada_office_tower_a_12L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_12L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_a_12L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_a_12L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_12L_norm {
	ground {
		sprite: spr_okada_office_tower_ground (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_12L_norm (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_okada_office_tower_b_12L_snow {
	ground {
		sprite: spr_okada_office_tower_ground_snow (construction_state);
	}
	building {
		sprite: spr_okada_office_tower_b_12L_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_okada_office_tower_a_6L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_a_6L_snow;
	sprlay_okada_office_tower_a_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_okada_office_tower_b_6L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_b_6L_snow;
	sprlay_okada_office_tower_b_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_okada_office_tower_a_8L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_a_8L_snow;
	sprlay_okada_office_tower_a_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_okada_office_tower_b_8L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_b_8L_snow;
	sprlay_okada_office_tower_b_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_okada_office_tower_a_10L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_a_10L_snow;
	sprlay_okada_office_tower_a_10L_norm;
}

switch(FEAT_HOUSES, SELF, switch_okada_office_tower_b_10L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_b_10L_snow;
	sprlay_okada_office_tower_b_10L_norm;
}

switch(FEAT_HOUSES, SELF, switch_okada_office_tower_a_12L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_a_12L_snow;
	sprlay_okada_office_tower_a_12L_norm;
}

switch(FEAT_HOUSES, SELF, switch_okada_office_tower_b_12L_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_okada_office_tower_b_12L_snow;
	sprlay_okada_office_tower_b_12L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_okada_office_tower_6L_snow) {
	1: switch_okada_office_tower_a_6L_sprites;
	1: switch_okada_office_tower_b_6L_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_okada_office_tower_8L_snow) {
	1: switch_okada_office_tower_a_8L_sprites;
	1: switch_okada_office_tower_b_8L_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_okada_office_tower_10L_snow) {
	1: switch_okada_office_tower_a_10L_sprites;
	1: switch_okada_office_tower_b_10L_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_okada_office_tower_12L_snow) {
	1: switch_okada_office_tower_a_12L_sprites;
	1: switch_okada_office_tower_b_12L_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_okada_office_tower_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// End okada_office_tower
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/old_office_building/old_office_building.pnml" 1
// Begin old_office_building

// Building Sprites
spriteset (spr_old_office_building_5L_norm, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(1,1)}
spriteset (spr_old_office_building_5L_snow, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(400,1)}

spriteset (spr_old_office_building_6L_norm, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(1,102)}
spriteset (spr_old_office_building_6L_snow, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(400,102)}

spriteset (spr_old_office_building_7L_norm, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(1,203)}
spriteset (spr_old_office_building_7L_snow, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(400,203)}

spriteset (spr_old_office_building_8L_norm, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(1,304)}
spriteset (spr_old_office_building_8L_snow, 				"src/houses/commercial/old_office_building/building.png") 					{template_house_100_wide(400,304)}

// Ground Tiles
spriteset (spr_old_office_building_ground, 					"src/houses/commercial/old_office_building/ground.png") 					{template_ground(1,1)}
spriteset (spr_old_office_building_ground_snow, 			"src/houses/commercial/old_office_building/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 5-storey
spritelayout sprlay_old_office_building_5L_norm {
	ground {
		sprite: spr_old_office_building_ground(construction_state);
	}
	building {
		sprite: spr_old_office_building_5L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_old_office_building_5L_snow {
	ground {
		sprite: spr_old_office_building_ground_snow(construction_state);
	}
	building {
		sprite: spr_old_office_building_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-storey
spritelayout sprlay_old_office_building_6L_norm {
	ground {
		sprite: spr_old_office_building_ground(construction_state);
	}
	building {
		sprite: spr_old_office_building_6L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_old_office_building_6L_snow {
	ground {
		sprite: spr_old_office_building_ground_snow(construction_state);
	}
	building {
		sprite: spr_old_office_building_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 7-storey
spritelayout sprlay_old_office_building_7L_norm {
	ground {
		sprite: spr_old_office_building_ground(construction_state);
	}
	building {
		sprite: spr_old_office_building_7L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_old_office_building_7L_snow {
	ground {
		sprite: spr_old_office_building_ground_snow(construction_state);
	}
	building {
		sprite: spr_old_office_building_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 8-storey
spritelayout sprlay_old_office_building_8L_norm {
	ground {
		sprite: spr_old_office_building_ground(construction_state);
	}
	building {
		sprite: spr_old_office_building_8L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_old_office_building_8L_snow {
	ground {
		sprite: spr_old_office_building_ground_snow(construction_state);
	}
	building {
		sprite: spr_old_office_building_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_old_office_building_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_old_office_building_5L_snow;
	sprlay_old_office_building_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_old_office_building_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_old_office_building_6L_snow;
	sprlay_old_office_building_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_old_office_building_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_old_office_building_7L_snow;
	sprlay_old_office_building_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_old_office_building_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_old_office_building_8L_snow;
	sprlay_old_office_building_8L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_old_office_building_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/shotengai_01/shotengai_01_sprites.pnml" 1
// Begin shotengai_01

// Buildings
spriteset (spr_shotengai_01_a, 						"src/houses/commercial/shotengai_01/building_a.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_a_snow, 				"src/houses/commercial/shotengai_01/building_a.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_b, 						"src/houses/commercial/shotengai_01/building_b.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_b_snow, 				"src/houses/commercial/shotengai_01/building_b.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_c, 						"src/houses/commercial/shotengai_01/building_c.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_c_snow, 				"src/houses/commercial/shotengai_01/building_c.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_d, 						"src/houses/commercial/shotengai_01/building_d.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_d_snow, 				"src/houses/commercial/shotengai_01/building_d.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_e, 						"src/houses/commercial/shotengai_01/building_e.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_e_snow, 				"src/houses/commercial/shotengai_01/building_e.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_f, 						"src/houses/commercial/shotengai_01/building_f.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_f_snow, 				"src/houses/commercial/shotengai_01/building_f.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_g, 						"src/houses/commercial/shotengai_01/building_g.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_g_snow, 				"src/houses/commercial/shotengai_01/building_g.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_h, 						"src/houses/commercial/shotengai_01/building_h.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_h_snow, 				"src/houses/commercial/shotengai_01/building_h.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_i, 						"src/houses/commercial/shotengai_01/building_i.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_i_snow, 				"src/houses/commercial/shotengai_01/building_i.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_j, 						"src/houses/commercial/shotengai_01/building_j.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_j_snow, 				"src/houses/commercial/shotengai_01/building_j.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_k, 						"src/houses/commercial/shotengai_01/building_k.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_k_snow, 				"src/houses/commercial/shotengai_01/building_k.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_l, 						"src/houses/commercial/shotengai_01/building_l.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_l_snow, 				"src/houses/commercial/shotengai_01/building_l.png") 					{template_house_80_wide(1,82)}

// End shotengai_01
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/shotengai_01/shotengai_01.pnml" 1
// Begin shotengai_01

// Spritelayouts

// OLD (concrete ground tiles)
spritelayout sprlay_shotengai_01_a {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_a (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_a_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_a_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_b {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_b (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_b_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_b_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_c {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_c (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_c_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_c_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_d {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_d (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_d_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_d_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_e {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_e(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_e_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_e_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_f {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_f (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_f_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_f_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_g {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_g (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_g_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_g_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_h {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_h (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_h_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_h_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_i {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_i (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_i_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_i_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_j {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_j (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_j_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_j_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_k {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_k (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_k_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_k_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_l {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_l (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_l_snow {
	ground {
		sprite: spr_ground_concrete (construction_state);
	}
	building {
		sprite: spr_shotengai_01_l_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites

// OLD
switch(FEAT_HOUSES, SELF, switch_shotengai_01_a,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_a_snow;
	sprlay_shotengai_01_a;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_b,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_b_snow;
	sprlay_shotengai_01_b;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_c,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_c_snow;
	sprlay_shotengai_01_c;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_d,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_d_snow;
	sprlay_shotengai_01_d;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_e,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_e_snow;
	sprlay_shotengai_01_e;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_f,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_f_snow;
	sprlay_shotengai_01_f;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_g,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_g_snow;
	sprlay_shotengai_01_g;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_h,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_h_snow;
	sprlay_shotengai_01_h;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_i,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_i_snow;
	sprlay_shotengai_01_i;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_j,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_j_snow;
	sprlay_shotengai_01_j;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_k,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_k_snow;
	sprlay_shotengai_01_k;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_l,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_l_snow;
	sprlay_shotengai_01_l;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_shotengai_01_commercial_sprites) {
	1: switch_shotengai_01_a;
	1: switch_shotengai_01_b;
	1: switch_shotengai_01_c;
	1: switch_shotengai_01_d;
	1: switch_shotengai_01_e;
	1: switch_shotengai_01_f;
	1: switch_shotengai_01_g;
	1: switch_shotengai_01_h;
	1: switch_shotengai_01_i;
	1: switch_shotengai_01_j;
	1: switch_shotengai_01_k;
	1: switch_shotengai_01_l;
}

// End shotengai_01
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/takada/takada.pnml" 1
// Spritesets

spriteset (spr_takada_norm, 					"src/houses/commercial/takada/building.png") 				{template_house_200(1,1)}
spriteset (spr_takada_snow, 					"src/houses/commercial/takada/building.png") 				{template_house_200(400,1)}

spriteset (spr_takada_ground, 					"src/houses/commercial/takada/ground.png") 					{template_ground(1,1)}
spriteset (spr_takada_ground_snow, 				"src/houses/commercial/takada/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// Normal Sprites
spritelayout sprlay_takada_norm {
	ground {
		sprite: spr_takada_ground (3);
	}
	building {
		sprite: spr_takada_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_takada_snow {
	ground {
		sprite: spr_takada_ground_snow (3);
	}
	building {
		sprite: spr_takada_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_takada_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takada_snow;
	sprlay_takada_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_takada_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/takagi/takagi.pnml" 1
// Spritesets

spriteset (spr_takagi_10L_norm, 				"src/houses/commercial/takagi/building.png") 				{template_house_150_wide(1,1)}
spriteset (spr_takagi_10L_snow, 				"src/houses/commercial/takagi/building.png") 				{template_house_150_wide(400,1)}

spriteset (spr_takagi_11L_norm, 				"src/houses/commercial/takagi/building.png") 				{template_house_150_wide(1,152)}
spriteset (spr_takagi_11L_snow, 				"src/houses/commercial/takagi/building.png") 				{template_house_150_wide(400,152)}

spriteset (spr_takagi_ground, 					"src/houses/commercial/takagi/ground.png") 					{template_ground(1,1)}
spriteset (spr_takagi_ground_snow, 				"src/houses/commercial/takagi/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 10-storey
// Normal Sprites
spritelayout sprlay_takagi_10L_norm {
	ground {
		sprite: spr_takagi_ground (construction_state);
	}
	building {
		sprite: spr_takagi_10L_norm (construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_takagi_10L_snow {
	ground {
		sprite: spr_takagi_ground_snow (construction_state);
	}
	building {
		sprite: spr_takagi_10L_snow(construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 11-storey
// Normal Sprites
spritelayout sprlay_takagi_11L_norm {
	ground {
		sprite: spr_takagi_ground (construction_state);
	}
	building {
		sprite: spr_takagi_11L_norm (construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_takagi_11L_snow {
	ground {
		sprite: spr_takagi_ground_snow (construction_state);
	}
	building {
		sprite: spr_takagi_11L_snow(construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_takagi_10L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takagi_10L_snow;
	sprlay_takagi_10L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takagi_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takagi_11L_snow;
	sprlay_takagi_11L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_takagi_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/takemaru_shopping_centre/takemaru_shopping_centre.pnml" 1
// Begin takemaru_shopping_centre

// Building Sprites

// South
spriteset (spr_takemaru_shopping_centre_s_7L_norm, 			"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(1,1)}
spriteset (spr_takemaru_shopping_centre_s_7L_snow, 			"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(400,1)}

spriteset (spr_takemaru_shopping_centre_s_9L_norm, 			"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(1,130)}
spriteset (spr_takemaru_shopping_centre_s_9L_snow, 			"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(400,130)}

spriteset (spr_takemaru_shopping_centre_s_11L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(1,259)}
spriteset (spr_takemaru_shopping_centre_s_11L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(400,259)}

spriteset (spr_takemaru_shopping_centre_s_13L_norm,			"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(1,388)}
spriteset (spr_takemaru_shopping_centre_s_13L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_s.png") 		{template_house_128(400,388)}

// South West
spriteset (spr_takemaru_shopping_centre_sw_7L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(1,1)}
spriteset (spr_takemaru_shopping_centre_sw_7L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(400,1)}

spriteset (spr_takemaru_shopping_centre_sw_9L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(1,130)}
spriteset (spr_takemaru_shopping_centre_sw_9L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(400,130)}

spriteset (spr_takemaru_shopping_centre_sw_11L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(1,259)}
spriteset (spr_takemaru_shopping_centre_sw_11L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(400,259)}

spriteset (spr_takemaru_shopping_centre_sw_13L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(1,388)}
spriteset (spr_takemaru_shopping_centre_sw_13L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_sw.png") 		{template_house_128(400,388)}

// South East
spriteset (spr_takemaru_shopping_centre_se_7L_norm,			"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(1,1)}
spriteset (spr_takemaru_shopping_centre_se_7L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(400,1)}

spriteset (spr_takemaru_shopping_centre_se_9L_norm,			"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(1,130)}
spriteset (spr_takemaru_shopping_centre_se_9L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(400,130)}

spriteset (spr_takemaru_shopping_centre_se_11L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(1,259)}
spriteset (spr_takemaru_shopping_centre_se_11L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(400,259)}

spriteset (spr_takemaru_shopping_centre_se_13L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(1,388)}
spriteset (spr_takemaru_shopping_centre_se_13L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_se.png") 		{template_house_128(400,388)}

// North East
spriteset (spr_takemaru_shopping_centre_ne_7L_norm,			"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(1,1)}
spriteset (spr_takemaru_shopping_centre_ne_7L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(400,1)}

spriteset (spr_takemaru_shopping_centre_ne_9L_norm,			"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(1,130)}
spriteset (spr_takemaru_shopping_centre_ne_9L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(400,130)}

spriteset (spr_takemaru_shopping_centre_ne_11L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(1,259)}
spriteset (spr_takemaru_shopping_centre_ne_11L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(400,259)}

spriteset (spr_takemaru_shopping_centre_ne_13L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(1,388)}
spriteset (spr_takemaru_shopping_centre_ne_13L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_ne.png") 		{template_house_128(400,388)}

// North West
spriteset (spr_takemaru_shopping_centre_nw_7L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(1,1)}
spriteset (spr_takemaru_shopping_centre_nw_7L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(400,1)}

spriteset (spr_takemaru_shopping_centre_nw_9L_norm,			"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(1,130)}
spriteset (spr_takemaru_shopping_centre_nw_9L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(400,130)}

spriteset (spr_takemaru_shopping_centre_nw_11L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(1,259)}
spriteset (spr_takemaru_shopping_centre_nw_11L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(400,259)}

spriteset (spr_takemaru_shopping_centre_nw_13L_norm, 		"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(1,388)}
spriteset (spr_takemaru_shopping_centre_nw_13L_snow, 		"src/houses/commercial/takemaru_shopping_centre/building_nw.png") 		{template_house_128(400,388)}


// Ground Tiles
spriteset (spr_takemaru_shopping_centre_ground, 			"src/houses/commercial/takemaru_shopping_centre/ground.png") 			{template_ground(1,1)}
spriteset (spr_takemaru_shopping_centre_ground_snow, 		"src/houses/commercial/takemaru_shopping_centre/ground.png") 			{template_ground(1,33)}

// Spritelayouts

// South
spritelayout sprlay_takemaru_shopping_centre_s_7L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_7L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_s_7L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_s_9L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_9L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_s_9L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_s_11L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_11L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_s_11L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_11L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_s_13L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_13L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_s_13L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_s_13L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_s_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_s_7L_snow;
	sprlay_takemaru_shopping_centre_s_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_s_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_s_9L_snow;
	sprlay_takemaru_shopping_centre_s_9L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_s_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_s_11L_snow;
	sprlay_takemaru_shopping_centre_s_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_s_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_s_13L_snow;
	sprlay_takemaru_shopping_centre_s_13L_norm;
}

// South West
spritelayout sprlay_takemaru_shopping_centre_sw_7L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_7L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_sw_7L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_sw_9L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_9L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_sw_9L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_sw_11L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_11L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_sw_11L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_11L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_sw_13L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_13L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_sw_13L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_sw_13L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_sw_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_sw_7L_snow;
	sprlay_takemaru_shopping_centre_sw_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_sw_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_sw_9L_snow;
	sprlay_takemaru_shopping_centre_sw_9L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_sw_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_sw_11L_snow;
	sprlay_takemaru_shopping_centre_sw_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_sw_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_sw_13L_snow;
	sprlay_takemaru_shopping_centre_sw_13L_norm;
}

// South East
spritelayout sprlay_takemaru_shopping_centre_se_7L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_7L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_se_7L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_se_9L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_9L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_se_9L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_se_11L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_11L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_se_11L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_11L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_se_13L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_13L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_se_13L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_se_13L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_se_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_se_7L_snow;
	sprlay_takemaru_shopping_centre_se_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_se_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_se_9L_snow;
	sprlay_takemaru_shopping_centre_se_9L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_se_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_se_11L_snow;
	sprlay_takemaru_shopping_centre_se_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_se_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_se_13L_snow;
	sprlay_takemaru_shopping_centre_se_13L_norm;
}

// North East
spritelayout sprlay_takemaru_shopping_centre_ne_7L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_7L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_ne_7L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_ne_9L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_9L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_ne_9L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_ne_11L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_11L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_ne_11L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_11L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_ne_13L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_13L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_ne_13L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_ne_13L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_ne_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_ne_7L_snow;
	sprlay_takemaru_shopping_centre_ne_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_ne_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_ne_9L_snow;
	sprlay_takemaru_shopping_centre_ne_9L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_ne_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_ne_11L_snow;
	sprlay_takemaru_shopping_centre_ne_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_ne_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_ne_13L_snow;
	sprlay_takemaru_shopping_centre_ne_13L_norm;
}

// North West
spritelayout sprlay_takemaru_shopping_centre_nw_7L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_7L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_nw_7L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_nw_9L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_9L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_nw_9L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_nw_11L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_11L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_nw_11L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_11L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_nw_13L_norm {
	ground {
		sprite: spr_takemaru_shopping_centre_ground(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_13L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_takemaru_shopping_centre_nw_13L_snow {
	ground {
		sprite: spr_takemaru_shopping_centre_ground_snow(construction_state);
	}
	building {
		sprite: spr_takemaru_shopping_centre_nw_13L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_nw_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_nw_7L_snow;
	sprlay_takemaru_shopping_centre_nw_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_nw_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_nw_9L_snow;
	sprlay_takemaru_shopping_centre_nw_9L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_nw_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_nw_11L_snow;
	sprlay_takemaru_shopping_centre_nw_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_nw_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_takemaru_shopping_centre_nw_13L_snow;
	sprlay_takemaru_shopping_centre_nw_13L_norm;
}

// Sprite Directions

switch (FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_7L_snow, SpriteDirections() ) {
	1: switch_takemaru_shopping_centre_se_7L_snow;
	2: switch_takemaru_shopping_centre_sw_7L_snow;
	4: switch_takemaru_shopping_centre_nw_7L_snow;
	5: switch_takemaru_shopping_centre_se_7L_snow;
	6: switch_takemaru_shopping_centre_sw_7L_snow;
	8: switch_takemaru_shopping_centre_ne_7L_snow;
	9: switch_takemaru_shopping_centre_se_7L_snow;
	10: switch_takemaru_shopping_centre_sw_7L_snow;
	12: switch_takemaru_shopping_centre_ne_7L_snow;	//pending
	13: switch_takemaru_shopping_centre_ne_7L_snow; //pending
	14: switch_takemaru_shopping_centre_ne_7L_snow; //pending
	switch_takemaru_shopping_centre_s_7L_snow;
}

switch (FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_9L_snow, SpriteDirections() ) {
	1: switch_takemaru_shopping_centre_se_9L_snow;
	2: switch_takemaru_shopping_centre_sw_9L_snow;
	4: switch_takemaru_shopping_centre_nw_9L_snow;
	5: switch_takemaru_shopping_centre_se_9L_snow;
	6: switch_takemaru_shopping_centre_sw_9L_snow;
	8: switch_takemaru_shopping_centre_ne_9L_snow;
	9: switch_takemaru_shopping_centre_se_9L_snow;
	10: switch_takemaru_shopping_centre_sw_9L_snow;
	12: switch_takemaru_shopping_centre_ne_9L_snow;	//pending
	13: switch_takemaru_shopping_centre_ne_9L_snow; //pending
	14: switch_takemaru_shopping_centre_ne_9L_snow; //pending
	switch_takemaru_shopping_centre_s_9L_snow;
}

switch (FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_11L_snow, SpriteDirections() ) {
	1: switch_takemaru_shopping_centre_se_11L_snow;
	2: switch_takemaru_shopping_centre_sw_11L_snow;
	4: switch_takemaru_shopping_centre_nw_11L_snow;
	5: switch_takemaru_shopping_centre_se_11L_snow;
	6: switch_takemaru_shopping_centre_sw_11L_snow;
	8: switch_takemaru_shopping_centre_ne_11L_snow;
	9: switch_takemaru_shopping_centre_se_11L_snow;
	10: switch_takemaru_shopping_centre_sw_11L_snow;
	12: switch_takemaru_shopping_centre_ne_11L_snow;	//pending
	13: switch_takemaru_shopping_centre_ne_11L_snow; //pending
	14: switch_takemaru_shopping_centre_ne_11L_snow; //pending
	switch_takemaru_shopping_centre_s_11L_snow;
}

switch (FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_13L_snow, SpriteDirections() ) {
	1: switch_takemaru_shopping_centre_se_13L_snow;
	2: switch_takemaru_shopping_centre_sw_13L_snow;
	4: switch_takemaru_shopping_centre_nw_13L_snow;
	5: switch_takemaru_shopping_centre_se_13L_snow;
	6: switch_takemaru_shopping_centre_sw_13L_snow;
	8: switch_takemaru_shopping_centre_ne_13L_snow;
	9: switch_takemaru_shopping_centre_se_13L_snow;
	10: switch_takemaru_shopping_centre_sw_13L_snow;
	12: switch_takemaru_shopping_centre_ne_13L_snow;	//pending
	13: switch_takemaru_shopping_centre_ne_13L_snow; //pending
	14: switch_takemaru_shopping_centre_ne_13L_snow; //pending
	switch_takemaru_shopping_centre_s_13L_snow;
}


// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_takemaru_shopping_centre_colors) {
	1:	return PALETTE_CC_DARK_BLUE;
	//1:	return PALETTE_CC_GREY;
	//1:	return PALETTE_CC_BROWN;
	1: return PALETTE_CC_MAUVE;
	1: return PALETTE_CC_WHITE;
	1: return PALETTE_CC_DARK_GREEN;
	1: return PALETTE_CC_PALE_GREEN;
	1: return PALETTE_CC_LIGHT_BLUE;
	1: return PALETTE_CC_ORANGE;
}

// End takemaru_shopping_centre
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/tbuilding/tbuilding.pnml" 1

// Spritesets

spriteset (spr_tbuilding_norm, 						"src/houses/commercial/tbuilding/building.png") 					{template_house_150_wide(1,1)}
spriteset (spr_tbuilding_snow, 						"src/houses/commercial/tbuilding/building.png") 					{template_house_150_wide(1,152)}

spriteset (spr_tbuilding_ground, 					"src/houses/commercial/tbuilding/ground.png") 						{template_ground(1,1)}
spriteset (spr_tbuilding_ground_snow, 				"src/houses/commercial/tbuilding/ground.png") 						{template_ground(1,33)}

// Spritelayouts

spritelayout sprlay_tbuilding_norm {
	ground {
		sprite: 		spr_tbuilding_ground(construction_state);
	}
	building {
		sprite: 		spr_tbuilding_norm(construction_state);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tbuilding_snow {
	ground {
		sprite: 		spr_tbuilding_ground_snow(construction_state);
	}
	building {
		sprite: 		spr_tbuilding_snow(construction_state);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tbuilding_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_tbuilding_snow;
	sprlay_tbuilding_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_tbuilding_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/tsuzumi_electronics_centre/tsuzumi_electronics_centre.pnml" 1
// Begin tsuzumi_electronics_centre

// Building Sprites

// South
spriteset (spr_tsuzumi_electronics_centre_s_10L_a_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_s_10L_a_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(400,1)}

spriteset (spr_tsuzumi_electronics_centre_s_10L_b_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_s_10L_b_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(400,130)}

spriteset (spr_tsuzumi_electronics_centre_s_10L_c_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_s_10L_c_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(400,259)}

spriteset (spr_tsuzumi_electronics_centre_s_10L_d_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_s_10L_d_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_s_10.png") 	{template_house_128_wide(400,388)}

// South East
spriteset (spr_tsuzumi_electronics_centre_se_10L_a_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_se_10L_a_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(400,1)}

spriteset (spr_tsuzumi_electronics_centre_se_10L_b_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_se_10L_b_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(400,130)}

spriteset (spr_tsuzumi_electronics_centre_se_10L_c_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_se_10L_c_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(400,259)}

spriteset (spr_tsuzumi_electronics_centre_se_10L_d_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_se_10L_d_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_se_10.png") 	{template_house_128_wide(400,388)}

// East
spriteset (spr_tsuzumi_electronics_centre_e_10L_a_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_e_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_e_10L_a_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_e_10.png") 	{template_house_128_wide(400,1)}

// South West
spriteset (spr_tsuzumi_electronics_centre_sw_10L_a_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_sw_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_sw_10L_a_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_sw_10.png") 	{template_house_128_wide(400,1)}

// West
spriteset (spr_tsuzumi_electronics_centre_w_10L_a_norm, 		"src/houses/commercial/tsuzumi_electronics_centre/building_w_10.png") 	{template_house_128_wide(1,1)}
spriteset (spr_tsuzumi_electronics_centre_w_10L_a_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/building_w_10.png") 	{template_house_128_wide(400,1)}



// Ground Tiles
spriteset (spr_tsuzumi_electronics_centre_ground, 				"src/houses/commercial/tsuzumi_electronics_centre/ground.png") 		{template_ground(1,1)}
spriteset (spr_tsuzumi_electronics_centre_ground_snow, 			"src/houses/commercial/tsuzumi_electronics_centre/ground.png") 		{template_ground(1,33)}

spriteset (spr_tsuzumi_electronics_centre_w_ground, 			"src/houses/commercial/tsuzumi_electronics_centre/ground_w.png") 	{template_ground(1,1)}
spriteset (spr_tsuzumi_electronics_centre_w_ground_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/ground_w.png") 	{template_ground(1,33)}

spriteset (spr_tsuzumi_electronics_centre_se_ground, 			"src/houses/commercial/tsuzumi_electronics_centre/ground_se.png") 	{template_ground(1,1)}
spriteset (spr_tsuzumi_electronics_centre_se_ground_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/ground_se.png") 	{template_ground(1,33)}

spriteset (spr_tsuzumi_electronics_centre_e_ground, 			"src/houses/commercial/tsuzumi_electronics_centre/ground_e.png") 	{template_ground(1,1)}
spriteset (spr_tsuzumi_electronics_centre_e_ground_snow, 		"src/houses/commercial/tsuzumi_electronics_centre/ground_e.png") 	{template_ground(1,33)}

// Spritelayouts

// South 10L
spritelayout sprlay_tsuzumi_electronics_centre_s_10L_a_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_a_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_s_10L_a_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_a_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_s_10L_b_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_b_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_s_10L_b_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_b_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_s_10L_c_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_c_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_s_10L_c_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_c_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_s_10L_d_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_d_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_s_10L_d_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_s_10L_d_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_s_10L_a_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_s_10L_a_snow;
	sprlay_tsuzumi_electronics_centre_s_10L_a_norm;
}

switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_s_10L_b_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_s_10L_b_snow;
	sprlay_tsuzumi_electronics_centre_s_10L_b_norm;
}

switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_s_10L_c_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_s_10L_c_snow;
	sprlay_tsuzumi_electronics_centre_s_10L_c_norm;
}

switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_s_10L_d_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_s_10L_d_snow;
	sprlay_tsuzumi_electronics_centre_s_10L_d_norm;
}

// Random Switch
random_switch (FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_s_10L_snow) {
	1: switch_tsuzumi_electronics_centre_s_10L_a_snow;				
	1: switch_tsuzumi_electronics_centre_s_10L_b_snow;
	1: switch_tsuzumi_electronics_centre_s_10L_c_snow;
	1: switch_tsuzumi_electronics_centre_s_10L_d_snow;				
}

// South East 10L
spritelayout sprlay_tsuzumi_electronics_centre_se_10L_a_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_a_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_se_10L_a_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_a_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_se_10L_b_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_b_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_se_10L_b_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_b_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_se_10L_c_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_c_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_se_10L_c_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_c_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_se_10L_d_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_d_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_se_10L_d_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_se_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_se_10L_d_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_se_10L_a_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_se_10L_a_snow;
	sprlay_tsuzumi_electronics_centre_se_10L_a_norm;
}

switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_se_10L_b_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_se_10L_b_snow;
	sprlay_tsuzumi_electronics_centre_se_10L_b_norm;
}

switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_se_10L_c_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_se_10L_c_snow;
	sprlay_tsuzumi_electronics_centre_se_10L_c_norm;
}

switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_se_10L_d_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_se_10L_d_snow;
	sprlay_tsuzumi_electronics_centre_se_10L_d_norm;
}

// Random Switch
random_switch (FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_se_10L_snow) {
	1: switch_tsuzumi_electronics_centre_se_10L_a_snow;				
	1: switch_tsuzumi_electronics_centre_se_10L_b_snow;
	1: switch_tsuzumi_electronics_centre_se_10L_c_snow;
	1: switch_tsuzumi_electronics_centre_se_10L_d_snow;				
}

// East

spritelayout sprlay_tsuzumi_electronics_centre_e_10L_a_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_e_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_e_10L_a_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_e_10L_a_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_e_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_e_10L_a_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_e_10L_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_e_10L_a_snow;
	sprlay_tsuzumi_electronics_centre_e_10L_a_norm;
}

// South West

spritelayout sprlay_tsuzumi_electronics_centre_sw_10L_a_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_sw_10L_a_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_sw_10L_a_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_sw_10L_a_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_sw_10L_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_sw_10L_a_snow;
	sprlay_tsuzumi_electronics_centre_sw_10L_a_norm;
}

// West

spritelayout sprlay_tsuzumi_electronics_centre_w_10L_a_norm {
	ground {
		sprite: spr_tsuzumi_electronics_centre_w_ground (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_w_10L_a_norm (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuzumi_electronics_centre_w_10L_a_snow {
	ground {
		sprite: spr_tsuzumi_electronics_centre_w_ground_snow (construction_state);
	}
	building {
		sprite: spr_tsuzumi_electronics_centre_w_10L_a_snow (construction_state);
		xoffset: 2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_w_10L_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_tsuzumi_electronics_centre_w_10L_a_snow;
	sprlay_tsuzumi_electronics_centre_w_10L_a_norm;
}


switch (FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_10L_snow, SpriteDirections() ) {
	1: switch_tsuzumi_electronics_centre_se_10L_snow;
	2: switch_tsuzumi_electronics_centre_sw_10L_snow;
	4: switch_tsuzumi_electronics_centre_se_10L_snow;
	5: switch_tsuzumi_electronics_centre_se_10L_snow;
	6: switch_tsuzumi_electronics_centre_w_10L_snow;
	8: switch_tsuzumi_electronics_centre_sw_10L_snow;
	9: switch_tsuzumi_electronics_centre_e_10L_snow;
	10: switch_tsuzumi_electronics_centre_sw_10L_snow;
	12: switch_tsuzumi_electronics_centre_se_10L_snow;	
	13: switch_tsuzumi_electronics_centre_se_10L_snow; 
	14: switch_tsuzumi_electronics_centre_sw_10L_snow; 
	switch_tsuzumi_electronics_centre_s_10L_snow;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, switch_tsuzumi_electronics_centre_colors) {
	1:	return PALETTE_CC_DARK_BLUE;
	1:	return PALETTE_CC_GREY;
	1:	return PALETTE_CC_BROWN;
	1:	return PALETTE_CC_MAUVE;
	1:	return PALETTE_CC_WHITE;
	1:	return PALETTE_CC_DARK_GREEN;
}

// End tsuzumi_electronics_centre
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/xbuilding/xbuilding.pnml" 1

// Spritesets

spriteset (spr_xbuilding_norm, 						"src/houses/commercial/xbuilding/building.png") 					{template_house_128(1,1)}
spriteset (spr_xbuilding_snow, 					    "src/houses/commercial/xbuilding/building.png") 					{template_house_128(1,130)}

spriteset (spr_xbuilding_ground, 					"src/houses/commercial/xbuilding/ground.png") 						{template_ground(1,1)}
spriteset (spr_xbuilding_ground_snow, 				"src/houses/commercial/xbuilding/ground.png") 						{template_ground(1,33)}

// Spritelayouts

spritelayout sprlay_xbuilding_norm {
	ground {
		sprite: spr_xbuilding_ground(3);
	}
	building {
		sprite: spr_xbuilding_norm(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_xbuilding_snow {
	ground {
		sprite: spr_xbuilding_ground_snow(3);
	}
	building {
		sprite: spr_xbuilding_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_xbuilding_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_xbuilding_snow;
	sprlay_xbuilding_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_xbuilding_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/yamada/yamada.pnml" 1
// Spritesets

spriteset (spr_yamada_11L, 						"src/houses/commercial/yamada/building.png") 					{template_house_128(1,1)}
spriteset (spr_yamada_11L_snow, 				"src/houses/commercial/yamada/building.png") 					{template_house_128(400,1)}

spriteset (spr_yamada_12L, 						"src/houses/commercial/yamada/building.png") 					{template_house_128(1,130)}
spriteset (spr_yamada_12L_snow, 				"src/houses/commercial/yamada/building.png") 					{template_house_128(400,130)}

spriteset (spr_yamada_13L, 						"src/houses/commercial/yamada/building.png") 					{template_house_128(1,259)}
spriteset (spr_yamada_13L_snow, 				"src/houses/commercial/yamada/building.png") 					{template_house_128(400,259)}

spriteset (spr_yamada_14L, 						"src/houses/commercial/yamada/building.png") 					{template_house_128(1,388)}
spriteset (spr_yamada_14L_snow, 				"src/houses/commercial/yamada/building.png") 					{template_house_128(400,388)}

spriteset (spr_yamada_ground, 					"src/houses/commercial/yamada/ground.png") 						{template_ground(1,1)}
spriteset (spr_yamada_ground_snow, 				"src/houses/commercial/yamada/ground.png") 						{template_ground(1,33)}

// Spritelayouts

// Yamada 11 Storey

// Normal Sprites
spritelayout sprlay_yamada_11L_norm {
	ground {
		sprite: spr_yamada_ground(3);
	}
	building {
		sprite: spr_yamada_11L (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yamada_11L_snow {
	ground {
		sprite: spr_yamada_ground_snow(3);
	}
	building {
		sprite: spr_yamada_11L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Yamada 12 Storey

// Normal Sprites
spritelayout sprlay_yamada_12L_norm {
	ground {
		sprite: spr_yamada_ground(3);
	}
	building {
		sprite: spr_yamada_12L (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yamada_12L_snow {
	ground {
		sprite: spr_yamada_ground_snow(3);
	}
	building {
		sprite: spr_yamada_12L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Yamada 13 Storey

// Normal Sprites
spritelayout sprlay_yamada_13L_norm {
	ground {
		sprite: spr_yamada_ground(3);
	}
	building {
		sprite: spr_yamada_13L (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yamada_13L_snow {
	ground {
		sprite: spr_yamada_ground_snow(3);
	}
	building {
		sprite: spr_yamada_13L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Yamada 14 Storey

// Normal Sprites
spritelayout sprlay_yamada_14L_norm {
	ground {
		sprite: spr_yamada_ground(3);
	}
	building {
		sprite: spr_yamada_14L (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yamada_14L_snow {
	ground {
		sprite: spr_yamada_ground_snow(3);
	}
	building {
		sprite: spr_yamada_14L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yamada_11L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_11L_snow;
	sprlay_yamada_11L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yamada_12L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_12L_snow;
	sprlay_yamada_12L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yamada_13L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_13L_snow;
	sprlay_yamada_13L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yamada_14L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_14L_snow;
	sprlay_yamada_14L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_yamada_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/yamada_electronics_centre/yamada_electronics_centre.pnml" 1
// Begin yamada_electronics_centre

// Building Sprites
spriteset (spr_yamada_electronics_centre_6L_norm, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(1,1)}
spriteset (spr_yamada_electronics_centre_6L_snow, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(400,1)}

spriteset (spr_yamada_electronics_centre_8L_norm, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(1,130)}
spriteset (spr_yamada_electronics_centre_8L_snow, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(400,130)}

spriteset (spr_yamada_electronics_centre_10L_norm, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(1,259)}
spriteset (spr_yamada_electronics_centre_10L_snow, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(400,259)}

spriteset (spr_yamada_electronics_centre_12L_norm, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(1,388)}
spriteset (spr_yamada_electronics_centre_12L_snow, 			"src/houses/commercial/yamada_electronics_centre/building.png") 	{template_house_128(400,388)}

// Ground Tiles
spriteset (spr_yamada_electronics_centre_ground, 			"src/houses/commercial/yamada_electronics_centre/ground.png") 		{template_house_128(1,1)}
//spriteset (spr_yamada_electronics_centre_ground_snow, 	"src/houses/commercial/yamada_electronics_centre/ground.png") 		{template_house_128(1,1)}

spritelayout sprlay_yamada_electronics_centre_6L_norm {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_6L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamada_electronics_centre_6L_snow {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamada_electronics_centre_8L_norm {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_8L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamada_electronics_centre_8L_snow {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamada_electronics_centre_10L_norm {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_10L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamada_electronics_centre_10L_snow {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_10L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamada_electronics_centre_12L_norm {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_12L_norm(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamada_electronics_centre_12L_snow {
	ground {
		sprite: spr_yamada_electronics_centre_ground(construction_state);
	}
	building {
		sprite: spr_yamada_electronics_centre_12L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yamada_electronics_centre_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_electronics_centre_6L_snow;
	sprlay_yamada_electronics_centre_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yamada_electronics_centre_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_electronics_centre_8L_snow;
	sprlay_yamada_electronics_centre_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yamada_electronics_centre_10L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_electronics_centre_10L_snow;
	sprlay_yamada_electronics_centre_10L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yamada_electronics_centre_12L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamada_electronics_centre_12L_snow;
	sprlay_yamada_electronics_centre_12L_norm;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_yamada_electronics_centre_colors) {
	1:	return PALETTE_CC_DARK_BLUE;
	1:	return PALETTE_CC_GREY;
	1:	return PALETTE_CC_BROWN;
	1:	return PALETTE_CC_MAUVE;
	1:	return PALETTE_CC_WHITE;
	1:	return PALETTE_CC_DARK_GREEN;
}

// End yamada_electronics_centre
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/ybuilding/ybuilding.pnml" 1
// Spritesets

spriteset (spr_ybuilding_norm, 					"src/houses/commercial/ybuilding/building.png") 				{template_house_150_wide(1,1)}
spriteset (spr_ybuilding_snow, 					"src/houses/commercial/ybuilding/building.png") 				{template_house_150_wide(400,1)}

spriteset (spr_ybuilding_ground, 				"src/houses/commercial/ybuilding/ground.png") 					{template_ground(1,1)}
spriteset (spr_ybuilding_ground_snow, 			"src/houses/commercial/ybuilding/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// Normal Sprites
spritelayout sprlay_ybuilding_norm {
	ground {
		sprite: spr_ybuilding_ground (construction_state);
	}
	building {
		sprite: spr_ybuilding_norm (construction_state);
		xoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_ybuilding_snow {
	ground {
		sprite: spr_ybuilding_ground_snow (construction_state);
	}
	building {
		sprite: spr_ybuilding_snow(construction_state);
		xoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_ybuilding_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_ybuilding_snow;
	sprlay_ybuilding_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_ybuilding_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesCommercial.pnml" 4

// HOUSE IDs

// Commercial

# 1 "src/houses/commercial/shotengai_01.pnml" 1
// Begin shotengai_01

// Construction Check
switch (FEAT_HOUSES, SELF, switch_shotengai_01_con_check, 
	FuncServicePASS() &&			// Must have PASS service
	CommercialCargoes() &&			// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&			// Is there population to allow another Commercial?
	ClusterBuildingClass()			// Must be within two tiles of the same building class
) {return;}	

item(FEAT_HOUSES, item_shotengai_01){
	property {
		substitute: 				06;
		name: 						string(NAME_SHOTENGAI_01);
		population: 				50;										
		accepted_cargos: 			[[PASS, 4],[MAIL, 2],[GOOD, 4]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				5;
		years_available: 			[1700,1944];							
		minimum_lifetime: 			5;										
		availability_mask: 			[bitmask(								
										TOWNZONE_CENTRE,			// 4
										TOWNZONE_INNER_SUBURB,		// 3
										TOWNZONE_OUTER_SUBURB		// 2
										//TOWNZONE_OUTSKIRT,		// 1
										//TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class:				10;									
		
		}
	graphics {
		default: 					switch_shotengai_01_commercial_sprites;
		construction_check: 		switch_shotengai_01_con_check;
		protection:					ProtectCommercial(); 
		cargo_production: 			func_produce(2,1);						// 
		//colour: 					rand_recolor_shotengai_01;
	}
}

// End shotengai_01
# 1 "JPplusHousesCommercial.pnml" 4

// Postwar Commercial
# 1 "src/houses/commercial/commercial_post_7L8L.pnml" 1
// Begin post_7L8L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_post_7L8L_sprites) {
	1: switch_aoki_office_8L_snow;
	1: switch_aoyama_office_7L_snow;
	1: switch_aoyama_office_7L_snow;
	2: switch_okada_office_tower_8L_snow;
	1: switch_old_office_building_7L_snow;
	1: switch_old_office_building_8L_snow;

	1: switch_aoki_office_6L_snow;
	1: switch_aoyama_office_5L_snow;
	1: switch_aoyama_office_6L_snow;
	1: switch_okada_office_tower_6L_snow;
	1: switch_old_office_building_5L_snow;
	1: switch_old_office_building_6L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_post_7L8L_name) {
	dependent: switch_post_7L8L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_POSTWAR),string(L8));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_POSTWAR),string(L7));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_POSTWAR),string(L7));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_POSTWAR),string(L8));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_POSTWAR),string(L7));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_POSTWAR),string(L8));

	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_POSTWAR),string(L6));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_post_7L8L_colors)
	{
	dependent: switch_post_7L8L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	2: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;

	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_post_7L8L_con_check, 
	FuncServicePASS() &&				// Must have passenger service
	CommercialCargoes() &&				// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&				// Is there population to allow another Commercial?
	ClusterBuildingClass() &&			// Must be within two tiles of the same building class
	PopOver7L8LCommercialThreshold()	// Population threshold to build this height of building
) {return;}	

item(FEAT_HOUSES, item_commercial_post_7L8L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				120;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1945,1959];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_post_7L8L_sprites;
		name:						switch_post_7L8L_name;
		construction_check: 		switch_post_7L8L_con_check;
		protection:					ProtectCommercial();		
		cargo_production: 			func_produce(13,4);
		colour: 					switch_post_7L8L_colors;
	}
}

// End post_7L8L
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_post_5L6L.pnml" 1
// Begin post_5L6L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_post_5L6L_sprites) {
	1: switch_aoki_office_6L_snow;
	1: switch_aoyama_office_5L_snow;
	1: switch_aoyama_office_6L_snow;
	1: switch_okada_office_tower_6L_snow;
	1: switch_old_office_building_5L_snow;
	1: switch_old_office_building_6L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_post_5L6L_name) {
	dependent: switch_post_5L6L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_POSTWAR),string(L6));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_post_5L6L_colors)
	{
	dependent: switch_post_5L6L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_post_5L6L_con_check, 
	FuncServicePASS() &&			// Must have passenger service
	CommercialCargoes() &&			// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&			// Is there population to allow another Commercial?
	ClusterBuildingClass()			// Must be within two tiles of the same building class
) {return;}	

item(FEAT_HOUSES, item_commercial_post_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				3;
		years_available: 			[1945,1959];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_post_5L6L_sprites;
		name:						switch_post_5L6L_name;
		construction_check: 		switch_post_5L6L_con_check;
		protection:					ProtectCommercial(); 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_post_5L6L_colors;
	}
}

// End post_5L6L
# 1 "JPplusHousesCommercial.pnml" 4

// Economic Boom Period Commercial
# 1 "src/houses/commercial/commercial_boom_11L12L.pnml" 1
// Begin boom_11L12L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_boom_11L12L_sprites) {
	1: switch_hashimoto_office_tower_11L_snow;
	1: switch_ishida_commercial_building_11L_snow;
	1: switch_ishii_office_tower_11L_snow;
	2: switch_okada_office_tower_12L_snow;
	1: switch_xbuilding_sprites;
	1: switch_yamada_11L_snow;
	1: switch_yamada_12L_snow;
	1: switch_yamada_electronics_centre_12L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_boom_11L12L_name) {
	dependent: switch_boom_11L12L_sprites;
	1: string(STR_CONCAT_3, string(NAME_HASHIMOTO_OFFICE_TOWER),string(PERIOD_BOOM),string(L11));
	1: string(STR_CONCAT_3, string(NAME_ISHIDA_COMMERCIAL_BUILDING),string(PERIOD_BOOM),string(L11));
	1: string(STR_CONCAT_3, string(NAME_ISHII_OFFICE_TOWER),string(PERIOD_BOOM),string(L11));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_BOOM),string(L12));
	1: string(STR_CONCAT_3, string(NAME_XBUILDING),string(PERIOD_BOOM),string(L12));
	1: string(STR_CONCAT_3, string(NAME_YAMADA),string(PERIOD_BOOM),string(L11));
	1: string(STR_CONCAT_3, string(NAME_YAMADA),string(PERIOD_BOOM),string(L12));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_BOOM),string(L12));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_boom_11L12L_colors)
	{
	dependent: switch_boom_11L12L_sprites;
	1: switch_hashimoto_office_tower_colors;
	1: switch_ishida_commercial_building_colors;
	1: switch_ishii_office_tower_colors;
	2: switch_okada_office_tower_colors;
	1: switch_xbuilding_colors;
	1: switch_yamada_colors;
	1: switch_yamada_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_boom_11L12L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	PopOver11L12LCommercialThreshold()		// Population threshold to build this height of building
) {return;}	

item(FEAT_HOUSES, item_commercial_boom_11L12L){
	property {
		substitute: 				27;
		name: 						string(NAME_XBUILDING);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 4],[GOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1960,1979];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		name:						switch_boom_11L12L_name;
		default: 					switch_boom_11L12L_sprites;
		construction_check: 		switch_boom_11L12L_con_check;
		protection:					ProtectCommercial(); 	 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_boom_11L12L_colors;
	}
}

// End X-Building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_boom_9L10L.pnml" 1
// Begin boom_9L10L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_boom_9L10L_sprites) {
	1: switch_aoki_office_10L_snow;
	1: switch_hashimoto_office_tower_9L_snow;
	2: switch_okada_office_tower_10L_snow;
	1: switch_takagi_10L_snow;
	1: switch_yamada_electronics_centre_10L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_boom_9L10L_name) {
	dependent: switch_boom_9L10L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_BOOM),string(L10));
	1: string(STR_CONCAT_3, string(NAME_HASHIMOTO_OFFICE_TOWER),string(PERIOD_BOOM),string(L9));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_BOOM),string(L10));
	1: string(STR_CONCAT_3, string(NAME_TAKAGI),string(PERIOD_BOOM),string(L10));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_BOOM),string(L10));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_boom_9L10L_colors)
	{
	dependent: switch_boom_9L10L_sprites;
	1: switch_aoki_office_colors;
	1: switch_hashimoto_office_tower_colors;
	2: switch_okada_office_tower_colors;
	1: switch_takagi_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_boom_9L10L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	PopOver9L10LCommercialThreshold()		// Population threshold to build this height of building
) {return;}	

item(FEAT_HOUSES, item_commercial_boom_9L10L){
	property {
		substitute: 				27;
		name: 						string(NAME_XBUILDING);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 4],[GOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				2;
		years_available: 			[1960,1979];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		name:						switch_boom_9L10L_name;
		default: 					switch_boom_9L10L_sprites;
		construction_check: 		switch_boom_9L10L_con_check;
		protection:					ProtectCommercial();	 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_boom_9L10L_colors;
	}
}

// End X-Building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_boom_7L8L.pnml" 1
// Begin boom_7L8L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_boom_7L8L_sprites) {
	1: switch_aoki_office_8L_snow;
	1: switch_aoyama_office_8L_snow;
	1: switch_aoyama_office_7L_snow;
	1: switch_okada_office_tower_8L_snow;
	1: switch_old_office_building_7L_snow;
	1: switch_old_office_building_8L_snow;
	1: switch_yamada_electronics_centre_8L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_boom_7L8L_name) {
	dependent: switch_boom_7L8L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_BOOM),string(L8));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_boom_7L8L_colors)
	{
	dependent: switch_boom_7L8L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_boom_7L8L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	//Population threshold to build this height of building
	PopOver7L8LCommercialThreshold()
) {return;}	

item(FEAT_HOUSES, item_commercial_boom_7L8L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				120;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				3;
		years_available: 			[1960,1979];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_boom_7L8L_sprites;
		name:						switch_boom_7L8L_name;
		construction_check: 		switch_boom_7L8L_con_check;
		protection:					ProtectCommercial();		
		cargo_production: 			func_produce(13,4);
		colour: 					switch_boom_7L8L_colors;
	}
}

// End boom_7L8L
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_boom_5L6L.pnml" 1
// Begin boom_5L6L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_boom_5L6L_sprites) {
	1: switch_aoki_office_6L_snow;
	1: switch_aoyama_office_5L_snow;
	1: switch_aoyama_office_6L_snow;
	2: switch_okada_office_tower_6L_snow;
	1: switch_old_office_building_5L_snow;
	1: switch_old_office_building_6L_snow;
	1: switch_yamada_electronics_centre_6L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_boom_5L6L_name) {
	dependent: switch_boom_5L6L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L6));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_BOOM),string(L6));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_boom_5L6L_colors)
	{
	dependent: switch_boom_5L6L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	2: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_boom_5L6L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()					// Must be within two tiles of the same building class
) {return;}	

item(FEAT_HOUSES, item_commercial_boom_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				6;
		years_available: 			[1960,1979];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_boom_5L6L_sprites;
		name:						switch_boom_5L6L_name;
		construction_check: 		switch_boom_5L6L_con_check;
		protection:					ProtectCommercial();	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_boom_5L6L_colors;
	}
}

// End boom_5L6L
# 1 "JPplusHousesCommercial.pnml" 4

// Late 20th Century Commercial
# 1 "src/houses/commercial/commercial_late_11plus.pnml" 1
// Begin late_11L12L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_late_11L12L_sprites) {
	1: switch_aoki_office_12L_snow;
	2: switch_okada_office_tower_12L_snow;
	1: switch_takada_snow;
	1: switch_takagi_11L_snow;
	1: switch_takemaru_shopping_centre_11L_snow;
	1: switch_ybuilding_snow;

	1: switch_hashimoto_office_tower_13L_snow;
	1: switch_ishida_commercial_building_13L_snow;
	1: switch_ishii_office_tower_13L_snow;
	1: switch_takemaru_shopping_centre_13L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_late_11L12L_name) {
	dependent: switch_late_11L12L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_LATE),string(L12));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_LATE),string(L12));
	1: string(STR_CONCAT_2, string(NAME_TAKADA),string(PERIOD_LATE));
	1: string(STR_CONCAT_3, string(NAME_TAKAGI),string(PERIOD_LATE),string(L11));
	1: string(STR_CONCAT_3, string(NAME_TAKEMARU_SHOPPING_CENTRE),string(PERIOD_LATE),string(L11));
	1: string(STR_CONCAT_2, string(NAME_YBUILDING),string(PERIOD_LATE));

	1: string(STR_CONCAT_3, string(NAME_HASHIMOTO_OFFICE_TOWER),string(PERIOD_LATE),string(L13));
	1: string(STR_CONCAT_3, string(NAME_ISHIDA_COMMERCIAL_BUILDING),string(PERIOD_LATE),string(L13));
	1: string(STR_CONCAT_3, string(NAME_ISHII_OFFICE_TOWER),string(PERIOD_LATE),string(L13));
	1: string(STR_CONCAT_3, string(NAME_TAKEMARU_SHOPPING_CENTRE),string(PERIOD_LATE),string(L13));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_late_11L12L_colors)
	{
	dependent: switch_late_11L12L_sprites;
	1: switch_aoki_office_colors;
	2: switch_okada_office_tower_colors;
	1: switch_takada_colors;
	1: switch_takagi_colors;
	1: switch_takemaru_shopping_centre_colors;
	1: switch_ybuilding_colors;

	1: switch_hashimoto_office_tower_colors;
	1: switch_ishida_commercial_building_colors;
	1: switch_ishii_office_tower_colors;
	1: switch_takemaru_shopping_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_late_11L12L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	// Population threshold to build this height of building
	PopOver11L12LCommercialThreshold() 		
) {return;}	

item(FEAT_HOUSES, item_commercial_late_11L12L){
	property {
		substitute: 				27;
		name: 						string(NAME_XBUILDING);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 4],[GOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1980,1999];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		name:						switch_late_11L12L_name;
		default: 					switch_late_11L12L_sprites;
		construction_check: 		switch_late_11L12L_con_check;
		protection:					ProtectCommercial(); 	 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_late_11L12L_colors;
	}
}

// End X-Building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_late_9L10L.pnml" 1
// Begin late_9L10L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_late_9L10L_sprites) {
	1: switch_aoki_office_10L_snow;
	1: switch_hashimoto_office_tower_9L_snow;
	1: switch_obuilding_snow;
	2: switch_okada_office_tower_10L_snow;
	1: switch_takagi_10L_snow;
	1: switch_takemaru_shopping_centre_9L_snow;
	1: switch_tsuzumi_electronics_centre_10L_snow;
	1: switch_yamada_electronics_centre_10L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_late_9L10L_name) {
	dependent: switch_late_9L10L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_LATE),string(L10));
	1: string(STR_CONCAT_3, string(NAME_HASHIMOTO_OFFICE_TOWER),string(PERIOD_LATE),string(L9));
	1: string(STR_CONCAT_3, string(NAME_OBUILDING),string(PERIOD_LATE),string(L10));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_LATE),string(L10));
	1: string(STR_CONCAT_3, string(NAME_TAKAGI),string(PERIOD_LATE),string(L10));
	1: string(STR_CONCAT_3, string(NAME_TAKEMARU_SHOPPING_CENTRE),string(PERIOD_LATE),string(L9));
	1: string(STR_CONCAT_3, string(NAME_TSUZUMI_ELECTRONICS_CENTRE),string(PERIOD_LATE),string(L10));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_LATE),string(L10));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_late_9L10L_colors)
	{
	dependent: switch_late_9L10L_sprites;
	1: switch_aoki_office_colors;
	1: switch_hashimoto_office_tower_colors;
	1: switch_obuilding_colors;
	2: switch_okada_office_tower_colors;
	1: switch_takagi_colors;
	1: switch_takemaru_shopping_centre_colors;
	1: switch_tsuzumi_electronics_centre_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_late_9L10L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	// Population threshold to build this height of building
	PopOver9L10LCommercialThreshold()	
) {return;}	

item(FEAT_HOUSES, item_commercial_late_9L10L){
	property {
		substitute: 				27;
		name: 						string(NAME_XBUILDING);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 4],[GOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				2;
		years_available: 			[1980,1999];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		name:						switch_late_9L10L_name;
		default: 					switch_late_9L10L_sprites;
		construction_check: 		switch_late_9L10L_con_check;
		protection:					ProtectCommercial();  	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_late_9L10L_colors;
	}
}

// End X-Building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_late_7L8L.pnml" 1
// Begin late_7L8L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_late_7L8L_sprites) {
	1: switch_aoki_office_8L_snow;
	1: switch_aoyama_office_8L_snow;
	1: switch_aoyama_office_7L_snow;
	2: switch_okada_office_tower_8L_snow;
	1: switch_old_office_building_7L_snow;
	1: switch_old_office_building_8L_snow;
	1: switch_takemaru_shopping_centre_7L_snow;
	1: switch_yamada_electronics_centre_8L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_late_7L8L_name) {
	dependent: switch_late_7L8L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_LATE),string(L7));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_TAKEMARU_SHOPPING_CENTRE),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_LATE),string(L8));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_late_7L8L_colors)
	{
	dependent: switch_late_7L8L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	2: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
	1: switch_takemaru_shopping_centre_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_late_7L8L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	// Population threshold to build this height of building
	PopOver7L8LCommercialThreshold()	
) {return;}	

item(FEAT_HOUSES, item_commercial_late_7L8L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				120;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				3;
		years_available: 			[1980,1999];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_late_7L8L_sprites;
		name:						switch_late_7L8L_name;
		construction_check: 		switch_late_7L8L_con_check;
		protection:					ProtectCommercial(); 		
		cargo_production: 			func_produce(13,4);
		colour: 					switch_late_7L8L_colors;
	}
}

// End late_7L8L
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_late_5L6L.pnml" 1
// Begin late_5L6L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_late_5L6L_sprites) {
	1: switch_aoki_office_6L_snow;
	1: switch_aoyama_office_5L_snow;
	1: switch_aoyama_office_6L_snow;
	2: switch_okada_office_tower_6L_snow;
	1: switch_old_office_building_5L_snow;
	1: switch_old_office_building_6L_snow;
	1: switch_yamada_electronics_centre_6L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_late_5L6L_name) {
	dependent: switch_late_5L6L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L6));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_BOOM),string(L6));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_late_5L6L_colors)
	{
	dependent: switch_late_5L6L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	2: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_late_5L6L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()					// Must be within two tiles of the same building class
) {return;}	

item(FEAT_HOUSES, item_commercial_late_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				6;
		years_available: 			[1980,1999];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_late_5L6L_sprites;
		name:						switch_late_5L6L_name;
		construction_check: 		switch_late_5L6L_con_check;
		protection:					ProtectCommercial();  	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_late_5L6L_colors;
	}
}

// End late_5L6L
# 1 "JPplusHousesCommercial.pnml" 4

// Post-2000 Commercial
# 1 "src/houses/commercial/commercial_y2kp_11plus.pnml" 1
// Begin y2kp_11L12L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_y2kp_11L12L_sprites) {
	1: switch_aoki_office_12L_snow;
	1: switch_obuilding_snow;
	2: switch_okada_office_tower_12L_snow;
	1: switch_takagi_11L_snow;
	1: switch_ybuilding_snow;

	1: switch_hashimoto_office_tower_13L_snow;
	1: switch_ishida_commercial_building_13L_snow;
	1: switch_ishii_office_tower_13L_snow;
	1: switch_yamada_14L_snow;
	1: switch_yamada_13L_snow;

	1: switch_hashimoto_office_tower_15L_snow;
	1: switch_ishida_commercial_building_15L_snow;
	1: switch_ishida_commercial_building_15L_snow;
	1: switch_ishida_commercial_building_16L_snow;
	1: switch_ishii_office_tower_17L_snow;
	1: switch_ishii_office_tower_15L_snow;
	1: switch_takada_snow;
	1: switch_tbuilding_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_y2kp_11L12L_name) {
	dependent: switch_y2kp_11L12L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_POSTY2K),string(L12));
	1: string(STR_CONCAT_3, string(NAME_OBUILDING),string(PERIOD_POSTY2K),string(L12));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L12));
	1: string(STR_CONCAT_3, string(NAME_TAKAGI),string(PERIOD_POSTY2K),string(L11));
	1: string(STR_CONCAT_3, string(NAME_YBUILDING),string(PERIOD_POSTY2K),string(L12));

	1: string(STR_CONCAT_3, string(NAME_HASHIMOTO_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L13));
	1: string(STR_CONCAT_3, string(NAME_ISHIDA_COMMERCIAL_BUILDING),string(PERIOD_POSTY2K),string(L13));
	1: string(STR_CONCAT_3, string(NAME_ISHII_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L13));
	1: string(STR_CONCAT_3, string(NAME_YAMADA),string(PERIOD_POSTY2K),string(L14));
	1: string(STR_CONCAT_3, string(NAME_YAMADA),string(PERIOD_POSTY2K),string(L13));

	1: string(STR_CONCAT_3, string(NAME_HASHIMOTO_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L15));
	1: string(STR_CONCAT_3, string(NAME_ISHIDA_COMMERCIAL_BUILDING),string(PERIOD_POSTY2K),string(L15));
	1: string(STR_CONCAT_3, string(NAME_ISHIDA_COMMERCIAL_BUILDING),string(PERIOD_POSTY2K),string(L15));
	1: string(STR_CONCAT_3, string(NAME_ISHII_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L16));
	1: string(STR_CONCAT_3, string(NAME_ISHII_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L17));
	1: string(STR_CONCAT_3, string(NAME_TAKADA),string(PERIOD_POSTY2K),string(L18));
	1: string(STR_CONCAT_3, string(NAME_TBUILDING),string(PERIOD_POSTY2K),string(L16));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_y2kp_11L12L_colors)
	{
	dependent: switch_y2kp_11L12L_sprites;
	1: switch_aoki_office_colors;
	1: switch_obuilding_colors;
	2: switch_okada_office_tower_colors;
	1: switch_takagi_colors;
	1: switch_ybuilding_colors;

	1: switch_hashimoto_office_tower_colors;
	1: switch_ishida_commercial_building_colors;
	1: switch_ishii_office_tower_colors;
	1: switch_yamada_colors;
	1: switch_yamada_colors;

	1: switch_hashimoto_office_tower_colors;
	1: switch_ishida_commercial_building_colors;
	1: switch_ishida_commercial_building_colors;
	1: switch_ishii_office_tower_colors;
	1: switch_ishii_office_tower_colors;
	1: switch_takada_colors;
	1: switch_tbuilding_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_y2kp_11L12L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	// Population threshold to build this height of building
	PopOver11L12LCommercialThreshold() 	
) {return;}	

item(FEAT_HOUSES, item_commercial_y2kp_11L12L){
	property {
		substitute: 				27;
		name: 						string(NAME_XBUILDING);
		population: 				175;
		accepted_cargos: 			[[PASS, 4],[MAIL, 4],[GOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		name:						switch_y2kp_11L12L_name;
		default: 					switch_y2kp_11L12L_sprites;
		construction_check: 		switch_y2kp_11L12L_con_check;
		protection:					ProtectCommercial(); 	 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_y2kp_11L12L_colors;
	}
}

// End X-Building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_y2kp_9L10L.pnml" 1
// Begin y2kp_9L10L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_y2kp_9L10L_sprites) {
	1: switch_aoki_office_10L_snow;
	1: switch_hashimoto_office_tower_9L_snow;
	2: switch_okada_office_tower_10L_snow;
	1: switch_takagi_10L_snow;
	1: switch_tsuzumi_electronics_centre_10L_snow;
	1: switch_yamada_electronics_centre_10L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_y2kp_9L10L_name) {
	dependent: switch_y2kp_9L10L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_POSTY2K),string(L10));
	1: string(STR_CONCAT_3, string(NAME_HASHIMOTO_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L9));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_POSTY2K),string(L10));
	1: string(STR_CONCAT_3, string(NAME_TAKAGI),string(PERIOD_POSTY2K),string(L10));
	1: string(STR_CONCAT_3, string(NAME_TSUZUMI_ELECTRONICS_CENTRE),string(PERIOD_POSTY2K),string(L10));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_POSTY2K),string(L10));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_y2kp_9L10L_colors)
	{
	dependent: switch_y2kp_9L10L_sprites;
	1: switch_aoki_office_colors;
	1: switch_hashimoto_office_tower_colors;
	2: switch_okada_office_tower_colors;
	1: switch_takagi_colors;
	1: switch_tsuzumi_electronics_centre_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_y2kp_9L10L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	// Population threshold to build this height of building
	PopOver9L10LCommercialThreshold() 
) {return;}	

item(FEAT_HOUSES, item_commercial_y2kp_9L10L){
	property {
		substitute: 				27;
		name: 						string(NAME_XBUILDING);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 4],[GOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				2;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		name:						switch_y2kp_9L10L_name;
		default: 					switch_y2kp_9L10L_sprites;
		construction_check: 		switch_y2kp_9L10L_con_check;
		protection:					ProtectCommercial(); 	 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_y2kp_9L10L_colors;
	}
}

// End X-Building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_y2kp_7L8L.pnml" 1
// Begin y2kp_7L8L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_y2kp_7L8L_sprites) {
	1: switch_aoki_office_8L_snow;
	1: switch_aoyama_office_8L_snow;
	1: switch_aoyama_office_7L_snow;
	2: switch_okada_office_tower_8L_snow;
	1: switch_old_office_building_7L_snow;
	1: switch_old_office_building_8L_snow;
	1: switch_takemaru_shopping_centre_7L_snow;
	1: switch_yamada_electronics_centre_8L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_y2kp_7L8L_name) {
	dependent: switch_y2kp_7L8L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_LATE),string(L7));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_TAKEMARU_SHOPPING_CENTRE),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_LATE),string(L8));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_y2kp_7L8L_colors)
	{
	dependent: switch_y2kp_7L8L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	2: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
	1: switch_takemaru_shopping_centre_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_y2kp_7L8L_con_check, 
	FuncServicePASS() &&			// Must have passenger service
	CommercialCargoes() &&			// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()	&&				// Must be within two tiles of the same building class
	// Population threshold to build this height of building
	PopOver7L8LCommercialThreshold() 
) {return;}	

item(FEAT_HOUSES, item_commercial_y2kp_7L8L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				125;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				3;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_y2kp_7L8L_sprites;
		name:						switch_y2kp_7L8L_name;
		construction_check: 		switch_y2kp_7L8L_con_check;
		protection:					ProtectCommercial(); 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_y2kp_7L8L_colors;
	}
}

// End y2kp_7L8L
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/commercial/commercial_y2kp_5L6L.pnml" 1
// Begin y2kp_5L6L

// Sprites
random_switch (FEAT_HOUSES, SELF, switch_y2kp_5L6L_sprites) {
	1: switch_aoki_office_6L_snow;
	1: switch_aoyama_office_5L_snow;
	1: switch_aoyama_office_6L_snow;
	2: switch_okada_office_tower_6L_snow;
	1: switch_old_office_building_5L_snow;
	1: switch_old_office_building_6L_snow;
	1: switch_yamada_electronics_centre_6L_snow;
}

// Names
random_switch (FEAT_HOUSES, SELF, switch_y2kp_5L6L_name) {
	dependent: switch_y2kp_5L6L_sprites;
	1: string(STR_CONCAT_3, string(NAME_AOKI_OFFICE),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_AOYAMA_OFFICE),string(PERIOD_BOOM),string(L6));
	2: string(STR_CONCAT_3, string(NAME_OKADA_OFFICE_TOWER),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_OLD_OFFICE_BUILDING),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_YAMADA_ELECTRONICS_CENTRE),string(PERIOD_BOOM),string(L6));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_y2kp_5L6L_colors)
	{
	dependent: switch_y2kp_5L6L_sprites;
	1: switch_aoki_office_colors;
	1: switch_aoyama_office_colors;
	1: switch_aoyama_office_colors;
	2: switch_okada_office_tower_colors;
	1: switch_old_office_building_colors;
	1: switch_old_office_building_colors;
	1: switch_yamada_electronics_centre_colors;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_y2kp_5L6L_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	CommercialPopCheck() &&					// Is there population to allow another Commercial?
	ClusterBuildingClass()					// Must be within two tiles of the same building class
) {return;}	

item(FEAT_HOUSES, item_commercial_y2kp_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_OLD_OFFICE_BUILDING);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				6;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB), 
									bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			10;
		}
	graphics {
		default: 					switch_y2kp_5L6L_sprites;
		name:						switch_y2kp_5L6L_name;
		construction_check: 		switch_y2kp_5L6L_con_check;
		protection:					ProtectCommercial(); 	
		cargo_production: 			func_produce(13,4);
		colour: 					switch_y2kp_5L6L_colors;
	}
}

// End y2kp_5L6L
# 1 "JPplusHousesCommercial.pnml" 4

// SKYSCRAPERS
# 1 "src/houses/skyscrapers/tsuno_building/tsuno_building.pnml" 1
// Begin tsuno_building

// Building Sprites
spriteset (spr_build_tsuno_building_north, 							"src/houses/skyscrapers/tsuno_building/building.png") {template_house_250(261,1)}
spriteset (spr_build_tsuno_building_east, 							"src/houses/skyscrapers/tsuno_building/building.png") {template_house_250(1,1)}

spriteset (spr_build_tsuno_building_north_snow, 					"src/houses/skyscrapers/tsuno_building/building.png") {template_house_250(261,252)}
spriteset (spr_build_tsuno_building_east_snow, 						"src/houses/skyscrapers/tsuno_building/building.png") {template_house_250(1,252)}

// Ground Sprites
spriteset (spr_ground_tsuno_building_north, 						"src/houses/skyscrapers/tsuno_building/ground.png") {template_house_250(261,1)}
spriteset (spr_ground_tsuno_building_east, 							"src/houses/skyscrapers/tsuno_building/ground.png") {template_house_250(1,1)}

spriteset (spr_ground_tsuno_building_north_snow, 					"src/houses/skyscrapers/tsuno_building/ground.png") {template_house_250(261,252)}
spriteset (spr_ground_tsuno_building_east_snow, 					"src/houses/skyscrapers/tsuno_building/ground.png") {template_house_250(1,252)}

// Normal Sprites
spritelayout sprlay_tsuno_building_north {
	ground {
		sprite: spr_ground_tsuno_building_north(construction_state);
	}
	building {
		sprite: spr_build_tsuno_building_north(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuno_building_east {
	ground {
		sprite: spr_ground_tsuno_building_east(construction_state);
	}
	building {
		sprite: spr_build_tsuno_building_east(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_tsuno_building_snow_north {
	ground {
		sprite: spr_ground_tsuno_building_north_snow(construction_state);
	}
	building {
		sprite: spr_build_tsuno_building_north_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tsuno_building_snow_east {
	ground {
		sprite: spr_ground_tsuno_building_east_snow(construction_state);
	}
	building {
		sprite: spr_build_tsuno_building_east_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tsuno_building_north,terrain_type) {
	TILETYPE_SNOW: sprlay_tsuno_building_snow_north;
	sprlay_tsuno_building_north;
}
switch(FEAT_HOUSES, SELF, switch_tsuno_building_east,terrain_type) {
	TILETYPE_SNOW: sprlay_tsuno_building_snow_east;
	sprlay_tsuno_building_east;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_tsuno_building)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_tsuno_building_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}		
 

item(FEAT_HOUSES, item_tsuno_building, 76, HOUSE_SIZE_1X2){
	property {
		substitute: 				7; 													
		name: 						string(NAME_TSUNO_BUILDING);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				255;
		accepted_cargos: 			[[PASS, 8],[MAIL, 4],[GOOD, 4]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[2006,0xFFFF];
		minimum_lifetime: 			20;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		graphics_north: 			switch_tsuno_building_north;
		graphics_east: 				switch_tsuno_building_east;
		construction_check:			switch_tsuno_building_con_check;
		cargo_production: 			func_produce(24,10);
		colour: 					rand_recolor_tsuno_building;
	}
}

// End tsuno_building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/office_tower/office_tower.pnml" 1
// Begin office_tower

// Building Sprites
spriteset (spr_build_office_tower, 							"src/houses/skyscrapers/office_tower/building.png") 					{template_house_250(1,1)}
spriteset (spr_build_office_tower_snow, 					"src/houses/skyscrapers/office_tower/building.png") 					{template_house_250(1,252)}

// Ground Sprites
spriteset (spr_ground_office_tower, 						"src/houses/skyscrapers/office_tower/ground.png") 						{template_house_250(1,1)}
spriteset (spr_ground_office_tower_snow, 					"src/houses/skyscrapers/office_tower/ground.png") 						{template_house_250(1,252)}

// Normal Sprites
spritelayout sprlay_office_tower {
	ground {
		sprite: spr_ground_office_tower(construction_state);
	}
	building {
		sprite: spr_build_office_tower(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_office_tower_snow {
	ground {
		sprite: spr_ground_office_tower_snow(construction_state);
	}
	building {
		sprite: spr_build_office_tower_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_office_tower,terrain_type) {
	TILETYPE_SNOW: sprlay_office_tower_snow;
	sprlay_office_tower;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_office_tower)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_office_tower_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_office_tower){
	property {
		substitute: 				4; 													
		name: 						string(NAME_OFFICE_TOWER);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				220;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_office_tower;
		construction_check:			switch_office_tower_con_check;
		cargo_production: 			func_produce(24,10);
		colour: 					rand_recolor_office_tower; 						// No recolouring
	}
}

// End office_tower
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/large_office_building/large_office_building.pnml" 1
// Begin large_office_building

// Building Sprites
spriteset (spr_build_large_office_building, 							"src/houses/skyscrapers/large_office_building/building.png") 					{template_house_250_wide(1,1)}
spriteset (spr_build_large_office_building_snow, 						"src/houses/skyscrapers/large_office_building/building.png") 					{template_house_250_wide(1,252)}

// Ground Sprites
spriteset (spr_ground_large_office_building, 							"src/houses/skyscrapers/large_office_building/ground.png") 						{template_ground(1,1)}
spriteset (spr_ground_large_office_building_snow, 						"src/houses/skyscrapers/large_office_building/ground.png") 						{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_large_office_building {
	ground {
		sprite: spr_ground_large_office_building(construction_state);
	}
	building {
		sprite: spr_build_large_office_building(construction_state);
		//xoffset: -1;
		//yoffset: -2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_large_office_building_snow {
	ground {
		sprite: spr_ground_large_office_building_snow(construction_state);
	}
	building {
		sprite: spr_build_large_office_building_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_large_office_building,terrain_type) {
	TILETYPE_SNOW: sprlay_large_office_building_snow;
	sprlay_large_office_building;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_large_office_building)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
*/

// Construction Check
switch (FEAT_HOUSES, SELF, switch_large_office_building_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper()						// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_large_office_building){
	property {
		substitute: 				4; 													
		name: 						string(NAME_LARGE_OFFICE_TOWER);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				220;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_large_office_building;
		construction_check:			switch_large_office_building_con_check;
		cargo_production: 			func_produce(24,10);
		//colour: 					rand_recolor_large_office_building; 
	}
}

// End large_office_building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/multimedia_offices/multimedia_offices.pnml" 1
// Begin multimedia_offices

// Building Sprites
spriteset (spr_build_multimedia_offices, 			"src/houses/skyscrapers/multimedia_offices/building.png") 				{template_house_200_wide(1,1)}
spriteset (spr_build_multimedia_offices_snow, 		"src/houses/skyscrapers/multimedia_offices/building.png") 				{template_house_200_wide(1,202)}

// Ground Sprites
spriteset (spr_ground_multimedia_offices, 			"src/houses/skyscrapers/multimedia_offices/ground.png") 				{template_ground(1,1)}
spriteset (spr_ground_multimedia_offices_snow, 		"src/houses/skyscrapers/multimedia_offices/ground.png") 				{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_multimedia_offices {
	ground {
		sprite: spr_ground_multimedia_offices(construction_state);
	}
	building {
		sprite: spr_build_multimedia_offices(construction_state);
		xoffset: 3;
		yoffset: 0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_multimedia_offices_snow {
	ground {
		sprite: spr_ground_multimedia_offices_snow(construction_state);
	}
	building {
		sprite: spr_build_multimedia_offices_snow(construction_state);
		xoffset: 3;
		yoffset: 0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_multimedia_offices,terrain_type) {
	TILETYPE_SNOW: sprlay_multimedia_offices_snow;
	sprlay_multimedia_offices;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_multimedia_offices)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
*/

// Construction Check
switch (FEAT_HOUSES, SELF, switch_multimedia_offices_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_multimedia_offices){
	property {
		substitute: 				4; 													
		name: 						string(NAME_MULTIMEDIA_OFFICES);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				220;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1990,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_multimedia_offices;
		construction_check:			switch_multimedia_offices_con_check;
		cargo_production: 			func_produce(24,10);
		//colour: 					rand_recolor_multimedia_offices; 
	}
}

// End multimedia_offices
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/enterprise_tower/enterprise_tower.pnml" 1
// Begin enterprise_tower

// Building Sprites
spriteset (spr_build_enterprise_tower, 			"src/houses/skyscrapers/enterprise_tower/building.png") 			{template_house_200_wide(1,1)}
spriteset (spr_build_enterprise_tower_snow, 	"src/houses/skyscrapers/enterprise_tower/building.png") 			{template_house_200_wide(1,202)}

// Ground Sprites
spriteset (spr_ground_enterprise_tower, 		"src/houses/skyscrapers/enterprise_tower/ground.png") 				{template_house_80(1,1)}
spriteset (spr_ground_enterprise_tower_snow, 	"src/houses/skyscrapers/enterprise_tower/ground.png") 				{template_house_80(1,82)}

// Normal Sprites
spritelayout sprlay_enterprise_tower {
	ground {
		sprite: spr_ground_enterprise_tower(construction_state);
	}
	building {
		sprite: spr_build_enterprise_tower(construction_state);
		xoffset:  0;
		yoffset:  3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_enterprise_tower_snow {
	ground {
		sprite: spr_ground_enterprise_tower_snow(construction_state);
	}
	building {
		sprite: spr_build_enterprise_tower_snow(construction_state);
		xoffset:  0;
		yoffset:  3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_enterprise_tower,terrain_type) {
	TILETYPE_SNOW: sprlay_enterprise_tower_snow;
	sprlay_enterprise_tower;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_enterprise_tower)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
*/

// Construction Check
switch (FEAT_HOUSES, SELF, switch_enterprise_tower_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_enterprise_tower){
	property {
		substitute: 				4; 													
		name: 						string(NAME_ENTERPRISE_TOWER);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				220;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1990,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_enterprise_tower;
		construction_check:			switch_enterprise_tower_con_check;
		cargo_production: 			func_produce(24,10);
		//colour: 					rand_recolor_enterprise_tower; 
	}
}

// End enterprise_tower
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/insurance_tower/insurance_tower.pnml" 1
// Begin insurance_tower

// Building Sprites
spriteset (spr_build_insurance_tower, 			"src/houses/skyscrapers/insurance_tower/building.png") 				{template_house_200_wide(1,1)}
spriteset (spr_build_insurance_tower_snow, 		"src/houses/skyscrapers/insurance_tower/building.png") 				{template_house_200_wide(1,202)}

// Ground Sprites
spriteset (spr_ground_insurance_tower, 			"src/houses/skyscrapers/insurance_tower/ground.png") 				{template_ground(1,1)}
spriteset (spr_ground_insurance_tower_snow, 	"src/houses/skyscrapers/insurance_tower/ground.png") 				{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_insurance_tower {
	ground {
		sprite: spr_ground_insurance_tower(construction_state);
	}
	building {
		sprite: spr_build_insurance_tower(construction_state);
		xoffset:  0;
		yoffset:  2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_insurance_tower_snow {
	ground {
		sprite: spr_ground_insurance_tower_snow(construction_state);
	}
	building {
		sprite: spr_build_insurance_tower_snow(construction_state);
		xoffset:  0;
		yoffset:  2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_insurance_tower,terrain_type) {
	TILETYPE_SNOW: sprlay_insurance_tower_snow;
	sprlay_insurance_tower;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_insurance_tower)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_insurance_tower_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_insurance_tower){
	property {
		substitute: 				4; 													
		name: 						string(NAME_INSURANCE_TOWER);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				200;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1960,0xFFFF];											// JPS=1989
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, ABOVE_SNOWLINE
									)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_insurance_tower;
		construction_check:			switch_insurance_tower_con_check;
		cargo_production: 			func_produce(24,10);
		colour: 					rand_recolor_insurance_tower; 
	}
}

// End insurance_tower
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/modern_office_tower/modern_office_tower.pnml" 1
// Begin modern_office_tower

// Building Sprites
spriteset (spr_build_modern_office_tower, 			"src/houses/skyscrapers/modern_office_tower/building.png") 				{template_house_200_wide(1,1)}
spriteset (spr_build_modern_office_tower_snow, 		"src/houses/skyscrapers/modern_office_tower/building.png") 				{template_house_200_wide(1,202)}

// Ground Sprites
spriteset (spr_ground_modern_office_tower, 			"src/houses/skyscrapers/modern_office_tower/ground.png") 				{template_ground(1,1)}
spriteset (spr_ground_modern_office_tower_snow, 	"src/houses/skyscrapers/modern_office_tower/ground.png") 				{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_modern_office_tower {
	ground {
		sprite: spr_ground_modern_office_tower(construction_state);
	}
	building {
		sprite: spr_build_modern_office_tower(construction_state);
		xoffset:  2;
		yoffset:  0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_modern_office_tower_snow {
	ground {
		sprite: spr_ground_modern_office_tower_snow(construction_state);
	}
	building {
		sprite: spr_build_modern_office_tower_snow(construction_state);
		xoffset:  2;
		yoffset:  0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_modern_office_tower,terrain_type) {
	TILETYPE_SNOW: sprlay_modern_office_tower_snow;
	sprlay_modern_office_tower;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_modern_office_tower)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_modern_office_tower_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver9L10LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_modern_office_tower){
	property {
		substitute: 				4; 													
		name: 						string(NAME_MODERN_OFFICE_TOWER);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				220;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_modern_office_tower;
		construction_check:			switch_modern_office_tower_con_check;
		cargo_production: 			func_produce(24,10);
		colour: 					rand_recolor_modern_office_tower; 
	}
}

// End modern_office_tower
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/sato_building/sato_building.pnml" 1
// Begin sato_building

// Building Sprites
spriteset (spr_build_sato_building, 			"src/houses/skyscrapers/sato_building/building.png") 			{template_house_200_wide(1,1)}
spriteset (spr_build_sato_building_snow, 		"src/houses/skyscrapers/sato_building/building.png") 			{template_house_200_wide(1,202)}

// Ground Sprites
spriteset (spr_ground_sato_building, 			"src/houses/skyscrapers/sato_building/ground.png") 				{template_ground(1,1)}
spriteset (spr_ground_sato_building_snow, 		"src/houses/skyscrapers/sato_building/ground.png") 				{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_sato_building {
	ground {
		sprite: spr_ground_sato_building (construction_state);
	}
	building {
		sprite: spr_build_sato_building (construction_state);
		//xoffset:  2;
		//yoffset:  0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_sato_building_snow {
	ground {
		sprite: spr_ground_sato_building_snow (construction_state);
	}
	building {
		sprite: spr_build_sato_building_snow (construction_state);
		//xoffset:  2;
		//yoffset:  0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_sato_building,terrain_type) {
	TILETYPE_SNOW: sprlay_sato_building_snow;
	sprlay_sato_building;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_sato_building)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_sato_building_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver7L8LCommercialThreshold() &&		// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_sato_building){
	property {
		substitute: 				4; 													
		name: 						string(NAME_SATO_BUILDING);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				200;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1960,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_sato_building;
		construction_check:			switch_sato_building_con_check;
		cargo_production: 			func_produce(16,6);
		colour: 					rand_recolor_sato_building; 
	}
}

// End sato_building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/bank_building/bank_building.pnml" 1
// Begin bank_building

// Building Sprites
spriteset (spr_build_bank_building, 			"src/houses/skyscrapers/bank_building/building.png") 			{template_house_200(1,1)}
spriteset (spr_build_bank_building_snow, 		"src/houses/skyscrapers/bank_building/building.png") 			{template_house_200(1,202)}

// Ground Sprites
spriteset (spr_ground_bank_building, 			"src/houses/skyscrapers/bank_building/ground.png") 				{template_ground(1,1)}
spriteset (spr_ground_bank_building_snow, 		"src/houses/skyscrapers/bank_building/ground.png") 				{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_bank_building {
	ground {
		sprite: spr_ground_bank_building (construction_state);
	}
	building {
		sprite: spr_build_bank_building (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_bank_building_snow {
	ground {
		sprite: spr_ground_bank_building_snow (construction_state);
	}
	building {
		sprite: spr_build_bank_building_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_bank_building,terrain_type) {
	TILETYPE_SNOW: sprlay_bank_building_snow;
	sprlay_bank_building;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_bank_building)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_bank_building_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	

item(FEAT_HOUSES, item_bank_building){
	property {
		substitute: 				4; 													
		name: 						string(NAME_BANK_BUILDING);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				220;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1980,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_bank_building;
		construction_check:			switch_bank_building_con_check;
		cargo_production: 			func_produce(16,6);
		colour: 					rand_recolor_bank_building; 
	}
}

// End bank_building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/sugiyama_office_building/sugiyama_office_building.pnml" 1
// Begin sugiyama_office_building

// Building Sprites
spriteset (spr_sugiyama_office_building, 						"src/houses/skyscrapers/sugiyama_office_building/building.png") 				{template_house_150_wide(1,1)}
spriteset (spr_sugiyama_office_building_snow, 					"src/houses/skyscrapers/sugiyama_office_building/building.png") 				{template_house_150_wide(1,152)}

// Ground Tiles
spriteset (spr_sugiyama_office_building_ground, 				"src/houses/skyscrapers/sugiyama_office_building/ground.png") 					{template_ground(1,1)}
spriteset (spr_sugiyama_office_building_ground_snow, 			"src/houses/skyscrapers/sugiyama_office_building/ground.png") 					{template_ground(1,33)}

spritelayout sprlay_sugiyama_office_building_norm {
	ground {
		sprite: 		spr_sugiyama_office_building_ground(3);
	}
	building {
		sprite: 		spr_sugiyama_office_building(3);
		yoffset:  		-1;
		//recolour_mode: 	RECOLOUR_REMAP; 
		//palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_sugiyama_office_building_snow {
	ground {
		sprite: 		spr_sugiyama_office_building_ground_snow(3);
	}
	building {
		sprite: 		spr_sugiyama_office_building_snow(3);
		yoffset:  		-1;
		//recolour_mode: 	RECOLOUR_REMAP; 
		//palette: 		PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_sugiyama_office_building_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_sugiyama_office_building_snow;
	sprlay_sugiyama_office_building_norm;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_sugiyama_office_building)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
*/
// Construction Check
switch (FEAT_HOUSES, SELF, switch_sugiyama_office_building_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver7L8LCommercialThreshold() &&		// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}	


item(FEAT_HOUSES, item_sugiyama_office_building){
	property {
		substitute: 				27;
		name: 						string(NAME_SUGIYAMA_OFFICE_BUILDING);
		population: 				200;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				5;
		years_available: 			[1990,0xFFFF];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(						
										TOWNZONE_CENTRE				// 4
										//TOWNZONE_INNER_SUBURB,	// 3
										//TOWNZONE_OUTER_SUBURB,	// 2
										//TOWNZONE_OUTSKIRT			// 1
										//TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class: 			2;
		}
	graphics {
		default: 					switch_sugiyama_office_building_sprites;
		construction_check: 		switch_sugiyama_office_building_con_check; 	
		cargo_production: 			func_produce(13,4);
		//colour: 					rand_recolor_sugiyama_office_building;
	}
}

// End sugiyama_office_building
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/ueda_office_block/ueda_office_block.pnml" 1
// Begin ueda_office_block

// Building Sprites
spriteset (spr_build_ueda_office_block, 			"src/houses/skyscrapers/ueda_office_block/building.png") 			{template_house_200_wide(1,1)}
spriteset (spr_build_ueda_office_block_snow, 		"src/houses/skyscrapers/ueda_office_block/building.png") 			{template_house_200_wide(1,202)}

// Ground Sprites
spriteset (spr_ground_ueda_office_block, 			"src/houses/skyscrapers/ueda_office_block/ground.png") 				{template_ground(1,1)}
spriteset (spr_ground_ueda_office_block_snow, 		"src/houses/skyscrapers/ueda_office_block/ground.png") 				{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_ueda_office_block {
	ground {
		sprite: spr_ground_ueda_office_block (construction_state);
	}
	building {
		sprite: spr_build_ueda_office_block (construction_state);
		//xoffset:  2;
		//yoffset:  0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_ueda_office_block_snow {
	ground {
		sprite: spr_ground_ueda_office_block_snow (construction_state);
	}
	building {
		sprite: spr_build_ueda_office_block_snow (construction_state);
		//xoffset:  2;
		//yoffset:  0;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_ueda_office_block,terrain_type) {
	TILETYPE_SNOW: sprlay_ueda_office_block_snow;
	sprlay_ueda_office_block;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_ueda_office_block)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
*/

// Construction Check
switch (FEAT_HOUSES, SELF, switch_ueda_office_block_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver9L10LCommercialThreshold() &&	// Population of city check
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 10
) {return;}	

item(FEAT_HOUSES, item_ueda_office_block){
	property {
		substitute: 				4; 													
		name: 						string(NAME_UEDA_OFFICE_BLOCK);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				200;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1955,1989];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_ueda_office_block;
		construction_check:			switch_ueda_office_block_con_check;
		cargo_production: 			func_produce(16,6);
		//colour: 					rand_recolor_ueda_office_block; 
	}
}

// End ueda_office_block
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/yamaguchi_office/yamaguchi_office.pnml" 1
// Begin yamaguchi_office

// Building Sprites
spriteset (spr_yamaguchi_office_norm, 					"src/houses/skyscrapers/yamaguchi_office/building.png") 				{template_house_128(1,1)}
spriteset (spr_yamaguchi_office_snow, 					"src/houses/skyscrapers/yamaguchi_office/building.png") 				{template_house_128(1,130)}

// Ground Tiles
spriteset (spr_yamaguchi_office_ground, 				"src/houses/skyscrapers/yamaguchi_office/ground.png") 					{template_ground(1,1)}
spriteset (spr_yamaguchi_office_ground_snow, 			"src/houses/skyscrapers/yamaguchi_office/ground.png") 					{template_ground(1,33)}

spritelayout sprlay_yamaguchi_office_norm {
	ground {
		sprite: spr_yamaguchi_office_ground(3);
	}
	building {
		sprite: spr_yamaguchi_office_norm(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamaguchi_office_snow {
	ground {
		sprite: spr_yamaguchi_office_ground_snow(3);
	}
	building {
		sprite: spr_yamaguchi_office_snow(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yamaguchi_office_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yamaguchi_office_snow;
	sprlay_yamaguchi_office_norm;
}


// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_yamaguchi_office)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		// 1: PALETTE_CC_PINK;		// Nah
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_yamaguchi_office_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	CommercialCargoes() &&					// Commerical Cargo Requirement as per parameter
	PopOver9L10LCommercialThreshold() &&	// Population of city check
	IsUniqueHouse()	&&						// Only one per city
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 10
) {return;}	

item(FEAT_HOUSES, item_yamaguchi_office){
	property {
		substitute: 				27;
		name: 						string(NAME_YAMAGUCHI_OFFICE);
		population: 				180;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				5;
		years_available: 			[1960,0xFFFF];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class: 			5;
		}
	graphics {
		default: 					switch_yamaguchi_office_snow;
		construction_check: 		switch_yamaguchi_office_con_check; 	
		cargo_production: 			func_produce(13,4);
		colour: 					rand_recolor_yamaguchi_office;
	}
}

// End yamaguchi_office
# 1 "JPplusHousesCommercial.pnml" 4
# 1 "src/houses/skyscrapers/yamashiro_office_building/yamashiro_office_building.pnml" 1
// Begin yamashiro_office_building

// Building Sprites
spriteset (spr_build_yamashiro_office_building_north, 				"src/houses/skyscrapers/yamashiro_office_building/building.png") 		{template_house_200(1,1)}
spriteset (spr_build_yamashiro_office_building_east, 				"src/houses/skyscrapers/yamashiro_office_building/building.png") 		{template_house_200(261,1)}

spriteset (spr_build_yamashiro_office_building_north_snow, 			"src/houses/skyscrapers/yamashiro_office_building/building.png") 		{template_house_200(1,202)}
spriteset (spr_build_yamashiro_office_building_east_snow, 			"src/houses/skyscrapers/yamashiro_office_building/building.png") 		{template_house_200(261,202)}

// Ground Sprites
spriteset (spr_ground_yamashiro_office_building_north, 				"src/houses/skyscrapers/yamashiro_office_building/ground.png") 			{template_ground(1,1)}
spriteset (spr_ground_yamashiro_office_building_east, 				"src/houses/skyscrapers/yamashiro_office_building/ground.png") 			{template_ground(261,1)}

spriteset (spr_ground_yamashiro_office_building_north_snow, 		"src/houses/skyscrapers/yamashiro_office_building/ground.png") 			{template_ground(1,33)}
spriteset (spr_ground_yamashiro_office_building_east_snow, 			"src/houses/skyscrapers/yamashiro_office_building/ground.png") 			{template_ground(261,33)}

// Normal Sprites
spritelayout sprlay_yamashiro_office_building_north {
	ground {
		sprite: spr_ground_yamashiro_office_building_north(construction_state);
	}
	building {
		sprite: spr_build_yamashiro_office_building_north(construction_state);
		xoffset: 2;
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamashiro_office_building_east {
	ground {
		sprite: spr_ground_yamashiro_office_building_east(construction_state);
	}
	building {
		sprite: spr_build_yamashiro_office_building_east(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yamashiro_office_building_snow_north {
	ground {
		sprite: spr_ground_yamashiro_office_building_north_snow(construction_state);
	}
	building {
		sprite: spr_build_yamashiro_office_building_north_snow(construction_state);
		xoffset: 2;
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_yamashiro_office_building_snow_east {
	ground {
		sprite: spr_ground_yamashiro_office_building_east_snow(construction_state);
	}
	building {
		sprite: spr_build_yamashiro_office_building_east_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yamashiro_office_building_north,terrain_type) {
	TILETYPE_SNOW: sprlay_yamashiro_office_building_snow_north;
	sprlay_yamashiro_office_building_north;
}
switch(FEAT_HOUSES, SELF, switch_yamashiro_office_building_east,terrain_type) {
	TILETYPE_SNOW: sprlay_yamashiro_office_building_snow_east;
	sprlay_yamashiro_office_building_east;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_yamashiro_office_building)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_yamashiro_office_building_con_check, 
	FuncServicePASS() &&					// Must have passenger service
	IsCity() && 							// Can only appear in cities
	IsUniqueHouse() &&						// Only one in city
	PopOver11L12LCommercialThreshold() &&	// Population of city check
	//Class5PopCheck() &&						// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&				// Must be within two tiles of the same building class
	IfFirstSkyscraper() 					// If first skyscraper, it must build beside a Class 2
) {return;}		
 

item(FEAT_HOUSES, item_yamashiro_office_building, 102, HOUSE_SIZE_1X2){
	property {
		substitute: 				7; 													
		name: 						string(NAME_YAMASHIRO_OFFICE_BUILDING);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				255;
		accepted_cargos: 			[[PASS, 8],[MAIL, 4],[GOOD, 4]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1990,0xFFFF];
		minimum_lifetime: 			20;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		graphics_north: 			switch_yamashiro_office_building_north;
		graphics_east: 				switch_yamashiro_office_building_east;
		construction_check:			switch_yamashiro_office_building_con_check;
		cargo_production: 			func_produce(24,10);
		colour: 					rand_recolor_yamashiro_office_building;
	}
}

// End yamashiro_office_building
# 1 "JPplusHousesCommercial.pnml" 4
