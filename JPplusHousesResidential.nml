# 1 "JPplusHousesResidential.pnml"
/*---HEADER--*/

// Define the GRF
# 1 "src/header_residential.pnml" 1
/* *** Begin Header *** */

/*
*	Welcome to JPplusHouse Residential!
*/

grf {
	grfid: 						"KR05";
	name: 						string(STR_GRF_NAME_RESIDENTIAL);
	desc: 						string(STR_GRF_DESC_RESIDENTIAL);
	version: 					1;
	min_compatible_version: 	1;
	url: 						string(STR_WEBSITE);

	// Parameter to decide which cargoes are required, if any, to allow Commercial buildings to appear
	param 1 {
		param_prohibition_shrine {
			type:				bool;
			name:				string(STR_PARAM_NAME_PROHIBITION_SHRINE);
			desc: 				string(STR_PARAM_DESC_PROHIBITION_SHRINE);
			def_value: 			0;
		}
	}
	param 2 {
		param_residential_threshold_5L6L {
			type:				int;
			name:				string(STR_PARAM_NAME_RESIDENTIAL_THRESHOLD_5L6L);
			desc: 				string(STR_PARAM_DESC_THRESHOLD);
			min_value:			1000;
			max_value:			50000;
			def_value: 			10000;
		}
	}
	param 3 {
		param_residential_threshold_7L8L {
			type:				int;
			name:				string(STR_PARAM_NAME_RESIDENTIAL_THRESHOLD_7L8L);
			desc: 				string(STR_PARAM_DESC_THRESHOLD);
			min_value:			1000;
			max_value:			5000000;
			def_value: 			25000;
		}
	}
	param 4 {
		param_residential_threshold_9L10L {
			type:				int;
			name:				string(STR_PARAM_NAME_RESIDENTIAL_THRESHOLD_9L10L);
			desc: 				string(STR_PARAM_DESC_THRESHOLD);
			min_value:			1000;
			max_value:			5000000;
			def_value: 			50000;
		}
	}
}

if (version_openttd(1,10,0,28004) > openttd_version) {
	error(FATAL, string(STR_ERROR_GAME_VERSION));
}

if (grf_future_status("KR06") == 0) {
    error(FATAL, MUST_LOAD_BEFORE, string(STR_ERROR_USED_WITH_PART_TWO));
}


disable_item(FEAT_HOUSES);

/* *** End Header *** */
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/cargotable.pnml" 1
/* Begin cargotable */

cargotable {
	PASS, 		// Obviously
	MAIL, 		// Obviously
	GOOD, 		// For Commercial Buildings
	CASS,		// For Shops
	EOIL,		// For Restaurants
	FISH,		// For Restaurants
	FOOD, 		// For Stadiums and Restaurants
	FRUT,		// For Shops
	JAVA,		// For Restaurants
	LVST,		// For Restaurants
	BEER, 		// For Stadiums
	PETR,		// For Petrol Stations
	RFPR,		// For Hospitals	
}

/* Production loop, shared by all houses. Individual production rates stored in temporary registers in the function below.*/

switch (FEAT_HOUSES, SELF, switch_alt_production, getbits(extra_callback_info1, 0, 8)) {
	0: (PASS * 256) + (abs(extra_callback_info2 % 8) == 0) * LOAD_TEMP(1);
	1: (MAIL * 256) + (abs(extra_callback_info2 % 8) == 0) * LOAD_TEMP(2);
	return CB_RESULT_HOUSE_NO_MORE_PRODUCTION;
}

/* Production levels for passengers and mail, are passed as arguments to this function for use in the production loop. */
switch (FEAT_HOUSES, SELF, func_produce, pass, mail, [STORE_TEMP(pass, 1), STORE_TEMP(mail, 2)] ) {switch_alt_production;}

/* End cargotable */
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/sprite_templates.pnml" 1
// Begin Sprite Templates

// Ground Tile Template

template template_ground(x, y) {   
	//left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		31,		-31,		01,	    NOCROP | ANIM]
    sw: [ x+65,		y,		64,		31,		-31,		01,	    NOCROP | ANIM]
    nw: [ x+130,	y,		64,		31,		-31,		01,	    NOCROP | ANIM]
    ne: [ x+195,	y,		64,		31,		-31,		01,	    NOCROP | ANIM]
}

// House Templates

template template_house_80_2dir(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    nw: [ x,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    ne: [ x+65,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
}

template template_house_80(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		80,		-31,		-48,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		80,		-31,		-48,	NOCROP | ANIM]
}

template template_house_80_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		80,	    -37,		-48,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		80,	    -37,		-48,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,		80,	    -37,		-48,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		80,	    -37,		-48,	NOCROP | ANIM]
}

template template_house_80_wide_ground(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x+6,		y,		64,		80,	    -31,		-48,	NOCROP | ANIM]
    sw: [ x+83,		y,		64,		80,	    -31,		-48,	NOCROP | ANIM]  
    nw: [ x+160,	y,		64,		80,	    -31,		-48,	NOCROP | ANIM]
    ne: [ x+237,	y,		64,		80,	    -31,		-48,	NOCROP | ANIM]
}

template template_house_100_1dir(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    sw: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    nw: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    ne: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
}

template template_house_100(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		100,	-31,		-68,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		100,	-31,		-68,	NOCROP | ANIM]
}

template template_house_100_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		100,	-37,		-68,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		100,	-37,		-68,	NOCROP | ANIM]
    nw: [ x+154,	y,		76,		100,	-37,		-68,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		100,	-37,		-68,	NOCROP | ANIM]
}

template template_house_128_1dir(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    sw: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    nw: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    ne: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
}

template template_house_128(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		128,	-31,		-96,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		128,	-31,		-96,	NOCROP | ANIM]
}

template template_house_128_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		128,	-37,		-96,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		128,	-37,		-96,	NOCROP | ANIM]
    nw: [ x+154,	y,		76,		128,	-37,		-96,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		128,	-37,		-96,	NOCROP | ANIM]
}

template template_house_150(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		150,	-31,		-118,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		150,	-31,		-118,	NOCROP | ANIM]  
    nw: [ x+130,	y,		64,	    150,	-31,		-118,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		150,	-31,		-118,	NOCROP | ANIM]
}

template template_house_150_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		150,	-37,		-118,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		150,	-37,		-118,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,	    150,	-37,		-118,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		150,	-37,		-118,	NOCROP | ANIM]
}

template template_house_200(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		200,	-31,		-168,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		200,	-31,		-168,	NOCROP | ANIM]
    nw: [ x+130,	y,		64,		200,	-31,		-168,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		200,	-31,		-168,	NOCROP | ANIM]
}

template template_house_200_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		200,	-37,		-168,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		200,	-37,		-168,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,		200,	-37,		-168,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		200,	-37,		-168,	NOCROP | ANIM]
}

template template_house_250(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		64,		250,	-31,		-218,	NOCROP | ANIM]
    sw: [ x+65,		y,		64,		250,	-31,		-218,	NOCROP | ANIM]  
    nw: [ x+130,	y,		64,		250,	-31,		-218,	NOCROP | ANIM]
    ne: [ x+195,	y,		64,		250,	-31,		-218,	NOCROP | ANIM]
}

template template_house_250_wide(x, y) {
    //left_x, upper_y, width, height, offset_x, offset_y
    se: [ x,		y,		76,		250,	-37,		-218,	NOCROP | ANIM]
    sw: [ x+77,		y,		76,		250,	-37,		-218,	NOCROP | ANIM]  
    nw: [ x+154,	y,		76,		250,	-37,		-218,	NOCROP | ANIM]
    ne: [ x+231,	y,		76,		250,	-37,		-218,	NOCROP | ANIM]
}

// End Sprite Templates
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/id_residential.pnml" 1
// Assign IDs

// HOUSES

item(FEAT_HOUSES, item_house_1870_dense,            05, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_house_1870,                  21, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_house_1945_dense,            06, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_house_1945,                  22, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_house_hist_dense,            13, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_house_hist,                  17, HOUSE_SIZE_1X1) {}

// APARTMENTS

// Post War
item(FEAT_HOUSES, item_apartments_post_3L4L,        30, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_post_5L6L,        45, HOUSE_SIZE_1X1) {}

// Boom period
item(FEAT_HOUSES, item_apartments_boom_3L4L,        11, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_boom_5L6L,        27, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_boom_7L8L,        10, HOUSE_SIZE_1X1) {}

// Late Twentieth Century
item(FEAT_HOUSES, item_apartments_late_3L4L,        48, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_late_5L6L,        88, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_late_7L8L,        46, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_late_9L10L,       59, HOUSE_SIZE_1X1) {}

// Post Y2K
item(FEAT_HOUSES, item_apartments_y2kp_3L4L,        120,HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_y2kp_5L6L,        31, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_y2kp_7L8L,        35, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_apartments_y2kp_9L10L,       118,HOUSE_SIZE_1X1) {}

// LANDMARKS
//item(FEAT_HOUSES, item_fire_station_01,           107,HOUSE_SIZE_2X1) {}  // 108,         FEAT_HOUSES
//item(FEAT_HOUSES, item_hospital_01,               40, HOUSE_SIZE_2X2) {}  // 41, 42, 43,  FEAT_HOUSES FEAT_HOUSES FEAT_HOUSES
//item(FEAT_HOUSES, item_police_station_01,         105,HOUSE_SIZE_1X2) {}  // 106,         FEAT_HOUSES
//item(FEAT_HOUSES, item_stadium_01,                60, HOUSE_SIZE_2X2) {}  // 61, 62, 63,  FEAT_HOUSES FEAT_HOUSES FEAT_HOUSES
//item(FEAT_HOUSES, item_shiro_01,                  70, HOUSE_SIZE_2X2) {}  // 71, 72, 73,  FEAT_HOUSES FEAT_HOUSES FEAT_HOUSES
item(FEAT_HOUSES, item_shrine_01,                   113,HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_shrine_02,                   114,HOUSE_SIZE_1X1) {}
//item(FEAT_HOUSES, item_temple,                    66, HOUSE_SIZE_2X2) {}  // 67, 68, 69,  FEAT_HOUSES FEAT_HOUSES FEAT_HOUSES

// SHOPS

//item(FEAT_//HOUSES, item_cinema,                  101,HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_convini_01,                  95, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_onsen_01,                    93, HOUSE_SIZE_1X1) {}
//item(FEAT_HOUSES, item_petrol_station_01,         50, HOUSE_SIZE_1X2) {}  // 51,          FEAT_HOUSES
item(FEAT_HOUSES, item_petrol_station_02,           109,HOUSE_SIZE_1X1) {}
//item(FEAT_HOUSES, item_petrol_station_03,         110,HOUSE_SIZE_2X1) {}  // 111,         FEAT_HOUSES
item(FEAT_HOUSES, item_shops_small_01,              7,  HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_yoshinoya_restaurant,        96, HOUSE_SIZE_1X1) {}
item(FEAT_HOUSES, item_yoshinoya_sushi_restaurant,  64, HOUSE_SIZE_1X1) {}         

// RURAL
//item(FEAT_HOUSES, item_farm_01,                   52, HOUSE_SIZE_2X2) {}  // 53, 54, 55,  FEAT_HOUSES FEAT_HOUSES FEAT_HOUSES

// Free IDs
/*
91,
32,
85,
56,
57,
*/

# 1 "JPplusHousesResidential.pnml" 4

// Primary Functions (i.e. do not use any other Function)
# 1 "src/functions/PopulationChecks.pnml" 1
/* Begin Population Checks */

/* 	
	- Purpose is for use in Construction Checks of Shops & Offices (Class 2) to only allow their construction when there is a certain 'level' of Residential
	- Larger weightings are given to 'denser' Residential
	- The Residential factor must be greater than the Class of the building using this function
*/

/* CLASS 2 */
/*
switch (FEAT_HOUSES, SELF, Class2PopCheck, 
	(
		(1 + other_class_count_town(02) * 60) 
	)
	
	< 

	(
		(other_class_count_town(00) * 2)	+	// Houses
		(other_class_count_town(01) * 3)	+	// Townhouses
		(other_class_count_town(04) * 10)		// Apartments
	)

) {return;}

/* CLASS 5 */
/*
switch (FEAT_HOUSES, SELF, Class5PopCheck, 
	(
		((1 + same_class_count_town) * 50)	+ 
		(other_class_count_town(02) * 60)		// Shops and Offices
	)
	
	< 

	(
		(other_class_count_town(00) * 2)	+	// Houses
		(other_class_count_town(01) * 3)	+	// Townhouses
		(other_class_count_town(03) * 5)	+	// Small Apartments
		(other_class_count_town(04) * 10)		// Apartments
	)

) {return;}
*/

/* End Population Checks */
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/AdjacentToCommercial.pnml" 1
/* Begin Adjacent to Commercial */

/* Check for Commercial (Shops, Offices and Skyscrapers) within 1 tile excluding diagonals */
/* Begin Adjacent to Commercial */

/* Check for Commercial (Shops, Offices and Skyscrapers) within 1 tile excluding diagonals */

switch (FEAT_HOUSES, SELF, AdjacentToCommercialNE, nearby_tile_house_class(-1, 0) == 266 || nearby_tile_house_class(-1, 0) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, AdjacentToCommercialNW, nearby_tile_house_class( 0,-1) == 266 || nearby_tile_house_class( 0,-1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, AdjacentToCommercialSE, nearby_tile_house_class( 0, 1) == 266 || nearby_tile_house_class( 0, 1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, AdjacentToCommercialSW, nearby_tile_house_class( 1, 0) == 266 || nearby_tile_house_class( 1, 0) == 261 ) {return;}

switch (FEAT_HOUSES, SELF, AdjacentToCommercial, AdjacentToCommercialNE() || AdjacentToCommercialNW() || AdjacentToCommercialSE() || AdjacentToCommercialSW() ) {return;}
/*
switch (FEAT_HOUSES, SELF, DiagonalToCommercialN, nearby_tile_house_class(-1,-1) == 258 || nearby_tile_house_class(-1,-1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, DiagonalToCommercialE, nearby_tile_house_class(-1, 1) == 258 || nearby_tile_house_class(-1, 1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, DiagonalToCommercialS, nearby_tile_house_class( 1, 1) == 258 || nearby_tile_house_class( 1, 1) == 261 ) {return;}
switch (FEAT_HOUSES, SELF, DiagonalToCommercialW, nearby_tile_house_class( 1,-1) == 258 || nearby_tile_house_class( 1,-1) == 261 ) {return;}
*/
//switch (FEAT_HOUSES, SELF, DiagonalToCommercial, DiagonalToCommercialN() || DiagonalToCommercialE() || DiagonalToCommercialS() || DiagonalToCommercialW() ) {return;}

//switch (FEAT_HOUSES, SELF, CommercialWithinOneTile, AdjacentToCommercial() || DiagonalToCommercial() ) {return;}


/* End Adjacent to Commercial */
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/FuncServicePASS.pnml" 1
/* Passenger Service Check */
switch(FEAT_HOUSES, SELF, FuncServicePASS, 	(cargo_accepted_nearby_last_month(PASS) == 1 || cargo_accepted_nearby_this_month(PASS) == 1)) {return;}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/CargoServiceChecks.pnml" 1
/* Begin Cargo Service Checks */

/* Functions checking for service of cargoes */

// Petroleum Fuels Service - for Petrol Stations
switch(FEAT_HOUSES, SELF, FuncServicePETR, (cargo_accepted_nearby_last_month(PETR) == 1 || cargo_accepted_nearby_this_month(PETR) == 1)) {return;}
// Alcohol Service - for Stadiums
switch(FEAT_HOUSES, SELF, FuncServiceBEER, (cargo_accepted_nearby_last_month(BEER) == 1 || cargo_accepted_nearby_this_month(BEER) == 1)) {return;}
// Food Service - for Stadiums
switch(FEAT_HOUSES, SELF, FuncServiceFOOD, (cargo_accepted_nearby_last_month(FOOD) == 1 || cargo_accepted_nearby_this_month(FOOD) == 1)) {return;}
// Edible Oils Service - for Restaurants
switch(FEAT_HOUSES, SELF, FuncServiceEOIL, (cargo_accepted_nearby_last_month(EOIL) == 1 || cargo_accepted_nearby_this_month(EOIL) == 1)) {return;}
// Fish Service - for Restaurants
switch(FEAT_HOUSES, SELF, FuncServiceFISH, (cargo_accepted_nearby_last_month(FISH) == 1 || cargo_accepted_nearby_this_month(FISH) == 1)) {return;}
// Chemicals Service - for Hospitals
switch(FEAT_HOUSES, SELF, FuncServiceRFPR, (cargo_accepted_nearby_last_month(RFPR) == 1 || cargo_accepted_nearby_this_month(RFPR) == 1)) {return;}
// Fruit - for Shops
switch(FEAT_HOUSES, SELF, FuncServiceFRUT, (cargo_accepted_nearby_last_month(FRUT) == 1 || cargo_accepted_nearby_this_month(FRUT) == 1)) {return;}
// Cassava - for shops
switch(FEAT_HOUSES, SELF, FuncServiceCASS, (cargo_accepted_nearby_last_month(CASS) == 1 || cargo_accepted_nearby_this_month(CASS) == 1)) {return;}
// Goods - for various
switch(FEAT_HOUSES, SELF, FuncServiceGOOD, (cargo_accepted_nearby_last_month(GOOD) == 1 || cargo_accepted_nearby_this_month(GOOD) == 1)) {return;}

/* End Cargo Service Checks */
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/HasRoadAdjacent.pnml" 1
/* Check for road (and stations) in adjacent tiles functions */
switch (FEAT_HOUSES, SELF, HasRoadAdjacentNE, nearby_tile_class(-1, 0) == TILE_CLASS_ROAD || nearby_tile_class(-1, 0) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentNW, nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || nearby_tile_class( 0,-1) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSE, nearby_tile_class( 0, 1) == TILE_CLASS_ROAD || nearby_tile_class( 0, 1) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSW, nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION) {return;}

//switch (FEAT_HOUSES, SELF, HasRoadAdjacentE, nearby_tile_class(-1, 1) == TILE_CLASS_ROAD || nearby_tile_class(-1, 1) == TILE_CLASS_STATION) {return;}
//switch (FEAT_HOUSES, SELF, HasRoadAdjacentS, nearby_tile_class( 1, 1) == TILE_CLASS_ROAD || nearby_tile_class( 1, 1) == TILE_CLASS_STATION) {return;}
//switch (FEAT_HOUSES, SELF, HasRoadAdjacentW, nearby_tile_class( 1,-1) == TILE_CLASS_ROAD || nearby_tile_class( 1,-1) == TILE_CLASS_STATION) {return;}

/*
switch (FEAT_HOUSES, SELF, HasRoadAdjacentNWSW, nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || nearby_tile_class( 0,-1) == TILE_CLASS_STATION || 
	nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION) {return;}
*/
/*
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSESW, nearby_tile_class( 0, 1) == TILE_CLASS_ROAD || nearby_tile_class( 0, 1) == TILE_CLASS_STATION || 
	nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION) {return;}
*/
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/IsCity.pnml" 1
/* Function to check if City */
switch (FEAT_HOUSES, PARENT, IsCity, is_city == 1) {return;}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/IsUniqueHouse.pnml" 1
/* House is Unique */
switch (FEAT_HOUSES, SELF, IsUniqueHouse, same_house_count_town == 0) {return;}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/OnGenerationOnly.pnml" 1
/* Can only appear when town is being generated */
switch (FEAT_HOUSES, SELF, OnGenerationOnly, generating_town == 1) {return;}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/PopulationThresholdsResidential.pnml" 1
/* Population Thresholds*/
switch (FEAT_HOUSES, PARENT, PopOver5L6LResidentialThreshold,  population >= param_residential_threshold_5L6L)  {return;}
switch (FEAT_HOUSES, PARENT, PopOver7L8LResidentialThreshold,  population >= param_residential_threshold_7L8L)  {return;}
switch (FEAT_HOUSES, PARENT, PopOver9L10LResidentialThreshold, population >= param_residential_threshold_9L10L) {return;}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/TileGap.pnml" 1
/* Range Checks */
switch (FEAT_HOUSES, SELF, TileGap, radius, nearest_house_matching_criterion(radius, SEARCH_HOUSE_BY_TYPE) == 0 ) {return;}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/TownIndex.pnml" 1
/* Begin Population */

switch (FEAT_HOUSES, PARENT, TownIndex, town_index) {return;}

/* End Population*/
# 1 "JPplusHousesResidential.pnml" 4

// Secondary Functions (i.e. those that use Primary Functions, therefore must appear later)
# 1 "src/functions/SpriteDirections.pnml" 1
/* Begin Sprite Directions*/

/*

When using Sprite Directions, list out the outcomes desired with the following results the switch in the nml file for the House

0 
1  SE Only
2  SW Only
3  SE && SW		SOUTH
4  NW Only
5  NW && SE		
6  NW && SW		WEST
7  NW, SE, SW
8  NE Only
9  NE && SE		EAST
10 NE && SW
11 NE, SE, SW
12 NE && NW		NORTH
13 NE, NW, SE
14 NE, NW, SW
15 All			ALL

*/

// Road to the SE
switch (FEAT_HOUSES, SELF, switch_SE_facing, HasRoadAdjacentSE() )
	{1: return 1; return 0;}

// Road to the SW
switch (FEAT_HOUSES, SELF, switch_SW_facing, HasRoadAdjacentSW() )
	{1: return 2; return 0;}

// Road to the NW
switch (FEAT_HOUSES, SELF, switch_NW_facing, HasRoadAdjacentNW() )
	{1: return 4; return 0;}

// Road to the NE
switch (FEAT_HOUSES, SELF, switch_NE_facing, HasRoadAdjacentNE() )
	{1: return 8; return 0;}

switch (FEAT_HOUSES, SELF, SpriteDirections, 
	switch_SE_facing() + 	// 0 or 1
	switch_SW_facing() +	// 0 or 2
	switch_NW_facing() +	// 0 or 4
	switch_NE_facing()		// 0 or 8
){return;}


/* End Sprite Directions */
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/functions/HouseGap.pnml" 1
/* Begin HouseOfficeGap */

switch(FEAT_HOUSES, SELF, HouseOfficeGap,
	
	// MAIN CRITERIA - Houses and Townhouses cannot build within two tiles of Commercial Buildings (Classes 2 & 5)
	( !AdjacentToCommercial() && !FuncServicePASS() )

	|| // OR

	// EXCEPTION - Adjacent to Commercial AND there is NO passenger service - to prevent gaps on catchment area border
	( AdjacentToCommercial() && !FuncServicePASS() )

){return;}

/* End HouseOfficeGap */
# 1 "JPplusHousesResidential.pnml" 4

// GROUND
# 1 "src/houses/ground/ground.pnml" 1
// Begin ground

// Grass
spriteset (spr_ground_grass, 							"src/houses/ground/grass.png") 					{template_ground(1,1)}
// Snow
spriteset (spr_ground_snow, 						    "src/houses/ground/snow.png") 					{template_ground(1,1)}
// Concrete
spriteset (spr_ground_concrete, 						"src/houses/ground/concrete.png") 				{template_ground(1,1)}
// Temple
spriteset (spr_ground_temple, 							"src/houses/ground/temple.png") 				{template_ground(1,1)}
// Shiro
spriteset (spr_ground_shiro, 							"src/houses/ground/shiro.png") 					{template_ground(1,1)}

// End ground
# 1 "JPplusHousesResidential.pnml" 4

// BUILDINGS

// Houses
# 1 "src/houses/houses/dense_wooden/dense_wooden.pnml" 1
// Begin dense_wooden

// Buildings
spriteset (spr_dense_wooden_a, 						"src/houses/houses/dense_wooden/building_a.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_a_snow, 				"src/houses/houses/dense_wooden/building_a.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_b, 						"src/houses/houses/dense_wooden/building_b.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_b_snow, 				"src/houses/houses/dense_wooden/building_b.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_c, 						"src/houses/houses/dense_wooden/building_c.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_c_snow, 				"src/houses/houses/dense_wooden/building_c.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_d, 						"src/houses/houses/dense_wooden/building_d.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_d_snow, 				"src/houses/houses/dense_wooden/building_d.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_e, 						"src/houses/houses/dense_wooden/building_e.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_e_snow, 				"src/houses/houses/dense_wooden/building_e.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_f, 						"src/houses/houses/dense_wooden/building_f.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_f_snow, 				"src/houses/houses/dense_wooden/building_f.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_g, 						"src/houses/houses/dense_wooden/building_g.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_g_snow, 				"src/houses/houses/dense_wooden/building_g.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_h, 						"src/houses/houses/dense_wooden/building_h.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_h_snow, 				"src/houses/houses/dense_wooden/building_h.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_i, 						"src/houses/houses/dense_wooden/building_i.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_i_snow, 				"src/houses/houses/dense_wooden/building_i.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_j, 						"src/houses/houses/dense_wooden/building_j.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_j_snow, 				"src/houses/houses/dense_wooden/building_j.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_k, 						"src/houses/houses/dense_wooden/building_k.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_k_snow, 				"src/houses/houses/dense_wooden/building_k.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_l, 						"src/houses/houses/dense_wooden/building_l.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_l_snow, 				"src/houses/houses/dense_wooden/building_l.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_m, 						"src/houses/houses/dense_wooden/building_m.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_m_snow, 				"src/houses/houses/dense_wooden/building_m.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_n, 						"src/houses/houses/dense_wooden/building_n.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_n_snow, 				"src/houses/houses/dense_wooden/building_n.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_o, 						"src/houses/houses/dense_wooden/building_o.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_o_snow, 				"src/houses/houses/dense_wooden/building_o.png") 					{template_house_80(1,82)}

spriteset (spr_dense_wooden_p, 						"src/houses/houses/dense_wooden/building_p.png") 					{template_house_80(1,1)}
spriteset (spr_dense_wooden_p_snow, 				"src/houses/houses/dense_wooden/building_p.png") 					{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_dense_wooden_a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_dense_wooden_a (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_dense_wooden_a_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_dense_wooden_b (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_dense_wooden_b_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_dense_wooden_c (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_c_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_dense_wooden_c_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_d {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_d(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_d_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_d_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_e {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_e(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_e_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_e_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_f {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_f(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_f_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_f_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_g {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_g(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_g_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_g_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_h {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_h(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_h_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_h_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_i {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_dense_wooden_i (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_i_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_dense_wooden_i_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_j {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_j(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_j_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_j_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_k {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_k(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_k_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_k_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_l {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_l(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_l_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_l_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_m {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_dense_wooden_m (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_m_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_dense_wooden_m_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_n {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_dense_wooden_n (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_n_snow {
	ground {
		sprite: spr_ground_snow(construction_state);
	}
	building {
		sprite: spr_dense_wooden_n_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_o {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_dense_wooden_o (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_o_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_dense_wooden_o_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_p {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_dense_wooden_p (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_dense_wooden_p_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_dense_wooden_p_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_dense_wooden_a,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_a_snow;
	sprlay_dense_wooden_a;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_b,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_b_snow;
	sprlay_dense_wooden_b;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_c,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_c_snow;
	sprlay_dense_wooden_c;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_d,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_d_snow;
	sprlay_dense_wooden_d;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_e,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_e_snow;
	sprlay_dense_wooden_e;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_f,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_f_snow;
	sprlay_dense_wooden_f;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_g,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_g_snow;
	sprlay_dense_wooden_g;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_h,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_h_snow;
	sprlay_dense_wooden_h;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_i,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_i_snow;
	sprlay_dense_wooden_i;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_j,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_j_snow;
	sprlay_dense_wooden_j;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_k,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_k_snow;
	sprlay_dense_wooden_k;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_l,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_l_snow;
	sprlay_dense_wooden_l;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_m,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_m_snow;
	sprlay_dense_wooden_m;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_n,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_n_snow;
	sprlay_dense_wooden_n;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_o,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_o_snow;
	sprlay_dense_wooden_o;
}

switch(FEAT_HOUSES, SELF, switch_dense_wooden_p,terrain_type) {
	TILETYPE_SNOW: sprlay_dense_wooden_p_snow;
	sprlay_dense_wooden_p;
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/large_wooden_farmhouse_01/large_wooden_farmhouse_01.pnml" 1
// Begin large_wooden_farmhouse_01

// Buildings
spriteset (spr_large_wooden_farmhouse_01a, 				"src/houses/houses/large_wooden_farmhouse_01/building_a.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_farmhouse_01a_snow, 		"src/houses/houses/large_wooden_farmhouse_01/building_a.png") 			{template_house_80(1,82)}

spriteset (spr_large_wooden_farmhouse_01b, 				"src/houses/houses/large_wooden_farmhouse_01/building_b.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_farmhouse_01b_snow, 		"src/houses/houses/large_wooden_farmhouse_01/building_b.png") 			{template_house_80(1,82)}

spriteset (spr_large_wooden_farmhouse_01c, 				"src/houses/houses/large_wooden_farmhouse_01/building_c.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_farmhouse_01c_snow, 		"src/houses/houses/large_wooden_farmhouse_01/building_c.png") 			{template_house_80(1,82)}

spriteset (spr_large_wooden_farmhouse_01d, 				"src/houses/houses/large_wooden_farmhouse_01/building_d.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_farmhouse_01d_snow, 		"src/houses/houses/large_wooden_farmhouse_01/building_d.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_large_wooden_farmhouse_01a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_farmhouse_01a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_farmhouse_01b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_farmhouse_01b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_farmhouse_01c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01c (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_farmhouse_01c_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01c_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_farmhouse_01d {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01d (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_farmhouse_01d_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_farmhouse_01d_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}


// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_large_wooden_farmhouse_01a,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_farmhouse_01a_snow;
	sprlay_large_wooden_farmhouse_01a;
}

switch(FEAT_HOUSES, SELF, switch_large_wooden_farmhouse_01b,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_farmhouse_01b_snow;
	sprlay_large_wooden_farmhouse_01b;
}

switch(FEAT_HOUSES, SELF, switch_large_wooden_farmhouse_01c,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_farmhouse_01c_snow;
	sprlay_large_wooden_farmhouse_01c;
}

switch(FEAT_HOUSES, SELF, switch_large_wooden_farmhouse_01d,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_farmhouse_01d_snow;
	sprlay_large_wooden_farmhouse_01d;
}

// Selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_large_wooden_farmhouse_01_sprites_any) {
	1: switch_large_wooden_farmhouse_01b;		// Any
	1: switch_large_wooden_farmhouse_01d;		// Any
}

random_switch (FEAT_HOUSES, SELF, switch_large_wooden_farmhouse_01_sprites_SESW) {
	1: switch_large_wooden_farmhouse_01a;		// SE
	1: switch_large_wooden_farmhouse_01c;		// SW
}

switch (FEAT_HOUSES, SELF, switch_large_wooden_farmhouse_01_snow, SpriteDirections() ) {
	1: switch_large_wooden_farmhouse_01a; 
	2: switch_large_wooden_farmhouse_01c;
	3: switch_large_wooden_farmhouse_01_sprites_SESW;
	default: switch_large_wooden_farmhouse_01_sprites_any;
}

// End large_wooden_farmhouse_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/large_wooden_house_01/large_wooden_house_01.pnml" 1
// Begin large_wooden_house_01

// Buildings
spriteset (spr_large_wooden_house_01a, 			"src/houses/houses/large_wooden_house_01/building_01a.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_house_01a_snow, 	"src/houses/houses/large_wooden_house_01/building_01a.png") 			{template_house_80(1,82)}

spriteset (spr_large_wooden_house_01b, 			"src/houses/houses/large_wooden_house_01/building_01b.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_house_01b_snow, 	"src/houses/houses/large_wooden_house_01/building_01b.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_large_wooden_house_01a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_01a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_01a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_01a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_01b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_01b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_01b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_01b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_large_wooden_house_01a,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_house_01a_snow;
	sprlay_large_wooden_house_01a;
}

switch(FEAT_HOUSES, SELF, switch_large_wooden_house_01b,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_house_01b_snow;
	sprlay_large_wooden_house_01b;
}


// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_large_wooden_house_01_snow) {
	1: switch_large_wooden_house_01a;		
	1: switch_large_wooden_house_01b;		
}

// End large_wooden_house_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/large_wooden_house_02/large_wooden_house_02.pnml" 1
// Begin large_wooden_house_02

// Buildings
spriteset (spr_large_wooden_house_02a, 			"src/houses/houses/large_wooden_house_02/building_a.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_house_02a_snow, 	"src/houses/houses/large_wooden_house_02/building_a.png") 			{template_house_80(1,82)}

spriteset (spr_large_wooden_house_02b, 			"src/houses/houses/large_wooden_house_02/building_b.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_house_02b_snow, 	"src/houses/houses/large_wooden_house_02/building_b.png") 			{template_house_80(1,82)}

spriteset (spr_large_wooden_house_02c, 			"src/houses/houses/large_wooden_house_02/building_c.png") 			{template_house_80(1,1)}
spriteset (spr_large_wooden_house_02c_snow, 	"src/houses/houses/large_wooden_house_02/building_c.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_large_wooden_house_02a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_02a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_02a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_02a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_02b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_02b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_02b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_02b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_02c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_02c (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_large_wooden_house_02c_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_large_wooden_house_02c_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_large_wooden_house_02a,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_house_02a_snow;
	sprlay_large_wooden_house_02a;
}

switch(FEAT_HOUSES, SELF, switch_large_wooden_house_02b,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_house_02b_snow;
	sprlay_large_wooden_house_02b;
}

switch(FEAT_HOUSES, SELF, switch_large_wooden_house_02c,terrain_type) {
	TILETYPE_SNOW: sprlay_large_wooden_house_02c_snow;
	sprlay_large_wooden_house_02c;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_large_wooden_house_02_sprites_SESW) {
	1: switch_large_wooden_house_02a;						// SE
	1: switch_large_wooden_house_02c;						// SW
}

switch (FEAT_HOUSES, SELF, switch_large_wooden_house_02_snow, SpriteDirections() ) {
	1: switch_large_wooden_house_02a; 						// SE Only
	2: switch_large_wooden_house_02c;						// SW Only
	3: switch_large_wooden_house_02_sprites_SESW;			// SE or SW
	default: switch_large_wooden_house_02b;					// Otherwise
}

// End large_wooden_house_02
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/nishikawa/nishikawa.pnml" 1
// Begin nishikawa_house

// A
spriteset (spr_nishikawa_house_a, 					"src/houses/houses/nishikawa/building_a.png") 						{template_house_80(1,1)}
spriteset (spr_nishikawa_house_a_snow, 				"src/houses/houses/nishikawa/building_a.png") 						{template_house_80(1,82)}

// B
spriteset (spr_nishikawa_house_b, 					"src/houses/houses/nishikawa/building_b.png") 						{template_house_80(1,1)}
spriteset (spr_nishikawa_house_b_snow, 				"src/houses/houses/nishikawa/building_b.png") 						{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_nishikawa_house_a_norm {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_nishikawa_house_a (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_nishikawa_house_a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_nishikawa_house_a_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_nishikawa_house_b_norm {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_nishikawa_house_b (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_nishikawa_house_b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_nishikawa_house_b_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_nishikawa_house_a_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nishikawa_house_a_snow;
	sprlay_nishikawa_house_a_norm;
}

switch(FEAT_HOUSES, SELF, switch_nishikawa_house_b_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nishikawa_house_b_snow;
	sprlay_nishikawa_house_b_norm;
}

// Selection of Sprites based in relation to where roads are
random_switch (FEAT_HOUSES, SELF, switch_nishikawa_house_random) {
	1: switch_nishikawa_house_a_snow;
	1: switch_nishikawa_house_b_snow;
}

switch (FEAT_HOUSES, SELF, switch_nishikawa_house_snow, SpriteDirections() ) {
	1: switch_nishikawa_house_a_snow;
	2: switch_nishikawa_house_b_snow;
	4: switch_nishikawa_house_a_snow;
	5: switch_nishikawa_house_a_snow;
	8: switch_nishikawa_house_b_snow;
	10: switch_nishikawa_house_b_snow;
	switch_nishikawa_house_random;
}

// End nishikawa_house
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/naganuma/naganuma.pnml" 1
// Begin naganuma_house

// A
spriteset (spr_naganuma_house_a, 					"src/houses/houses/naganuma/building_a.png") 						{template_house_80(1,1)}
spriteset (spr_naganuma_house_a_snow, 				"src/houses/houses/naganuma/building_a.png") 						{template_house_80(1,82)}

// B
spriteset (spr_naganuma_house_b, 					"src/houses/houses/naganuma/building_b.png") 						{template_house_80(1,1)}
spriteset (spr_naganuma_house_b_snow, 				"src/houses/houses/naganuma/building_b.png") 						{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_naganuma_house_a_norm {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_naganuma_house_a (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_naganuma_house_a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_naganuma_house_a_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_naganuma_house_b_norm {
	ground {
		sprite: spr_ground_grass(construction_state);
	}
	building {
		sprite: spr_naganuma_house_b (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_naganuma_house_b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_naganuma_house_b_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_naganuma_house_a_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_naganuma_house_a_snow;
	sprlay_naganuma_house_a_norm;
}

switch(FEAT_HOUSES, SELF, switch_naganuma_house_b_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_naganuma_house_b_snow;
	sprlay_naganuma_house_b_norm;
}

// Selection of Sprites based in relation to where roads are
random_switch (FEAT_HOUSES, SELF, switch_naganuma_house_random) {
	1: switch_naganuma_house_a_snow;
	1: switch_naganuma_house_b_snow;
}

switch (FEAT_HOUSES, SELF, switch_naganuma_house_snow, SpriteDirections() ) {
	1: switch_naganuma_house_a_snow;
	2: switch_naganuma_house_b_snow;
	4: switch_naganuma_house_a_snow;
	5: switch_naganuma_house_a_snow;
	8: switch_naganuma_house_b_snow;
	10: switch_naganuma_house_b_snow;
	switch_naganuma_house_random;
}

// End naganuma_house
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/old_villa_01/old_villa_01.pnml" 1
// Begin old_villa_01

// Buildings
spriteset (spr_old_villa_01_norm, 			"src/houses/houses/old_villa_01/building.png") 			{template_house_80(1,1)}
spriteset (spr_old_villa_01_snow, 			"src/houses/houses/old_villa_01/building.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_old_villa_01_norm {
	ground {
		sprite: spr_ground_grass (3);
	}
	building {
		sprite: spr_old_villa_01_norm (3);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_old_villa_01_snow {
	ground {
		sprite: spr_ground_snow (3);
	}
	building {
		sprite: spr_old_villa_01_snow (3);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_old_villa_01_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_old_villa_01_snow;
	sprlay_old_villa_01_norm;
}

// End old_villa_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/commercial/shotengai_01/shotengai_01_sprites.pnml" 1
// Begin shotengai_01

// Buildings
spriteset (spr_shotengai_01_a, 						"src/houses/commercial/shotengai_01/building_a.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_a_snow, 				"src/houses/commercial/shotengai_01/building_a.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_b, 						"src/houses/commercial/shotengai_01/building_b.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_b_snow, 				"src/houses/commercial/shotengai_01/building_b.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_c, 						"src/houses/commercial/shotengai_01/building_c.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_c_snow, 				"src/houses/commercial/shotengai_01/building_c.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_d, 						"src/houses/commercial/shotengai_01/building_d.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_d_snow, 				"src/houses/commercial/shotengai_01/building_d.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_e, 						"src/houses/commercial/shotengai_01/building_e.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_e_snow, 				"src/houses/commercial/shotengai_01/building_e.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_f, 						"src/houses/commercial/shotengai_01/building_f.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_f_snow, 				"src/houses/commercial/shotengai_01/building_f.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_g, 						"src/houses/commercial/shotengai_01/building_g.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_g_snow, 				"src/houses/commercial/shotengai_01/building_g.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_h, 						"src/houses/commercial/shotengai_01/building_h.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_h_snow, 				"src/houses/commercial/shotengai_01/building_h.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_i, 						"src/houses/commercial/shotengai_01/building_i.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_i_snow, 				"src/houses/commercial/shotengai_01/building_i.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_j, 						"src/houses/commercial/shotengai_01/building_j.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_j_snow, 				"src/houses/commercial/shotengai_01/building_j.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_k, 						"src/houses/commercial/shotengai_01/building_k.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_k_snow, 				"src/houses/commercial/shotengai_01/building_k.png") 					{template_house_80_wide(1,82)}

spriteset (spr_shotengai_01_l, 						"src/houses/commercial/shotengai_01/building_l.png") 					{template_house_80_wide(1,1)}
spriteset (spr_shotengai_01_l_snow, 				"src/houses/commercial/shotengai_01/building_l.png") 					{template_house_80_wide(1,82)}

// End shotengai_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/commercial/shotengai_01/shotengai_01_new.pnml" 1
// Begin shotengai_01

// Spritelayouts

// NEW (grass ground tiles)
spritelayout sprlay_shotengai_01_new_a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_a (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_a_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_a_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_b (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_b_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_b_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_c (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_c_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_c_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_d {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_d (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_d_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_d_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_e {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_e(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_e_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_e_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_f {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_f (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_f_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_f_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_g {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_g (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_g_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_g_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_h {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_h (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_h_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_h_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_i {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_i (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_i_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_i_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_j {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_j (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_j_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_j_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_k {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_k (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_k_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_k_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_l {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_l (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shotengai_01_new_l_snow {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_shotengai_01_l_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites

// NEW
switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_a,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_a_snow;
	sprlay_shotengai_01_new_a;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_b,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_b_snow;
	sprlay_shotengai_01_new_b;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_c,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_c_snow;
	sprlay_shotengai_01_new_c;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_d,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_d_snow;
	sprlay_shotengai_01_new_d;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_e,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_e_snow;
	sprlay_shotengai_01_new_e;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_f,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_f_snow;
	sprlay_shotengai_01_new_f;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_g,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_g_snow;
	sprlay_shotengai_01_new_g;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_h,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_h_snow;
	sprlay_shotengai_01_new_h;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_i,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_i_snow;
	sprlay_shotengai_01_new_i;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_j,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_j_snow;
	sprlay_shotengai_01_new_j;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_k,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_k_snow;
	sprlay_shotengai_01_new_k;
}

switch(FEAT_HOUSES, SELF, switch_shotengai_01_new_l,terrain_type) {
	TILETYPE_SNOW: sprlay_shotengai_01_new_l_snow;
	sprlay_shotengai_01_new_l;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_shotengai_01_new_sprites) {
	1: switch_shotengai_01_new_a;
	1: switch_shotengai_01_new_b;
	1: switch_shotengai_01_new_c;
	1: switch_shotengai_01_new_d;
	1: switch_shotengai_01_new_e;
	1: switch_shotengai_01_new_f;
	1: switch_shotengai_01_new_g;
	1: switch_shotengai_01_new_h;
	1: switch_shotengai_01_new_i;
	1: switch_shotengai_01_new_j;
	1: switch_shotengai_01_new_k;
	1: switch_shotengai_01_new_l;
}

// End shotengai_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/townhouses_01/townhouses_01.pnml" 1
// Begin townhouses

// Building Sprites
spriteset (spr_townhouses_01_a, 					"src/houses/houses/townhouses_01/building_a.png") 			{template_house_80(1,1)}
spriteset (spr_townhouses_01_a_snow, 				"src/houses/houses/townhouses_01/building_a.png") 			{template_house_80(1,82)}

spriteset (spr_townhouses_01_b, 					"src/houses/houses/townhouses_01/building_b.png") 			{template_house_80(1,1)}
spriteset (spr_townhouses_01_b_snow, 				"src/houses/houses/townhouses_01/building_b.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_townhouses_01_a_norm {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_townhouses_01_a (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_townhouses_01_a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_townhouses_01_a_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_townhouses_01_b_norm {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_townhouses_01_b (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_townhouses_01_b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_townhouses_01_b_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_townhouses_01_a_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_townhouses_01_a_snow;
	sprlay_townhouses_01_a_norm;
}

switch(FEAT_HOUSES, SELF, switch_townhouses_01_b_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_townhouses_01_b_snow;
	sprlay_townhouses_01_b_norm;
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/townhouses_02/townhouses_02.pnml" 1
// Begin townhouses

// Building Sprites
spriteset (spr_townhouses_02, 					"src/houses/houses/townhouses_02/building.png") 		{template_house_80(1,1)}
spriteset (spr_townhouses_02_snow, 				"src/houses/houses/townhouses_02/building.png") 		{template_house_80(1,82)}

// Ground Tiles
spriteset (spr_townhouses_02_ground, 			"src/houses/houses/townhouses_02/ground.png") 			{template_ground(1,1)}
spriteset (spr_townhouses_02_ground_snow, 		"src/houses/houses/townhouses_02/ground.png") 			{template_ground(1,33)}

// Spritelayouts
spritelayout sprlay_townhouses_02_norm {
	ground {
		sprite: spr_townhouses_02_ground (3);
	}
	building {
		sprite: spr_townhouses_02 (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_townhouses_02_snow {
	ground {
		sprite: spr_townhouses_02_ground_snow (3);
	}
	building {
		sprite: spr_townhouses_02_snow (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_townhouses_02_snow, terrain_type) {
	TILETYPE_SNOW: sprlay_townhouses_02_snow;
	sprlay_townhouses_02_norm;
}

// End townhouses
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/two_wooden_houses_01/two_wooden_houses_01.pnml" 1
// Begin two_wooden_houses_01

// Buildings
spriteset (spr_two_wooden_houses_01a, 			"src/houses/houses/two_wooden_houses_01/building_01a.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_01a_snow, 		"src/houses/houses/two_wooden_houses_01/building_01a.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_01b, 			"src/houses/houses/two_wooden_houses_01/building_01b.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_01b_snow, 		"src/houses/houses/two_wooden_houses_01/building_01b.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_01c, 			"src/houses/houses/two_wooden_houses_01/building_01c.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_01c_snow, 		"src/houses/houses/two_wooden_houses_01/building_01c.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_01d, 			"src/houses/houses/two_wooden_houses_01/building_01d.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_01d_snow, 		"src/houses/houses/two_wooden_houses_01/building_01d.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_two_wooden_houses_01a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_01a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_01b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_01b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_01c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01c (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_01c_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01c_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_01d {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01d (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_01d_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_01d_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}


// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_01a,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_01a_snow;
	sprlay_two_wooden_houses_01a;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_01b,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_01b_snow;
	sprlay_two_wooden_houses_01b;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_01c,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_01c_snow;
	sprlay_two_wooden_houses_01c;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_01d,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_01d_snow;
	sprlay_two_wooden_houses_01d;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_two_wooden_houses_01_sprites_SE) {
	1: switch_two_wooden_houses_01a;		// SE
	1: switch_two_wooden_houses_01b;		// SE
}

random_switch (FEAT_HOUSES, SELF, switch_two_wooden_houses_01_sprites_SW) {
	1: switch_two_wooden_houses_01c;		// SW
	1: switch_two_wooden_houses_01d;		// SW
}

random_switch (FEAT_HOUSES, SELF, switch_two_wooden_houses_01_sprites_SESW) {
	1: switch_two_wooden_houses_01a;		// SE
	1: switch_two_wooden_houses_01b;		// SE
	1: switch_two_wooden_houses_01c;		// SW
	1: switch_two_wooden_houses_01d;		// SW
}

switch (FEAT_HOUSES, SELF, switch_two_wooden_houses_01_snow, SpriteDirections() ) {
	1: switch_two_wooden_houses_01_sprites_SE; 				// SE Only
	2: switch_two_wooden_houses_01_sprites_SW;				// SW Only
	3: switch_two_wooden_houses_01_sprites_SESW;			// SE or SW
	default: switch_two_wooden_houses_01_sprites_SESW;		// Otherwise
}

// End two_wooden_houses_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/two_wooden_houses_02/two_wooden_houses_02.pnml" 1
// Begin two_wooden_houses_02

// Buildings
spriteset (spr_two_wooden_houses_02a, 			"src/houses/houses/two_wooden_houses_02/building_02a.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_02a_snow, 		"src/houses/houses/two_wooden_houses_02/building_02a.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_02b, 			"src/houses/houses/two_wooden_houses_02/building_02b.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_02b_snow, 		"src/houses/houses/two_wooden_houses_02/building_02b.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_02c, 			"src/houses/houses/two_wooden_houses_02/building_02c.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_02c_snow, 		"src/houses/houses/two_wooden_houses_02/building_02c.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_02d, 			"src/houses/houses/two_wooden_houses_02/building_02d.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_02d_snow, 		"src/houses/houses/two_wooden_houses_02/building_02d.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_02e, 			"src/houses/houses/two_wooden_houses_02/building_02e.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_02e_snow, 		"src/houses/houses/two_wooden_houses_02/building_02e.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_02f, 			"src/houses/houses/two_wooden_houses_02/building_02f.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_02f_snow, 		"src/houses/houses/two_wooden_houses_02/building_02f.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_two_wooden_houses_02a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02c (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02c_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02c_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02d {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02d (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02d_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02d_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02e {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02e (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02e_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02e_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02f {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02f (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_02f_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_02f_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_02a,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_02a_snow;
	sprlay_two_wooden_houses_02a;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_02b,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_02b_snow;
	sprlay_two_wooden_houses_02b;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_02c,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_02c_snow;
	sprlay_two_wooden_houses_02c;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_02d,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_02d_snow;
	sprlay_two_wooden_houses_02d;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_02e,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_02e_snow;
	sprlay_two_wooden_houses_02e;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_02f,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_02f_snow;
	sprlay_two_wooden_houses_02f;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_two_wooden_houses_02_snow) {
	1: switch_two_wooden_houses_02a;
	1: switch_two_wooden_houses_02b;
	1: switch_two_wooden_houses_02c;
	1: switch_two_wooden_houses_02d;
	1: switch_two_wooden_houses_02e;
	1: switch_two_wooden_houses_02f;
}

// End two_wooden_houses_02
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/two_wooden_houses_03/two_wooden_houses_03.pnml" 1
// Begin two_wooden_houses_03

// Buildings
spriteset (spr_two_wooden_houses_03a, 			"src/houses/houses/two_wooden_houses_03/building_03a.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_03a_snow, 		"src/houses/houses/two_wooden_houses_03/building_03a.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_03b, 			"src/houses/houses/two_wooden_houses_03/building_03b.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_03b_snow, 		"src/houses/houses/two_wooden_houses_03/building_03b.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_03c, 			"src/houses/houses/two_wooden_houses_03/building_03c.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_03c_snow, 		"src/houses/houses/two_wooden_houses_03/building_03c.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_03d, 			"src/houses/houses/two_wooden_houses_03/building_03d.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_03d_snow, 		"src/houses/houses/two_wooden_houses_03/building_03d.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_03e, 			"src/houses/houses/two_wooden_houses_03/building_03e.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_03e_snow, 		"src/houses/houses/two_wooden_houses_03/building_03e.png") 			{template_house_80(1,82)}

spriteset (spr_two_wooden_houses_03f, 			"src/houses/houses/two_wooden_houses_03/building_03f.png") 			{template_house_80(1,1)}
spriteset (spr_two_wooden_houses_03f_snow, 		"src/houses/houses/two_wooden_houses_03/building_03f.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_two_wooden_houses_03a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03c (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03c_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03c_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03d {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03d (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03d_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03d_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03e {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03e (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03e_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03e_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03f {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03f (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_two_wooden_houses_03f_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_two_wooden_houses_03f_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_03a,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_03a_snow;
	sprlay_two_wooden_houses_03a;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_03b,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_03b_snow;
	sprlay_two_wooden_houses_03b;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_03c,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_03c_snow;
	sprlay_two_wooden_houses_03c;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_03d,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_03d_snow;
	sprlay_two_wooden_houses_03d;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_03e,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_03e_snow;
	sprlay_two_wooden_houses_03e;
}

switch(FEAT_HOUSES, SELF, switch_two_wooden_houses_03f,terrain_type) {
	TILETYPE_SNOW: sprlay_two_wooden_houses_03f_snow;
	sprlay_two_wooden_houses_03f;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_two_wooden_houses_03_snow) {
	1: switch_two_wooden_houses_03a;
	1: switch_two_wooden_houses_03b;
	1: switch_two_wooden_houses_03c;
	1: switch_two_wooden_houses_03d;
	1: switch_two_wooden_houses_03e;
	1: switch_two_wooden_houses_03f;
}

// End two_wooden_houses_03
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/wooden_farmhouse_01/wooden_farmhouse_01.pnml" 1
// Begin wooden_farmhouse_01

// Buildings
spriteset (spr_wooden_farmhouse_01, 				"src/houses/houses/wooden_farmhouse_01/building.png") 		{template_house_80(1,1)}
spriteset (spr_wooden_farmhouse_01_snow, 			"src/houses/houses/wooden_farmhouse_01/building.png") 		{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_wooden_farmhouse_01 {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_farmhouse_01 (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_farmhouse_01_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_farmhouse_01_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_wooden_farmhouse_01_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_farmhouse_01_snow;
	sprlay_wooden_farmhouse_01;
}

// End wooden_farmhouse_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/wooden_house_01/wooden_house_01.pnml" 1
// Begin wooden_house_01

// Buildings
spriteset (spr_wooden_house_01a, 			"src/houses/houses/wooden_house_01/building_a.png") 			{template_house_80(1,1)}
spriteset (spr_wooden_house_01a_snow, 		"src/houses/houses/wooden_house_01/building_a.png") 			{template_house_80(1,82)}

spriteset (spr_wooden_house_01b, 			"src/houses/houses/wooden_house_01/building_b.png") 			{template_house_80(1,1)}
spriteset (spr_wooden_house_01b_snow, 		"src/houses/houses/wooden_house_01/building_b.png") 			{template_house_80(1,82)}

spriteset (spr_wooden_house_01c, 			"src/houses/houses/wooden_house_01/building_c.png") 			{template_house_80(1,1)}
spriteset (spr_wooden_house_01c_snow, 		"src/houses/houses/wooden_house_01/building_c.png") 			{template_house_80(1,82)}

spriteset (spr_wooden_house_01d, 			"src/houses/houses/wooden_house_01/building_d.png") 			{template_house_80(1,1)}
spriteset (spr_wooden_house_01d_snow, 		"src/houses/houses/wooden_house_01/building_d.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_wooden_house_01a {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_house_01a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_house_01a_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_house_01a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_house_01b {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_house_01b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_house_01b_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_house_01b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_house_01c {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_house_01c (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_house_01c_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_house_01c_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_house_01d {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_house_01d (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_house_01d_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_house_01d_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}


// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_wooden_house_01a,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_house_01a_snow;
	sprlay_wooden_house_01a;
}

switch(FEAT_HOUSES, SELF, switch_wooden_house_01b,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_house_01b_snow;
	sprlay_wooden_house_01b;
}

switch(FEAT_HOUSES, SELF, switch_wooden_house_01c,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_house_01c_snow;
	sprlay_wooden_house_01c;
}

switch(FEAT_HOUSES, SELF, switch_wooden_house_01d,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_house_01d_snow;
	sprlay_wooden_house_01d;
}

// Selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_wooden_house_01_sprites_any) {
	1: switch_wooden_house_01b;		// Any
	1: switch_wooden_house_01d;		// Any
}

random_switch (FEAT_HOUSES, SELF, switch_wooden_house_01_sprites_SESW) {
	1: switch_wooden_house_01a;		// SE
	1: switch_wooden_house_01c;		// SW
}

switch (FEAT_HOUSES, SELF, switch_wooden_house_01_snow, SpriteDirections() ) {
	1: switch_wooden_house_01a; 
	2: switch_wooden_house_01c;
	3: switch_wooden_house_01_sprites_SESW;
	default: switch_wooden_house_01_sprites_any;
}

// End wooden_house_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/wooden_townhouses_01/wooden_townhouses_01.pnml" 1
// Begin wooden_townhouses_01

// Buildings
spriteset (spr_wooden_townhouses_01, 			"src/houses/houses/wooden_townhouses_01/building.png") 			{template_house_80_wide(1,1)}
spriteset (spr_wooden_townhouses_01_snow, 		"src/houses/houses/wooden_townhouses_01/building.png") 			{template_house_80_wide(1,82)}

// Spritelayouts
spritelayout sprlay_wooden_townhouses_01 {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_01 (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_townhouses_01_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_01_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_wooden_townhouses_01_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_townhouses_01_snow;
	sprlay_wooden_townhouses_01;
}

// End wooden_townhouses_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/wooden_townhouses_02/wooden_townhouses_02.pnml" 1
// Begin wooden_townhouses_02

// Ground Sprites

// Leveraged from dense wooden

// Buildings
spriteset (spr_wooden_townhouses_02, 			"src/houses/houses/wooden_townhouses_02/building.png") 			{template_house_80(1,1)}
spriteset (spr_wooden_townhouses_02_snow, 		"src/houses/houses/wooden_townhouses_02/building.png")  			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_wooden_townhouses_02 {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_02 (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_townhouses_02_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_02_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_wooden_townhouses_02_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_townhouses_02_snow;
	sprlay_wooden_townhouses_02;
}

// End wooden_townhouses_02
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/wooden_townhouses_03/wooden_townhouses_03.pnml" 1
// Begin wooden_townhouses_03

// Ground Sprites

// Leveraged from dense wooden

// Buildings
spriteset (spr_wooden_townhouses_03, 			"src/houses/houses/wooden_townhouses_03/building.png")  		{template_house_80(1,1)}
spriteset (spr_wooden_townhouses_03_snow, 		"src/houses/houses/wooden_townhouses_03/building.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_wooden_townhouses_03 {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_03 (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_townhouses_03_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_03_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_wooden_townhouses_03_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_townhouses_03_snow;
	sprlay_wooden_townhouses_03;
}

// End wooden_townhouses_03
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/wooden_townhouses_04/wooden_townhouses_04.pnml" 1
// Begin wooden_townhouses_04

// Ground Sprites

// Leveraged from dense wooden

// Buildings
spriteset (spr_wooden_townhouses_04, 			"src/houses/houses/wooden_townhouses_04/building.png")  			{template_house_80(1,1)}
spriteset (spr_wooden_townhouses_04_snow, 		"src/houses/houses/wooden_townhouses_04/building.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_wooden_townhouses_04 {
	ground {
		sprite: spr_ground_grass (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_04 (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_wooden_townhouses_04_snow {
	ground {
		sprite: spr_ground_snow (construction_state);
	}
	building {
		sprite: spr_wooden_townhouses_04_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_wooden_townhouses_04_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_wooden_townhouses_04_snow;
	sprlay_wooden_townhouses_04;
}

// End wooden_townhouses_04
# 1 "JPplusHousesResidential.pnml" 4

// Apartments
# 1 "src/houses/apartments/fukuda/fukuda.pnml" 1
// Spritesets

spriteset (spr_fukuda_6L, 						"src/houses/apartments/fukuda/building.png") 					{template_house_100(1,1)}
spriteset (spr_fukuda_6L_snow, 					"src/houses/apartments/fukuda/building.png") 					{template_house_100(400,1)}

spriteset (spr_fukuda_7L, 						"src/houses/apartments/fukuda/building.png") 					{template_house_100(1,102)}
spriteset (spr_fukuda_7L_snow, 					"src/houses/apartments/fukuda/building.png") 					{template_house_100(400,102)}

spriteset (spr_fukuda_8L, 						"src/houses/apartments/fukuda/building.png") 					{template_house_100(1,203)}
spriteset (spr_fukuda_8L_snow, 					"src/houses/apartments/fukuda/building.png") 					{template_house_100(400,203)}

spriteset (spr_fukuda_9L, 						"src/houses/apartments/fukuda/building.png") 					{template_house_100(1,304)}
spriteset (spr_fukuda_9L_snow, 					"src/houses/apartments/fukuda/building.png") 					{template_house_100(400,304)}

spriteset (spr_fukuda_ground, 					"src/houses/apartments/fukuda/ground.png") 						{template_ground(1,1)}
spriteset (spr_fukuda_ground_snow, 				"src/houses/apartments/fukuda/ground.png") 						{template_ground(1,33)}


// Spritelayouts

// Fukuda 6 Storey

// Normal Sprites
spritelayout sprlay_fukuda_6L_norm {
	ground {
		sprite: spr_fukuda_ground(construction_state);
	}
	building {
		sprite: spr_fukuda_6L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_fukuda_6L_snow {
	ground {
		sprite: spr_fukuda_ground_snow(construction_state);
	}
	building {
		sprite: spr_fukuda_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Fukuda 7 Storey

// Normal Sprites
spritelayout sprlay_fukuda_7L_norm {
	ground {
		sprite: spr_fukuda_ground(construction_state);
	}
	building {
		sprite: spr_fukuda_7L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_fukuda_7L_snow {
	ground {
		sprite: spr_fukuda_ground_snow(construction_state);
	}
	building {
		sprite: spr_fukuda_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Fukuda 8 Storey

// Normal Sprites
spritelayout sprlay_fukuda_8L_norm {
	ground {
		sprite: spr_fukuda_ground(construction_state);
	}
	building {
		sprite: spr_fukuda_8L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_fukuda_8L_snow {
	ground {
		sprite: spr_fukuda_ground_snow(construction_state);
	}
	building {
		sprite: spr_fukuda_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Fukuda 9 Storey

// Normal Sprites
spritelayout sprlay_fukuda_9L_norm {
	ground {
		sprite: spr_fukuda_ground(construction_state);
	}
	building {
		sprite: spr_fukuda_9L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_fukuda_9L_snow {
	ground {
		sprite: spr_fukuda_ground_snow(construction_state);
	}
	building {
		sprite: spr_fukuda_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_fukuda_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_fukuda_6L_snow;
	sprlay_fukuda_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_fukuda_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_fukuda_7L_snow;
	sprlay_fukuda_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_fukuda_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_fukuda_8L_snow;
	sprlay_fukuda_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_fukuda_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_fukuda_9L_snow;
	sprlay_fukuda_9L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_fukuda_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/harada/harada.pnml" 1
// Spritesets

spriteset (spr_harada_6L, 						"src/houses/apartments/harada/building.png") 					{template_house_128(1,1)}
spriteset (spr_harada_6L_snow, 					"src/houses/apartments/harada/building.png") 					{template_house_128(400,1)}

spriteset (spr_harada_7L, 						"src/houses/apartments/harada/building.png") 					{template_house_128(1,130)}
spriteset (spr_harada_7L_snow, 					"src/houses/apartments/harada/building.png") 					{template_house_128(400,130)}

spriteset (spr_harada_8L, 						"src/houses/apartments/harada/building.png") 					{template_house_128(1,259)}
spriteset (spr_harada_8L_snow, 					"src/houses/apartments/harada/building.png") 					{template_house_128(400,259)}

spriteset (spr_harada_9L, 						"src/houses/apartments/harada/building.png") 					{template_house_128(1,388)}
spriteset (spr_harada_9L_snow, 					"src/houses/apartments/harada/building.png") 					{template_house_128(400,388)}

spriteset (spr_harada_ground, 					"src/houses/apartments/harada/ground.png") 						{template_ground(1,1)}
spriteset (spr_harada_ground_snow, 				"src/houses/apartments/harada/ground.png") 						{template_ground(1,33)}


// Spritelayouts

// harada 6 Storey

// Normal Sprites
spritelayout sprlay_harada_6L_norm {
	ground {
		sprite: spr_harada_ground(construction_state);
	}
	building {
		sprite: spr_harada_6L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_harada_6L_snow {
	ground {
		sprite: spr_harada_ground_snow(construction_state);
	}
	building {
		sprite: spr_harada_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// harada 7 Storey

// Normal Sprites
spritelayout sprlay_harada_7L_norm {
	ground {
		sprite: spr_harada_ground(construction_state);
	}
	building {
		sprite: spr_harada_7L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_harada_7L_snow {
	ground {
		sprite: spr_harada_ground_snow(construction_state);
	}
	building {
		sprite: spr_harada_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// harada 8 Storey

// Normal Sprites
spritelayout sprlay_harada_8L_norm {
	ground {
		sprite: spr_harada_ground(construction_state);
	}
	building {
		sprite: spr_harada_8L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_harada_8L_snow {
	ground {
		sprite: spr_harada_ground_snow(construction_state);
	}
	building {
		sprite: spr_harada_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// harada 9 Storey

// Normal Sprites
spritelayout sprlay_harada_9L_norm {
	ground {
		sprite: spr_harada_ground(construction_state);
	}
	building {
		sprite: spr_harada_9L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_harada_9L_snow {
	ground {
		sprite: spr_harada_ground_snow(construction_state);
	}
	building {
		sprite: spr_harada_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_harada_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_harada_6L_snow;
	sprlay_harada_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_harada_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_harada_7L_snow;
	sprlay_harada_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_harada_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_harada_8L_snow;
	sprlay_harada_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_harada_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_harada_9L_snow;
	sprlay_harada_9L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_harada_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/hayashi/hayashi.pnml" 1
// Spritesets

spriteset (spr_hayashi_3L_norm, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(1,1)}
spriteset (spr_hayashi_3L_snow, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(400,1)}

spriteset (spr_hayashi_4L_norm, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(1,82)}
spriteset (spr_hayashi_4L_snow, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(400,82)}

spriteset (spr_hayashi_5L_norm, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(1,163)}
spriteset (spr_hayashi_5L_snow, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(400,163)}

spriteset (spr_hayashi_6L_norm, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(1,244)}
spriteset (spr_hayashi_6L_snow, 					"src/houses/apartments/hayashi/building.png") 				{template_house_80(400,244)}

spriteset (spr_hayashi_ground, 						"src/houses/apartments/hayashi/ground.png") 				{template_ground(1,1)}
spriteset (spr_hayashi_ground_snow, 				"src/houses/apartments/hayashi/ground.png") 				{template_ground(1,33)}

// Spritelayouts

// 3-story
// Norm Sprites
spritelayout sprlay_hayashi_3L_norm {
	ground {
		sprite: spr_hayashi_ground (construction_state);
	}
	building {
		sprite: spr_hayashi_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hayashi_3L_snow {
	ground {
		sprite: spr_hayashi_ground_snow (construction_state);
	}
	building {
		sprite: spr_hayashi_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_hayashi_4L_norm {
	ground {
		sprite: spr_hayashi_ground (construction_state);
	}
	building {
		sprite: spr_hayashi_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hayashi_4L_snow {
	ground {
		sprite: spr_hayashi_ground_snow (construction_state);
	}
	building {
		sprite: spr_hayashi_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_hayashi_5L_norm {
	ground {
		sprite: spr_hayashi_ground (construction_state);
	}
	building {
		sprite: spr_hayashi_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hayashi_5L_snow {
	ground {
		sprite: spr_hayashi_ground_snow (construction_state);
	}
	building {
		sprite: spr_hayashi_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_hayashi_6L_norm {
	ground {
		sprite: spr_hayashi_ground (construction_state);
	}
	building {
		sprite: spr_hayashi_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hayashi_6L_snow {
	ground {
		sprite: spr_hayashi_ground_snow (construction_state);
	}
	building {
		sprite: spr_hayashi_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_hayashi_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hayashi_3L_snow;
	sprlay_hayashi_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hayashi_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hayashi_4L_snow;
	sprlay_hayashi_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hayashi_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hayashi_5L_snow;
	sprlay_hayashi_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hayashi_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hayashi_6L_snow;
	sprlay_hayashi_6L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_hayashi_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/hirano/hirano.pnml" 1
// Spritesets

spriteset (spr_hirano_a_3L_norm, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(1,1)}
spriteset (spr_hirano_a_3L_snow, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(400,1)}

spriteset (spr_hirano_a_4L_norm, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(1,82)}
spriteset (spr_hirano_a_4L_snow, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(400,82)}

spriteset (spr_hirano_a_5L_norm, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(1,163)}
spriteset (spr_hirano_a_5L_snow, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(400,163)}

spriteset (spr_hirano_a_6L_norm, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(1,244)}
spriteset (spr_hirano_a_6L_snow, 				"src/houses/apartments/hirano/building_a.png") 				{template_house_80(400,244)}

spriteset (spr_hirano_b_3L_norm, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(1,1)}
spriteset (spr_hirano_b_3L_snow, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(400,1)}

spriteset (spr_hirano_b_4L_norm, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(1,82)}
spriteset (spr_hirano_b_4L_snow, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(400,82)}

spriteset (spr_hirano_b_5L_norm, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(1,163)}
spriteset (spr_hirano_b_5L_snow, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(400,163)}

spriteset (spr_hirano_b_6L_norm, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(1,244)}
spriteset (spr_hirano_b_6L_snow, 				"src/houses/apartments/hirano/building_b.png") 				{template_house_80(400,244)}

spriteset (spr_hirano_a_ground, 				"src/houses/apartments/hirano/ground_a.png") 				{template_ground(1,1)}
spriteset (spr_hirano_a_ground_snow, 			"src/houses/apartments/hirano/ground_a.png") 				{template_ground(1,33)}

spriteset (spr_hirano_b_ground, 				"src/houses/apartments/hirano/ground_b.png") 				{template_ground(1,1)}
spriteset (spr_hirano_b_ground_snow, 			"src/houses/apartments/hirano/ground_b.png") 				{template_ground(1,33)}


// Spritelayouts

// 3-story
// Norm Sprites
spritelayout sprlay_hirano_a_3L_norm {
	ground {
		sprite: spr_hirano_a_ground (3);
	}
	building {
		sprite: spr_hirano_a_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_a_3L_snow {
	ground {
		sprite: spr_hirano_a_ground_snow (3);
	}
	building {
		sprite: spr_hirano_a_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_hirano_a_4L_norm {
	ground {
		sprite: spr_hirano_a_ground (3);
	}
	building {
		sprite: spr_hirano_a_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_a_4L_snow {
	ground {
		sprite: spr_hirano_a_ground_snow (3);
	}
	building {
		sprite: spr_hirano_a_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_hirano_a_5L_norm {
	ground {
		sprite: spr_hirano_a_ground (3);
	}
	building {
		sprite: spr_hirano_a_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_a_5L_snow {
	ground {
		sprite: spr_hirano_a_ground_snow (3);
	}
	building {
		sprite: spr_hirano_a_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_hirano_a_6L_norm {
	ground {
		sprite: spr_hirano_a_ground (3);
	}
	building {
		sprite: spr_hirano_a_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_a_6L_snow {
	ground {
		sprite: spr_hirano_a_ground_snow (3);
	}
	building {
		sprite: spr_hirano_a_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 3-story
// Norm Sprites
spritelayout sprlay_hirano_b_3L_norm {
	ground {
		sprite: spr_hirano_b_ground (3);
	}
	building {
		sprite: spr_hirano_b_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_b_3L_snow {
	ground {
		sprite: spr_hirano_b_ground_snow (3);
	}
	building {
		sprite: spr_hirano_b_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_hirano_b_4L_norm {
	ground {
		sprite: spr_hirano_b_ground (3);
	}
	building {
		sprite: spr_hirano_b_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_b_4L_snow {
	ground {
		sprite: spr_hirano_b_ground_snow (3);
	}
	building {
		sprite: spr_hirano_b_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_hirano_b_5L_norm {
	ground {
		sprite: spr_hirano_b_ground (3);
	}
	building {
		sprite: spr_hirano_b_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_b_5L_snow {
	ground {
		sprite: spr_hirano_b_ground_snow (3);
	}
	building {
		sprite: spr_hirano_b_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_hirano_b_6L_norm {
	ground {
		sprite: spr_hirano_b_ground (3);
	}
	building {
		sprite: spr_hirano_b_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirano_b_6L_snow {
	ground {
		sprite: spr_hirano_b_ground_snow (3);
	}
	building {
		sprite: spr_hirano_b_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_hirano_a_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_a_3L_snow;
	sprlay_hirano_a_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirano_a_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_a_4L_snow;
	sprlay_hirano_a_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirano_a_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_a_5L_snow;
	sprlay_hirano_a_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirano_a_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_a_6L_snow;
	sprlay_hirano_a_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirano_b_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_b_3L_snow;
	sprlay_hirano_b_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirano_b_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_b_4L_snow;
	sprlay_hirano_b_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirano_b_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_b_5L_snow;
	sprlay_hirano_b_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirano_b_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirano_b_6L_snow;
	sprlay_hirano_b_6L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_hirano_3L_random) {
	1: switch_hirano_a_3L_snow;
	1: switch_hirano_b_3L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirano_3L_snow, SpriteDirections() ) {
	1: switch_hirano_a_3L_snow;
	2: switch_hirano_b_3L_snow;
	4: switch_hirano_a_3L_snow;
	5: switch_hirano_a_3L_snow;
	8: switch_hirano_b_3L_snow;
	10: switch_hirano_b_3L_snow;
	switch_hirano_3L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirano_4L_random) {
	1: switch_hirano_a_4L_snow;
	1: switch_hirano_b_4L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirano_4L_snow, SpriteDirections() ) {
	1: switch_hirano_a_4L_snow;
	2: switch_hirano_b_4L_snow;
	4: switch_hirano_a_4L_snow;
	5: switch_hirano_a_4L_snow;
	8: switch_hirano_b_4L_snow;
	10: switch_hirano_b_4L_snow;
	switch_hirano_4L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirano_5L_random) {
	1: switch_hirano_a_5L_snow;
	1: switch_hirano_b_5L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirano_5L_snow, SpriteDirections() ) {
	1: switch_hirano_a_5L_snow;
	2: switch_hirano_b_5L_snow;
	4: switch_hirano_a_5L_snow;
	5: switch_hirano_a_5L_snow;
	8: switch_hirano_b_5L_snow;
	10: switch_hirano_b_5L_snow;
	switch_hirano_5L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirano_6L_random) {
	1: switch_hirano_a_6L_snow;
	1: switch_hirano_b_6L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirano_6L_snow, SpriteDirections() ) {
	1: switch_hirano_a_6L_snow;
	2: switch_hirano_b_6L_snow;
	4: switch_hirano_a_6L_snow;
	5: switch_hirano_a_6L_snow;
	8: switch_hirano_b_6L_snow;
	10: switch_hirano_b_6L_snow;
	switch_hirano_6L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirano_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/hirata/hirata.pnml" 1
// Spritesets

spriteset (spr_hirata_a_3L_norm, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(1,1)}
spriteset (spr_hirata_a_3L_snow, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(400,1)}

spriteset (spr_hirata_a_4L_norm, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(1,82)}
spriteset (spr_hirata_a_4L_snow, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(400,82)}

spriteset (spr_hirata_a_5L_norm, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(1,163)}
spriteset (spr_hirata_a_5L_snow, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(400,163)}

spriteset (spr_hirata_a_6L_norm, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(1,244)}
spriteset (spr_hirata_a_6L_snow, 				"src/houses/apartments/hirata/building_a.png") 				{template_house_80(400,244)}

spriteset (spr_hirata_b_3L_norm, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(1,1)}
spriteset (spr_hirata_b_3L_snow, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(400,1)}

spriteset (spr_hirata_b_4L_norm, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(1,82)}
spriteset (spr_hirata_b_4L_snow, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(400,82)}

spriteset (spr_hirata_b_5L_norm, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(1,163)}
spriteset (spr_hirata_b_5L_snow, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(400,163)}

spriteset (spr_hirata_b_6L_norm, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(1,244)}
spriteset (spr_hirata_b_6L_snow, 				"src/houses/apartments/hirata/building_b.png") 				{template_house_80(400,244)}

spriteset (spr_hirata_a_ground, 				"src/houses/apartments/hirata/ground_a.png") 				{template_ground(1,1)}
spriteset (spr_hirata_a_ground_snow, 			"src/houses/apartments/hirata/ground_a.png") 				{template_ground(1,33)}

spriteset (spr_hirata_b_ground, 				"src/houses/apartments/hirata/ground_b.png") 				{template_ground(1,1)}
spriteset (spr_hirata_b_ground_snow, 			"src/houses/apartments/hirata/ground_b.png") 				{template_ground(1,33)}


// Spritelayouts

// 3-story
// Norm Sprites
spritelayout sprlay_hirata_a_3L_norm {
	ground {
		sprite: spr_hirata_a_ground (3);
	}
	building {
		sprite: spr_hirata_a_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_a_3L_snow {
	ground {
		sprite: spr_hirata_a_ground_snow (3);
	}
	building {
		sprite: spr_hirata_a_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_hirata_a_4L_norm {
	ground {
		sprite: spr_hirata_a_ground (3);
	}
	building {
		sprite: spr_hirata_a_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_a_4L_snow {
	ground {
		sprite: spr_hirata_a_ground_snow (3);
	}
	building {
		sprite: spr_hirata_a_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_hirata_a_5L_norm {
	ground {
		sprite: spr_hirata_a_ground (3);
	}
	building {
		sprite: spr_hirata_a_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_a_5L_snow {
	ground {
		sprite: spr_hirata_a_ground_snow (3);
	}
	building {
		sprite: spr_hirata_a_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_hirata_a_6L_norm {
	ground {
		sprite: spr_hirata_a_ground (3);
	}
	building {
		sprite: spr_hirata_a_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_a_6L_snow {
	ground {
		sprite: spr_hirata_a_ground_snow (3);
	}
	building {
		sprite: spr_hirata_a_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 3-story
// Norm Sprites
spritelayout sprlay_hirata_b_3L_norm {
	ground {
		sprite: spr_hirata_b_ground (3);
	}
	building {
		sprite: spr_hirata_b_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_b_3L_snow {
	ground {
		sprite: spr_hirata_b_ground_snow (3);
	}
	building {
		sprite: spr_hirata_b_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_hirata_b_4L_norm {
	ground {
		sprite: spr_hirata_b_ground (3);
	}
	building {
		sprite: spr_hirata_b_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_b_4L_snow {
	ground {
		sprite: spr_hirata_b_ground_snow (3);
	}
	building {
		sprite: spr_hirata_b_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_hirata_b_5L_norm {
	ground {
		sprite: spr_hirata_b_ground (3);
	}
	building {
		sprite: spr_hirata_b_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_b_5L_snow {
	ground {
		sprite: spr_hirata_b_ground_snow (3);
	}
	building {
		sprite: spr_hirata_b_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_hirata_b_6L_norm {
	ground {
		sprite: spr_hirata_b_ground (3);
	}
	building {
		sprite: spr_hirata_b_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hirata_b_6L_snow {
	ground {
		sprite: spr_hirata_b_ground_snow (3);
	}
	building {
		sprite: spr_hirata_b_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_hirata_a_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_a_3L_snow;
	sprlay_hirata_a_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirata_a_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_a_4L_snow;
	sprlay_hirata_a_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirata_a_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_a_5L_snow;
	sprlay_hirata_a_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirata_a_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_a_6L_snow;
	sprlay_hirata_a_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirata_b_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_b_3L_snow;
	sprlay_hirata_b_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirata_b_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_b_4L_snow;
	sprlay_hirata_b_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirata_b_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_b_5L_snow;
	sprlay_hirata_b_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_hirata_b_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_hirata_b_6L_snow;
	sprlay_hirata_b_6L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_hirata_3L_random) {
	1: switch_hirata_a_3L_snow;
	1: switch_hirata_b_3L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirata_3L_snow, SpriteDirections() ) {
	1: switch_hirata_a_3L_snow;
	2: switch_hirata_b_3L_snow;
	4: switch_hirata_a_3L_snow;
	5: switch_hirata_a_3L_snow;
	8: switch_hirata_b_3L_snow;
	10: switch_hirata_b_3L_snow;
	switch_hirata_3L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirata_4L_random) {
	1: switch_hirata_a_4L_snow;
	1: switch_hirata_b_4L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirata_4L_snow, SpriteDirections() ) {
	1: switch_hirata_a_4L_snow;
	2: switch_hirata_b_4L_snow;
	4: switch_hirata_a_4L_snow;
	5: switch_hirata_a_4L_snow;
	8: switch_hirata_b_4L_snow;
	10: switch_hirata_b_4L_snow;
	switch_hirata_4L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirata_5L_random) {
	1: switch_hirata_a_5L_snow;
	1: switch_hirata_b_5L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirata_5L_snow, SpriteDirections() ) {
	1: switch_hirata_a_5L_snow;
	2: switch_hirata_b_5L_snow;
	4: switch_hirata_a_5L_snow;
	5: switch_hirata_a_5L_snow;
	8: switch_hirata_b_5L_snow;
	10: switch_hirata_b_5L_snow;
	switch_hirata_5L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirata_6L_random) {
	1: switch_hirata_a_6L_snow;
	1: switch_hirata_b_6L_snow;
}

switch (FEAT_HOUSES, SELF, switch_hirata_6L_snow, SpriteDirections() ) {
	1: switch_hirata_a_6L_snow;
	2: switch_hirata_b_6L_snow;
	4: switch_hirata_a_6L_snow;
	5: switch_hirata_a_6L_snow;
	8: switch_hirata_b_6L_snow;
	10: switch_hirata_b_6L_snow;
	switch_hirata_6L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_hirata_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/murakami/murakami.pnml" 1
// Spritesets

spriteset (spr_murakami_a_3L_norm, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(1,1)}
spriteset (spr_murakami_a_3L_snow, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(400,1)}

spriteset (spr_murakami_a_4L_norm, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(1,102)}
spriteset (spr_murakami_a_4L_snow, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(400,102)}

spriteset (spr_murakami_a_5L_norm, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(1,203)}
spriteset (spr_murakami_a_5L_snow, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(400,203)}

spriteset (spr_murakami_a_6L_norm, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(1,304)}
spriteset (spr_murakami_a_6L_snow, 				"src/houses/apartments/murakami/building_a.png") 				{template_house_100_wide(400,304)}

spriteset (spr_murakami_b_3L_norm, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(1,1)}
spriteset (spr_murakami_b_3L_snow, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(400,1)}

spriteset (spr_murakami_b_4L_norm, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(1,102)}
spriteset (spr_murakami_b_4L_snow, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(400,102)}

spriteset (spr_murakami_b_5L_norm, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(1,203)}
spriteset (spr_murakami_b_5L_snow, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(400,203)}

spriteset (spr_murakami_b_6L_norm, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(1,304)}
spriteset (spr_murakami_b_6L_snow, 				"src/houses/apartments/murakami/building_b.png") 				{template_house_100_wide(400,304)}

spriteset (spr_murakami_a_ground, 				"src/houses/apartments/murakami/ground_a.png") 					{template_ground(1,1)}
spriteset (spr_murakami_a_ground_snow, 			"src/houses/apartments/murakami/ground_a.png") 					{template_ground(1,33)}

spriteset (spr_murakami_b_ground, 				"src/houses/apartments/murakami/ground_b.png") 					{template_ground(1,1)}
spriteset (spr_murakami_b_ground_snow, 			"src/houses/apartments/murakami/ground_b.png") 					{template_ground(1,33)}


// Spritelayouts

// 3-story
// Norm Sprites
spritelayout sprlay_murakami_a_3L_norm {
	ground {
		sprite: spr_murakami_a_ground (construction_state);
	}
	building {
		sprite: spr_murakami_a_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_a_3L_snow {
	ground {
		sprite: spr_murakami_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_a_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_murakami_a_4L_norm {
	ground {
		sprite: spr_murakami_a_ground (construction_state);
	}
	building {
		sprite: spr_murakami_a_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_a_4L_snow {
	ground {
		sprite: spr_murakami_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_a_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_murakami_a_5L_norm {
	ground {
		sprite: spr_murakami_a_ground (construction_state);
	}
	building {
		sprite: spr_murakami_a_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_a_5L_snow {
	ground {
		sprite: spr_murakami_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_a_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_murakami_a_6L_norm {
	ground {
		sprite: spr_murakami_a_ground (construction_state);
	}
	building {
		sprite: spr_murakami_a_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_a_6L_snow {
	ground {
		sprite: spr_murakami_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_a_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 3-story
// Norm Sprites
spritelayout sprlay_murakami_b_3L_norm {
	ground {
		sprite: spr_murakami_b_ground (construction_state);
	}
	building {
		sprite: spr_murakami_b_3L_norm (construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_b_3L_snow {
	ground {
		sprite: spr_murakami_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_b_3L_snow(construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_murakami_b_4L_norm {
	ground {
		sprite: spr_murakami_b_ground (construction_state);
	}
	building {
		sprite: spr_murakami_b_4L_norm (construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_b_4L_snow {
	ground {
		sprite: spr_murakami_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_b_4L_snow(construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_murakami_b_5L_norm {
	ground {
		sprite: spr_murakami_b_ground (construction_state);
	}
	building {
		sprite: spr_murakami_b_5L_norm (construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_b_5L_snow {
	ground {
		sprite: spr_murakami_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_b_5L_snow(construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_murakami_b_6L_norm {
	ground {
		sprite: spr_murakami_b_ground (construction_state);
	}
	building {
		sprite: spr_murakami_b_6L_norm (construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_murakami_b_6L_snow {
	ground {
		sprite: spr_murakami_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_murakami_b_6L_snow(construction_state);
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_murakami_a_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_a_3L_snow;
	sprlay_murakami_a_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_murakami_a_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_a_4L_snow;
	sprlay_murakami_a_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_murakami_a_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_a_5L_snow;
	sprlay_murakami_a_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_murakami_a_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_a_6L_snow;
	sprlay_murakami_a_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_murakami_b_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_b_3L_snow;
	sprlay_murakami_b_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_murakami_b_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_b_4L_snow;
	sprlay_murakami_b_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_murakami_b_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_b_5L_snow;
	sprlay_murakami_b_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_murakami_b_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_murakami_b_6L_snow;
	sprlay_murakami_b_6L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_murakami_3L_random) {
	1: switch_murakami_a_3L_snow;
	1: switch_murakami_b_3L_snow;
}

switch (FEAT_HOUSES, SELF, switch_murakami_3L_snow, SpriteDirections() ) {
	1: switch_murakami_a_3L_snow;
	2: switch_murakami_b_3L_snow;
	4: switch_murakami_a_3L_snow;
	5: switch_murakami_a_3L_snow;
	8: switch_murakami_b_3L_snow;
	10: switch_murakami_b_3L_snow;
	switch_murakami_3L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_murakami_4L_random) {
	1: switch_murakami_a_4L_snow;
	1: switch_murakami_b_4L_snow;
}

switch (FEAT_HOUSES, SELF, switch_murakami_4L_snow, SpriteDirections() ) {
	1: switch_murakami_a_4L_snow;
	2: switch_murakami_b_4L_snow;
	4: switch_murakami_a_4L_snow;
	5: switch_murakami_a_4L_snow;
	8: switch_murakami_b_4L_snow;
	10: switch_murakami_b_4L_snow;
	switch_murakami_4L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_murakami_5L_random) {
	1: switch_murakami_a_5L_snow;
	1: switch_murakami_b_5L_snow;
}

switch (FEAT_HOUSES, SELF, switch_murakami_5L_snow, SpriteDirections() ) {
	1: switch_murakami_a_5L_snow;
	2: switch_murakami_b_5L_snow;
	4: switch_murakami_a_5L_snow;
	5: switch_murakami_a_5L_snow;
	8: switch_murakami_b_5L_snow;
	10: switch_murakami_b_5L_snow;
	switch_murakami_5L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_murakami_6L_random) {
	1: switch_murakami_a_6L_snow;
	1: switch_murakami_b_6L_snow;
}

switch (FEAT_HOUSES, SELF, switch_murakami_6L_snow, SpriteDirections() ) {
	1: switch_murakami_a_6L_snow;
	2: switch_murakami_b_6L_snow;
	4: switch_murakami_a_6L_snow;
	5: switch_murakami_a_6L_snow;
	8: switch_murakami_b_6L_snow;
	10: switch_murakami_b_6L_snow;
	switch_murakami_6L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_murakami_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/kaneko/kaneko.pnml" 1
// Spritesets

spriteset (spr_kaneko_7L_norm, 				"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(1,1)}
spriteset (spr_kaneko_7L_snow, 				"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(400,1)}

spriteset (spr_kaneko_8L_norm, 				"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(1,102)}
spriteset (spr_kaneko_8L_snow, 				"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(400,102)}

spriteset (spr_kaneko_9L_norm, 				"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(1,203)}
spriteset (spr_kaneko_9L_snow, 				"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(400,203)}

spriteset (spr_kaneko_10L_norm, 			"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(1,304)}
spriteset (spr_kaneko_10L_snow, 			"src/houses/apartments/kaneko/building.png") 				{template_house_100_wide(400,304)}

spriteset (spr_kaneko_ground, 				"src/houses/apartments/kaneko/ground.png") 					{template_ground(1,1)}
spriteset (spr_kaneko_ground_snow, 			"src/houses/apartments/kaneko/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 7-story
// Norm Sprites
spritelayout sprlay_kaneko_7L_norm {
	ground {
		sprite: spr_kaneko_ground (construction_state);
	}
	building {
		sprite: spr_kaneko_7L_norm (construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kaneko_7L_snow {
	ground {
		sprite: spr_kaneko_ground_snow (construction_state);
	}
	building {
		sprite: spr_kaneko_7L_snow(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 8-story
// Norm Sprites
spritelayout sprlay_kaneko_8L_norm {
	ground {
		sprite: spr_kaneko_ground (construction_state);
	}
	building {
		sprite: spr_kaneko_8L_norm (construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kaneko_8L_snow {
	ground {
		sprite: spr_kaneko_ground_snow (construction_state);
	}
	building {
		sprite: spr_kaneko_8L_snow(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 9-story
// Norm Sprites
spritelayout sprlay_kaneko_9L_norm {
	ground {
		sprite: spr_kaneko_ground (construction_state);
	}
	building {
		sprite: spr_kaneko_9L_norm (construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kaneko_9L_snow {
	ground {
		sprite: spr_kaneko_ground_snow (construction_state);
	}
	building {
		sprite: spr_kaneko_9L_snow(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 10-story
// Norm Sprites
spritelayout sprlay_kaneko_10L_norm {
	ground {
		sprite: spr_kaneko_ground (construction_state);
	}
	building {
		sprite: spr_kaneko_10L_norm (construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kaneko_10L_snow {
	ground {
		sprite: spr_kaneko_ground_snow (construction_state);
	}
	building {
		sprite: spr_kaneko_10L_snow(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_kaneko_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kaneko_7L_snow;
	sprlay_kaneko_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kaneko_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kaneko_8L_snow;
	sprlay_kaneko_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kaneko_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kaneko_9L_snow;
	sprlay_kaneko_9L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kaneko_10L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kaneko_10L_snow;
	sprlay_kaneko_10L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_kaneko_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		//1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		//2: PALETTE_CC_DARK_GREEN;
		//3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/kimura/kimura.pnml" 1
// Spritesets

spriteset (spr_kimura_a_3L_norm, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(1,1)}
spriteset (spr_kimura_a_3L_snow, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(400,1)}

spriteset (spr_kimura_a_4L_norm, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(1,82)}
spriteset (spr_kimura_a_4L_snow, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(400,82)}

spriteset (spr_kimura_a_5L_norm, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(1,163)}
spriteset (spr_kimura_a_5L_snow, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(400,163)}

spriteset (spr_kimura_a_6L_norm, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(1,244)}
spriteset (spr_kimura_a_6L_snow, 				"src/houses/apartments/kimura/building_a.png") 				{template_house_80(400,244)}

spriteset (spr_kimura_b_3L_norm, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(1,1)}
spriteset (spr_kimura_b_3L_snow, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(400,1)}

spriteset (spr_kimura_b_4L_norm, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(1,82)}
spriteset (spr_kimura_b_4L_snow, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(400,82)}

spriteset (spr_kimura_b_5L_norm, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(1,163)}
spriteset (spr_kimura_b_5L_snow, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(400,163)}

spriteset (spr_kimura_b_6L_norm, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(1,244)}
spriteset (spr_kimura_b_6L_snow, 				"src/houses/apartments/kimura/building_b.png") 				{template_house_80(400,244)}

spriteset (spr_kimura_s_3L_norm, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(1,1)}
spriteset (spr_kimura_s_3L_snow, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(400,1)}

spriteset (spr_kimura_s_4L_norm, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(1,82)}
spriteset (spr_kimura_s_4L_snow, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(400,82)}

spriteset (spr_kimura_s_5L_norm, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(1,163)}
spriteset (spr_kimura_s_5L_snow, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(400,163)}

spriteset (spr_kimura_s_6L_norm, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(1,244)}
spriteset (spr_kimura_s_6L_snow, 				"src/houses/apartments/kimura/building_s.png") 				{template_house_80(400,244)}

spriteset (spr_kimura_n_3L_norm, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(1,1)}
spriteset (spr_kimura_n_3L_snow, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(400,1)}

spriteset (spr_kimura_n_4L_norm, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(1,82)}
spriteset (spr_kimura_n_4L_snow, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(400,82)}

spriteset (spr_kimura_n_5L_norm, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(1,163)}
spriteset (spr_kimura_n_5L_snow, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(400,163)}

spriteset (spr_kimura_n_6L_norm, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(1,244)}
spriteset (spr_kimura_n_6L_snow, 				"src/houses/apartments/kimura/building_n.png") 				{template_house_80(400,244)}

spriteset (spr_kimura_w_3L_norm, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(1,1)}
spriteset (spr_kimura_w_3L_snow, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(400,1)}

spriteset (spr_kimura_w_4L_norm, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(1,82)}
spriteset (spr_kimura_w_4L_snow, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(400,82)}

spriteset (spr_kimura_w_5L_norm, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(1,163)}
spriteset (spr_kimura_w_5L_snow, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(400,163)}

spriteset (spr_kimura_w_6L_norm, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(1,244)}
spriteset (spr_kimura_w_6L_snow, 				"src/houses/apartments/kimura/building_w.png") 				{template_house_80(400,244)}

spriteset (spr_kimura_e_3L_norm, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(1,1)}
spriteset (spr_kimura_e_3L_snow, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(400,1)}

spriteset (spr_kimura_e_4L_norm, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(1,82)}
spriteset (spr_kimura_e_4L_snow, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(400,82)}

spriteset (spr_kimura_e_5L_norm, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(1,163)}
spriteset (spr_kimura_e_5L_snow, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(400,163)}

spriteset (spr_kimura_e_6L_norm, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(1,244)}
spriteset (spr_kimura_e_6L_snow, 				"src/houses/apartments/kimura/building_e.png") 				{template_house_80(400,244)}

// Ground Sprites
spriteset (spr_kimura_a_ground, 				"src/houses/apartments/kimura/ground_a.png") 				{template_ground(1,1)}
spriteset (spr_kimura_a_ground_snow, 			"src/houses/apartments/kimura/ground_a.png") 				{template_ground(1,33)}

spriteset (spr_kimura_b_ground, 				"src/houses/apartments/kimura/ground_b.png") 				{template_ground(1,1)}
spriteset (spr_kimura_b_ground_snow, 			"src/houses/apartments/kimura/ground_b.png") 				{template_ground(1,33)}

spriteset (spr_kimura_s_ground, 				"src/houses/apartments/kimura/ground_s.png") 				{template_ground(1,1)}
spriteset (spr_kimura_s_ground_snow, 			"src/houses/apartments/kimura/ground_s.png") 				{template_ground(1,33)}

spriteset (spr_kimura_n_ground, 				"src/houses/apartments/kimura/ground_n.png") 				{template_ground(1,1)}
spriteset (spr_kimura_n_ground_snow, 			"src/houses/apartments/kimura/ground_n.png") 				{template_ground(1,33)}

spriteset (spr_kimura_w_ground, 				"src/houses/apartments/kimura/ground_w.png") 				{template_ground(1,1)}
spriteset (spr_kimura_w_ground_snow, 			"src/houses/apartments/kimura/ground_w.png") 				{template_ground(1,33)}

spriteset (spr_kimura_e_ground, 				"src/houses/apartments/kimura/ground_e.png") 				{template_ground(1,1)}
spriteset (spr_kimura_e_ground_snow, 			"src/houses/apartments/kimura/ground_e.png") 				{template_ground(1,33)}

// Spritelayouts

// A Direction
// 3-story
// Norm Sprites
spritelayout sprlay_kimura_a_3L_norm {
	ground {
		sprite: spr_kimura_a_ground (construction_state);
	}
	building {
		sprite: spr_kimura_a_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_a_3L_snow {
	ground {
		sprite: spr_kimura_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_a_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_kimura_a_4L_norm {
	ground {
		sprite: spr_kimura_a_ground (construction_state);
	}
	building {
		sprite: spr_kimura_a_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_a_4L_snow {
	ground {
		sprite: spr_kimura_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_a_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_kimura_a_5L_norm {
	ground {
		sprite: spr_kimura_a_ground (construction_state);
	}
	building {
		sprite: spr_kimura_a_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_a_5L_snow {
	ground {
		sprite: spr_kimura_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_a_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_kimura_a_6L_norm {
	ground {
		sprite: spr_kimura_a_ground (construction_state);
	}
	building {
		sprite: spr_kimura_a_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_a_6L_snow {
	ground {
		sprite: spr_kimura_a_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_a_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// B Direction
// 3-story
// Norm Sprites
spritelayout sprlay_kimura_b_3L_norm {
	ground {
		sprite: spr_kimura_b_ground (construction_state);
	}
	building {
		sprite: spr_kimura_b_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_b_3L_snow {
	ground {
		sprite: spr_kimura_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_b_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_kimura_b_4L_norm {
	ground {
		sprite: spr_kimura_b_ground (construction_state);
	}
	building {
		sprite: spr_kimura_b_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_b_4L_snow {
	ground {
		sprite: spr_kimura_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_b_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_kimura_b_5L_norm {
	ground {
		sprite: spr_kimura_b_ground (construction_state);
	}
	building {
		sprite: spr_kimura_b_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_b_5L_snow {
	ground {
		sprite: spr_kimura_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_b_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_kimura_b_6L_norm {
	ground {
		sprite: spr_kimura_b_ground (construction_state);
	}
	building {
		sprite: spr_kimura_b_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_b_6L_snow {
	ground {
		sprite: spr_kimura_b_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_b_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// S Direction
// 3-story
// Norm Sprites
spritelayout sprlay_kimura_s_3L_norm {
	ground {
		sprite: spr_kimura_s_ground (construction_state);
	}
	building {
		sprite: spr_kimura_s_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_s_3L_snow {
	ground {
		sprite: spr_kimura_s_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_s_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_kimura_s_4L_norm {
	ground {
		sprite: spr_kimura_s_ground (construction_state);
	}
	building {
		sprite: spr_kimura_s_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_s_4L_snow {
	ground {
		sprite: spr_kimura_s_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_s_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_kimura_s_5L_norm {
	ground {
		sprite: spr_kimura_s_ground (construction_state);
	}
	building {
		sprite: spr_kimura_s_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_s_5L_snow {
	ground {
		sprite: spr_kimura_s_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_s_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_kimura_s_6L_norm {
	ground {
		sprite: spr_kimura_s_ground (construction_state);
	}
	building {
		sprite: spr_kimura_s_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_s_6L_snow {
	ground {
		sprite: spr_kimura_s_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_s_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// N Direction
// 3-story
// Norm Sprites
spritelayout sprlay_kimura_n_3L_norm {
	ground {
		sprite: spr_kimura_n_ground (construction_state);
	}
	building {
		sprite: spr_kimura_n_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_n_3L_snow {
	ground {
		sprite: spr_kimura_n_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_n_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_kimura_n_4L_norm {
	ground {
		sprite: spr_kimura_n_ground (construction_state);
	}
	building {
		sprite: spr_kimura_n_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_n_4L_snow {
	ground {
		sprite: spr_kimura_n_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_n_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_kimura_n_5L_norm {
	ground {
		sprite: spr_kimura_n_ground (construction_state);
	}
	building {
		sprite: spr_kimura_n_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_n_5L_snow {
	ground {
		sprite: spr_kimura_n_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_n_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_kimura_n_6L_norm {
	ground {
		sprite: spr_kimura_n_ground (construction_state);
	}
	building {
		sprite: spr_kimura_n_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_n_6L_snow {
	ground {
		sprite: spr_kimura_n_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_n_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// W Direction
// 3-story
// Norm Sprites
spritelayout sprlay_kimura_w_3L_norm {
	ground {
		sprite: spr_kimura_w_ground (construction_state);
	}
	building {
		sprite: spr_kimura_w_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_w_3L_snow {
	ground {
		sprite: spr_kimura_w_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_w_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_kimura_w_4L_norm {
	ground {
		sprite: spr_kimura_w_ground (construction_state);
	}
	building {
		sprite: spr_kimura_w_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_w_4L_snow {
	ground {
		sprite: spr_kimura_w_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_w_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_kimura_w_5L_norm {
	ground {
		sprite: spr_kimura_w_ground (construction_state);
	}
	building {
		sprite: spr_kimura_w_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_w_5L_snow {
	ground {
		sprite: spr_kimura_w_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_w_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_kimura_w_6L_norm {
	ground {
		sprite: spr_kimura_w_ground (construction_state);
	}
	building {
		sprite: spr_kimura_w_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_w_6L_snow {
	ground {
		sprite: spr_kimura_w_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_w_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}
// E Direction
// 3-story
// Norm Sprites
spritelayout sprlay_kimura_e_3L_norm {
	ground {
		sprite: spr_kimura_e_ground (construction_state);
	}
	building {
		sprite: spr_kimura_e_3L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_e_3L_snow {
	ground {
		sprite: spr_kimura_e_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_e_3L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_kimura_e_4L_norm {
	ground {
		sprite: spr_kimura_e_ground (construction_state);
	}
	building {
		sprite: spr_kimura_e_4L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_e_4L_snow {
	ground {
		sprite: spr_kimura_e_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_e_4L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_kimura_e_5L_norm {
	ground {
		sprite: spr_kimura_e_ground (construction_state);
	}
	building {
		sprite: spr_kimura_e_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_e_5L_snow {
	ground {
		sprite: spr_kimura_e_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_e_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_kimura_e_6L_norm {
	ground {
		sprite: spr_kimura_e_ground (construction_state);
	}
	building {
		sprite: spr_kimura_e_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kimura_e_6L_snow {
	ground {
		sprite: spr_kimura_e_ground_snow (construction_state);
	}
	building {
		sprite: spr_kimura_e_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}


// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_kimura_a_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_a_3L_snow;
	sprlay_kimura_a_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_a_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_a_4L_snow;
	sprlay_kimura_a_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_a_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_a_5L_snow;
	sprlay_kimura_a_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_a_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_a_6L_snow;
	sprlay_kimura_a_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_b_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_b_3L_snow;
	sprlay_kimura_b_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_b_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_b_4L_snow;
	sprlay_kimura_b_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_b_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_b_5L_snow;
	sprlay_kimura_b_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_b_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_b_6L_snow;
	sprlay_kimura_b_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_s_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_s_3L_snow;
	sprlay_kimura_s_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_s_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_s_4L_snow;
	sprlay_kimura_s_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_s_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_s_5L_snow;
	sprlay_kimura_s_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_s_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_s_6L_snow;
	sprlay_kimura_s_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_n_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_n_3L_snow;
	sprlay_kimura_n_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_n_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_n_4L_snow;
	sprlay_kimura_n_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_n_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_n_5L_snow;
	sprlay_kimura_n_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_n_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_n_6L_snow;
	sprlay_kimura_n_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_w_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_w_3L_snow;
	sprlay_kimura_w_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_w_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_w_4L_snow;
	sprlay_kimura_w_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_w_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_w_5L_snow;
	sprlay_kimura_w_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_w_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_w_6L_snow;
	sprlay_kimura_w_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_e_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_e_3L_snow;
	sprlay_kimura_e_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_e_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_e_4L_snow;
	sprlay_kimura_e_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_e_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_e_5L_snow;
	sprlay_kimura_e_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kimura_e_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kimura_e_6L_snow;
	sprlay_kimura_e_6L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_kimura_3L_random) {
	1: switch_kimura_a_3L_snow;
	1: switch_kimura_b_3L_snow;
}

switch (FEAT_HOUSES, SELF, switch_kimura_3L_snow, SpriteDirections() ) {
	1: switch_kimura_a_3L_snow;
	2: switch_kimura_b_3L_snow;
	3: switch_kimura_s_3L_snow;
	4: switch_kimura_a_3L_snow;
	5: switch_kimura_a_3L_snow;
	6: switch_kimura_w_3L_snow;
	7: switch_kimura_s_3L_snow;
	8: switch_kimura_b_3L_snow;
	9: switch_kimura_e_3L_snow;
	10: switch_kimura_b_3L_snow;
	12: switch_kimura_n_3L_snow;
	switch_kimura_3L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_kimura_4L_random) {
	1: switch_kimura_a_4L_snow;
	1: switch_kimura_b_4L_snow;
}

switch (FEAT_HOUSES, SELF, switch_kimura_4L_snow, SpriteDirections() ) {
	1: switch_kimura_a_4L_snow;
	2: switch_kimura_b_4L_snow;
	3: switch_kimura_s_4L_snow;
	4: switch_kimura_a_4L_snow;
	5: switch_kimura_a_4L_snow;
	6: switch_kimura_w_4L_snow;
	7: switch_kimura_s_4L_snow;
	8: switch_kimura_b_4L_snow;
	9: switch_kimura_e_4L_snow;
	10: switch_kimura_b_4L_snow;
	12: switch_kimura_n_4L_snow;
	switch_kimura_4L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_kimura_5L_random) {
	1: switch_kimura_a_5L_snow;
	1: switch_kimura_b_5L_snow;
}

switch (FEAT_HOUSES, SELF, switch_kimura_5L_snow, SpriteDirections() ) {
	1: switch_kimura_a_5L_snow;
	2: switch_kimura_b_5L_snow;
	3: switch_kimura_s_5L_snow;
	4: switch_kimura_a_5L_snow;
	5: switch_kimura_a_5L_snow;
	6: switch_kimura_w_5L_snow;
	7: switch_kimura_s_5L_snow;
	8: switch_kimura_b_5L_snow;
	9: switch_kimura_e_5L_snow;
	10: switch_kimura_b_5L_snow;
	12: switch_kimura_n_5L_snow;
	switch_kimura_5L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_kimura_6L_random) {
	1: switch_kimura_a_6L_snow;
	1: switch_kimura_b_6L_snow;
}

switch (FEAT_HOUSES, SELF, switch_kimura_6L_snow, SpriteDirections() ) {
	1: switch_kimura_a_6L_snow;
	2: switch_kimura_b_6L_snow;
	3: switch_kimura_s_6L_snow;
	4: switch_kimura_a_6L_snow;
	5: switch_kimura_a_6L_snow;
	6: switch_kimura_w_6L_snow;
	7: switch_kimura_s_6L_snow;
	8: switch_kimura_b_6L_snow;
	9: switch_kimura_e_6L_snow;
	10: switch_kimura_b_6L_snow;
	12: switch_kimura_n_6L_snow;
	switch_kimura_6L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_kimura_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/kono/kono.pnml" 1

// Kono Inspiration
// 1 Chome-18-6 Mori, Koto City, Tokyo 135-0001, Japan

// Spritesets

spriteset (spr_kono_6L, 						"src/houses/apartments/kono/building.png") 						{template_house_128(1,1)}
spriteset (spr_kono_6L_snow, 					"src/houses/apartments/kono/building.png") 						{template_house_128(400,1)}

spriteset (spr_kono_7L, 						"src/houses/apartments/kono/building.png") 						{template_house_128(1,130)}
spriteset (spr_kono_7L_snow, 					"src/houses/apartments/kono/building.png") 						{template_house_128(400,130)}

spriteset (spr_kono_8L, 						"src/houses/apartments/kono/building.png") 						{template_house_128(1,259)}
spriteset (spr_kono_8L_snow, 					"src/houses/apartments/kono/building.png") 						{template_house_128(400,259)}

spriteset (spr_kono_9L, 						"src/houses/apartments/kono/building.png") 						{template_house_128(1,388)}
spriteset (spr_kono_9L_snow, 					"src/houses/apartments/kono/building.png") 						{template_house_128(400,388)}

spriteset (spr_kono_ground, 					"src/houses/apartments/kono/ground.png") 						{template_ground(1,1)}
spriteset (spr_kono_ground_snow, 				"src/houses/apartments/kono/ground.png") 						{template_ground(1,33)}


// Spritelayouts

// Kono 6 Storey

// Normal Sprites
spritelayout sprlay_kono_6L_norm {
	ground {
		sprite: spr_kono_ground(construction_state);
	}
	building {
		sprite: spr_kono_6L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kono_6L_snow {
	ground {
		sprite: spr_kono_ground_snow(construction_state);
	}
	building {
		sprite: spr_kono_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Kono 7 Storey

// Normal Sprites
spritelayout sprlay_kono_7L_norm {
	ground {
		sprite: spr_kono_ground(construction_state);
	}
	building {
		sprite: spr_kono_7L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kono_7L_snow {
	ground {
		sprite: spr_kono_ground_snow(construction_state);
	}
	building {
		sprite: spr_kono_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Kono 8 Storey

// Normal Sprites
spritelayout sprlay_kono_8L_norm {
	ground {
		sprite: spr_kono_ground(construction_state);
	}
	building {
		sprite: spr_kono_8L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kono_8L_snow {
	ground {
		sprite: spr_kono_ground_snow(construction_state);
	}
	building {
		sprite: spr_kono_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Kono 9 Storey

// Normal Sprites
spritelayout sprlay_kono_9L_norm {
	ground {
		sprite: spr_kono_ground(construction_state);
	}
	building {
		sprite: spr_kono_9L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_kono_9L_snow {
	ground {
		sprite: spr_kono_ground_snow(construction_state);
	}
	building {
		sprite: spr_kono_9L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_kono_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kono_6L_snow;
	sprlay_kono_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kono_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kono_7L_snow;
	sprlay_kono_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kono_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kono_8L_snow;
	sprlay_kono_8L_norm;
}

switch(FEAT_HOUSES, SELF, switch_kono_9L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_kono_9L_snow;
	sprlay_kono_9L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_kono_colors)
	{
		//1: PALETTE_CC_RED;
		//2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		//1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		//2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/mori/mori.pnml" 1
// Spritesets

spriteset (spr_mori_a_3L_norm, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(1,1)}
spriteset (spr_mori_a_3L_snow, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(400,1)}

spriteset (spr_mori_a_4L_norm, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(1,82)}
spriteset (spr_mori_a_4L_snow, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(400,82)}

spriteset (spr_mori_a_5L_norm, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(1,163)}
spriteset (spr_mori_a_5L_snow, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(400,163)}

spriteset (spr_mori_a_6L_norm, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(1,244)}
spriteset (spr_mori_a_6L_snow, 				"src/houses/apartments/mori/building_a.png") 				{template_house_80(400,244)}

spriteset (spr_mori_b_3L_norm, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(1,1)}
spriteset (spr_mori_b_3L_snow, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(400,1)}

spriteset (spr_mori_b_4L_norm, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(1,82)}
spriteset (spr_mori_b_4L_snow, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(400,82)}

spriteset (spr_mori_b_5L_norm, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(1,163)}
spriteset (spr_mori_b_5L_snow, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(400,163)}

spriteset (spr_mori_b_6L_norm, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(1,244)}
spriteset (spr_mori_b_6L_snow, 				"src/houses/apartments/mori/building_b.png") 				{template_house_80(400,244)}

spriteset (spr_mori_a_ground, 				"src/houses/apartments/mori/ground_a.png") 					{template_ground(1,1)}
spriteset (spr_mori_a_ground_snow, 			"src/houses/apartments/mori/ground_a.png") 					{template_ground(1,33)}

spriteset (spr_mori_b_ground, 				"src/houses/apartments/mori/ground_b.png") 					{template_ground(1,1)}
spriteset (spr_mori_b_ground_snow, 			"src/houses/apartments/mori/ground_b.png") 					{template_ground(1,33)}


// Spritelayouts

// 3-story
// Norm Sprites
spritelayout sprlay_mori_a_3L_norm {
	ground {
		sprite: spr_mori_a_ground (3);
	}
	building {
		sprite: spr_mori_a_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_a_3L_snow {
	ground {
		sprite: spr_mori_a_ground_snow (3);
	}
	building {
		sprite: spr_mori_a_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_mori_a_4L_norm {
	ground {
		sprite: spr_mori_a_ground (3);
	}
	building {
		sprite: spr_mori_a_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_a_4L_snow {
	ground {
		sprite: spr_mori_a_ground_snow (3);
	}
	building {
		sprite: spr_mori_a_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_mori_a_5L_norm {
	ground {
		sprite: spr_mori_a_ground (3);
	}
	building {
		sprite: spr_mori_a_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_a_5L_snow {
	ground {
		sprite: spr_mori_a_ground_snow (3);
	}
	building {
		sprite: spr_mori_a_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_mori_a_6L_norm {
	ground {
		sprite: spr_mori_a_ground (3);
	}
	building {
		sprite: spr_mori_a_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_a_6L_snow {
	ground {
		sprite: spr_mori_a_ground_snow (3);
	}
	building {
		sprite: spr_mori_a_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 3-story
// Norm Sprites
spritelayout sprlay_mori_b_3L_norm {
	ground {
		sprite: spr_mori_b_ground (3);
	}
	building {
		sprite: spr_mori_b_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_b_3L_snow {
	ground {
		sprite: spr_mori_b_ground_snow (3);
	}
	building {
		sprite: spr_mori_b_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_mori_b_4L_norm {
	ground {
		sprite: spr_mori_b_ground (3);
	}
	building {
		sprite: spr_mori_b_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_b_4L_snow {
	ground {
		sprite: spr_mori_b_ground_snow (3);
	}
	building {
		sprite: spr_mori_b_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_mori_b_5L_norm {
	ground {
		sprite: spr_mori_b_ground (3);
	}
	building {
		sprite: spr_mori_b_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_b_5L_snow {
	ground {
		sprite: spr_mori_b_ground_snow (3);
	}
	building {
		sprite: spr_mori_b_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_mori_b_6L_norm {
	ground {
		sprite: spr_mori_b_ground (3);
	}
	building {
		sprite: spr_mori_b_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_mori_b_6L_snow {
	ground {
		sprite: spr_mori_b_ground_snow (3);
	}
	building {
		sprite: spr_mori_b_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_mori_a_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_a_3L_snow;
	sprlay_mori_a_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_mori_a_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_a_4L_snow;
	sprlay_mori_a_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_mori_a_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_a_5L_snow;
	sprlay_mori_a_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_mori_a_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_a_6L_snow;
	sprlay_mori_a_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_mori_b_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_b_3L_snow;
	sprlay_mori_b_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_mori_b_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_b_4L_snow;
	sprlay_mori_b_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_mori_b_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_b_5L_snow;
	sprlay_mori_b_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_mori_b_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_mori_b_6L_snow;
	sprlay_mori_b_6L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_mori_3L_random) {
	1: switch_mori_a_3L_snow;
	1: switch_mori_b_3L_snow;
}

switch (FEAT_HOUSES, SELF, switch_mori_3L_snow, SpriteDirections() ) {
	1: switch_mori_a_3L_snow;
	2: switch_mori_b_3L_snow;
	4: switch_mori_a_3L_snow;
	5: switch_mori_a_3L_snow;
	8: switch_mori_b_3L_snow;
	10: switch_mori_b_3L_snow;
	switch_mori_3L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_mori_4L_random) {
	1: switch_mori_a_4L_snow;
	1: switch_mori_b_4L_snow;
}

switch (FEAT_HOUSES, SELF, switch_mori_4L_snow, SpriteDirections() ) {
	1: switch_mori_a_4L_snow;
	2: switch_mori_b_4L_snow;
	4: switch_mori_a_4L_snow;
	5: switch_mori_a_4L_snow;
	8: switch_mori_b_4L_snow;
	10: switch_mori_b_4L_snow;
	switch_mori_4L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_mori_5L_random) {
	1: switch_mori_a_5L_snow;
	1: switch_mori_b_5L_snow;
}

switch (FEAT_HOUSES, SELF, switch_mori_5L_snow, SpriteDirections() ) {
	1: switch_mori_a_5L_snow;
	2: switch_mori_b_5L_snow;
	4: switch_mori_a_5L_snow;
	5: switch_mori_a_5L_snow;
	8: switch_mori_b_5L_snow;
	10: switch_mori_b_5L_snow;
	switch_mori_5L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_mori_6L_random) {
	1: switch_mori_a_6L_snow;
	1: switch_mori_b_6L_snow;
}

switch (FEAT_HOUSES, SELF, switch_mori_6L_snow, SpriteDirections() ) {
	1: switch_mori_a_6L_snow;
	2: switch_mori_b_6L_snow;
	4: switch_mori_a_6L_snow;
	5: switch_mori_a_6L_snow;
	8: switch_mori_b_6L_snow;
	10: switch_mori_b_6L_snow;
	switch_mori_6L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_mori_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/nakamura/nakamura.pnml" 1
// Spritesets

spriteset (spr_nakamura_a_3L_norm, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(1,1)}
spriteset (spr_nakamura_a_3L_snow, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(400,1)}

spriteset (spr_nakamura_a_4L_norm, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(1,82)}
spriteset (spr_nakamura_a_4L_snow, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(400,82)}

spriteset (spr_nakamura_a_5L_norm, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(1,163)}
spriteset (spr_nakamura_a_5L_snow, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(400,163)}

spriteset (spr_nakamura_a_6L_norm, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(1,244)}
spriteset (spr_nakamura_a_6L_snow, 				"src/houses/apartments/nakamura/building_a.png") 				{template_house_80(400,244)}

spriteset (spr_nakamura_b_3L_norm, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(1,1)}
spriteset (spr_nakamura_b_3L_snow, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(400,1)}

spriteset (spr_nakamura_b_4L_norm, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(1,82)}
spriteset (spr_nakamura_b_4L_snow, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(400,82)}

spriteset (spr_nakamura_b_5L_norm, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(1,163)}
spriteset (spr_nakamura_b_5L_snow, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(400,163)}

spriteset (spr_nakamura_b_6L_norm, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(1,244)}
spriteset (spr_nakamura_b_6L_snow, 				"src/houses/apartments/nakamura/building_b.png") 				{template_house_80(400,244)}

spriteset (spr_nakamura_a_ground, 				"src/houses/apartments/nakamura/ground_a.png") 					{template_ground(1,1)}
spriteset (spr_nakamura_a_ground_snow, 			"src/houses/apartments/nakamura/ground_a.png") 					{template_ground(1,33)}

spriteset (spr_nakamura_b_ground, 				"src/houses/apartments/nakamura/ground_b.png") 					{template_ground(1,1)}
spriteset (spr_nakamura_b_ground_snow, 			"src/houses/apartments/nakamura/ground_b.png") 					{template_ground(1,33)}


// Spritelayouts

// 3-story
// Norm Sprites
spritelayout sprlay_nakamura_a_3L_norm {
	ground {
		sprite: spr_nakamura_a_ground (3);
	}
	building {
		sprite: spr_nakamura_a_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_a_3L_snow {
	ground {
		sprite: spr_nakamura_a_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_a_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_nakamura_a_4L_norm {
	ground {
		sprite: spr_nakamura_a_ground (3);
	}
	building {
		sprite: spr_nakamura_a_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_a_4L_snow {
	ground {
		sprite: spr_nakamura_a_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_a_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_nakamura_a_5L_norm {
	ground {
		sprite: spr_nakamura_a_ground (3);
	}
	building {
		sprite: spr_nakamura_a_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_a_5L_snow {
	ground {
		sprite: spr_nakamura_a_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_a_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_nakamura_a_6L_norm {
	ground {
		sprite: spr_nakamura_a_ground (3);
	}
	building {
		sprite: spr_nakamura_a_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_a_6L_snow {
	ground {
		sprite: spr_nakamura_a_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_a_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 3-story
// Norm Sprites
spritelayout sprlay_nakamura_b_3L_norm {
	ground {
		sprite: spr_nakamura_b_ground (3);
	}
	building {
		sprite: spr_nakamura_b_3L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_b_3L_snow {
	ground {
		sprite: spr_nakamura_b_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_b_3L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 4-story
// Norm Sprites
spritelayout sprlay_nakamura_b_4L_norm {
	ground {
		sprite: spr_nakamura_b_ground (3);
	}
	building {
		sprite: spr_nakamura_b_4L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_b_4L_snow {
	ground {
		sprite: spr_nakamura_b_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_b_4L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 5-story
// Norm Sprites
spritelayout sprlay_nakamura_b_5L_norm {
	ground {
		sprite: spr_nakamura_b_ground (3);
	}
	building {
		sprite: spr_nakamura_b_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_b_5L_snow {
	ground {
		sprite: spr_nakamura_b_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_b_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_nakamura_b_6L_norm {
	ground {
		sprite: spr_nakamura_b_ground (3);
	}
	building {
		sprite: spr_nakamura_b_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakamura_b_6L_snow {
	ground {
		sprite: spr_nakamura_b_ground_snow (3);
	}
	building {
		sprite: spr_nakamura_b_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_nakamura_a_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_a_3L_snow;
	sprlay_nakamura_a_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakamura_a_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_a_4L_snow;
	sprlay_nakamura_a_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakamura_a_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_a_5L_snow;
	sprlay_nakamura_a_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakamura_a_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_a_6L_snow;
	sprlay_nakamura_a_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakamura_b_3L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_b_3L_snow;
	sprlay_nakamura_b_3L_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakamura_b_4L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_b_4L_snow;
	sprlay_nakamura_b_4L_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakamura_b_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_b_5L_snow;
	sprlay_nakamura_b_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakamura_b_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakamura_b_6L_snow;
	sprlay_nakamura_b_6L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_nakamura_3L_random) {
	1: switch_nakamura_a_3L_snow;
	1: switch_nakamura_b_3L_snow;
}

switch (FEAT_HOUSES, SELF, switch_nakamura_3L_snow, SpriteDirections() ) {
	1: switch_nakamura_a_3L_snow;
	2: switch_nakamura_b_3L_snow;
	4: switch_nakamura_a_3L_snow;
	5: switch_nakamura_a_3L_snow;
	8: switch_nakamura_b_3L_snow;
	10: switch_nakamura_b_3L_snow;
	switch_nakamura_3L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_nakamura_4L_random) {
	1: switch_nakamura_a_4L_snow;
	1: switch_nakamura_b_4L_snow;
}

switch (FEAT_HOUSES, SELF, switch_nakamura_4L_snow, SpriteDirections() ) {
	1: switch_nakamura_a_4L_snow;
	2: switch_nakamura_b_4L_snow;
	4: switch_nakamura_a_4L_snow;
	5: switch_nakamura_a_4L_snow;
	8: switch_nakamura_b_4L_snow;
	10: switch_nakamura_b_4L_snow;
	switch_nakamura_4L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_nakamura_5L_random) {
	1: switch_nakamura_a_5L_snow;
	1: switch_nakamura_b_5L_snow;
}

switch (FEAT_HOUSES, SELF, switch_nakamura_5L_snow, SpriteDirections() ) {
	1: switch_nakamura_a_5L_snow;
	2: switch_nakamura_b_5L_snow;
	4: switch_nakamura_a_5L_snow;
	5: switch_nakamura_a_5L_snow;
	8: switch_nakamura_b_5L_snow;
	10: switch_nakamura_b_5L_snow;
	switch_nakamura_5L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_nakamura_6L_random) {
	1: switch_nakamura_a_6L_snow;
	1: switch_nakamura_b_6L_snow;
}

switch (FEAT_HOUSES, SELF, switch_nakamura_6L_snow, SpriteDirections() ) {
	1: switch_nakamura_a_6L_snow;
	2: switch_nakamura_b_6L_snow;
	4: switch_nakamura_a_6L_snow;
	5: switch_nakamura_a_6L_snow;
	8: switch_nakamura_b_6L_snow;
	10: switch_nakamura_b_6L_snow;
	switch_nakamura_6L_random;
}

random_switch (FEAT_HOUSES, SELF, switch_nakamura_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/nakayama/nakayama.pnml" 1
// Begin Nakayama

// Spritesets

spriteset (spr_nakayama_ashita, 					"src/houses/apartments/nakayama/building.png") 						{template_house_128(1,1)}
spriteset (spr_nakayama_ashita_snow, 				"src/houses/apartments/nakayama/building.png") 						{template_house_128(400,1)}

spriteset (spr_nakayama_dual_a, 					"src/houses/apartments/nakayama/building.png") 						{template_house_128(1,130)}
spriteset (spr_nakayama_dual_a_snow, 				"src/houses/apartments/nakayama/building.png") 						{template_house_128(400,130)}

spriteset (spr_nakayama_dual_b, 					"src/houses/apartments/nakayama/building.png") 						{template_house_128(1,259)}
spriteset (spr_nakayama_dual_b_snow, 				"src/houses/apartments/nakayama/building.png") 						{template_house_128(400,259)}
/*
spriteset (spr_nakayama_north, 						"src/houses/apartments/nakayama/building.png") 						{template_house_128(1,388)}
spriteset (spr_nakayama_north_snow, 				"src/houses/apartments/nakayama/building.png") 						{template_house_128(400,388)}
*/
spriteset (spr_nakayama_ground_a, 					"src/houses/apartments/nakayama/ground_a.png") 						{template_ground(1,1)}
spriteset (spr_nakayama_ground_a_snow, 				"src/houses/apartments/nakayama/ground_a.png") 						{template_ground(1,33)}

spriteset (spr_nakayama_ground_b, 					"src/houses/apartments/nakayama/ground_b.png") 						{template_ground(1,1)}
spriteset (spr_nakayama_ground_b_snow, 				"src/houses/apartments/nakayama/ground_b.png") 						{template_ground(1,33)}

// Spritelayouts

// Nakayama 6 Storey

// Normal Sprites
spritelayout sprlay_nakayama_ashita_norm {
	ground {
		sprite: spr_nakayama_ground_a(3);
	}
	building {
		sprite: spr_nakayama_ashita (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakayama_ashita_snow {
	ground {
		sprite: spr_nakayama_ground_a_snow(3);
	}
	building {
		sprite: spr_nakayama_ashita_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// nakayama 7 Storey

// Normal Sprites
spritelayout sprlay_nakayama_dual_a_norm {
	ground {
		sprite: spr_nakayama_ground_a(3);
	}
	building {
		sprite: spr_nakayama_dual_a (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakayama_dual_a_snow {
	ground {
		sprite: spr_nakayama_ground_a_snow(3);
	}
	building {
		sprite: spr_nakayama_dual_a_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// nakayama 8 Storey

// Normal Sprites
spritelayout sprlay_nakayama_dual_b_norm {
	ground {
		sprite: spr_nakayama_ground_b(3);
	}
	building {
		sprite: spr_nakayama_dual_b (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakayama_dual_b_snow {
	ground {
		sprite: spr_nakayama_ground_b_snow(3);
	}
	building {
		sprite: spr_nakayama_dual_b_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}
/*
// nakayama 9 Storey

// Normal Sprites
spritelayout sprlay_nakayama_north_norm {
	ground {
		sprite: spr_nakayama_ground(3);
	}
	building {
		sprite: spr_nakayama_north (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_nakayama_north_snow {
	ground {
		sprite: spr_nakayama_ground_snow(3);
	}
	building {
		sprite: spr_nakayama_north_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}
*/
// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_nakayama_ashita_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakayama_ashita_snow;
	sprlay_nakayama_ashita_norm;
}

switch(FEAT_HOUSES, SELF, switch_nakayama_dual_a_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakayama_dual_a_snow;
	sprlay_nakayama_dual_a_norm;
}


switch(FEAT_HOUSES, SELF, switch_nakayama_dual_b_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakayama_dual_b_snow;
	sprlay_nakayama_dual_b_norm;
}
/*
switch(FEAT_HOUSES, SELF, switch_nakayama_north_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_nakayama_north_snow;
	sprlay_nakayama_north_norm;
}
*/

random_switch (FEAT_HOUSES, SELF, switch_nakayama_random) {
	1: switch_nakayama_dual_a_snow;
	1: switch_nakayama_dual_b_snow;
}

switch (FEAT_HOUSES, SELF, switch_nakayama_dual_snow, SpriteDirections() ) {
	1: switch_nakayama_dual_a_snow;
	2: switch_nakayama_dual_b_snow;
	4: switch_nakayama_dual_a_snow;
	5: switch_nakayama_dual_a_snow;
	8: switch_nakayama_dual_b_snow;
	10: switch_nakayama_dual_b_snow;
	switch_nakayama_random;
}


random_switch (FEAT_HOUSES, SELF, switch_nakayama_colors)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		//4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/osaka/osaka.pnml" 1
// Spritesets

// Building Sprites
spriteset (spr_build_osaka_a, 						"src/houses/apartments/osaka/building.png") 					{template_house_128(1,1)}
spriteset (spr_build_osaka_a_snow, 					"src/houses/apartments/osaka/building.png") 					{template_house_128(400,1)}

spriteset (spr_build_osaka_b, 						"src/houses/apartments/osaka/building.png") 					{template_house_128(1,130)}
spriteset (spr_build_osaka_b_snow, 					"src/houses/apartments/osaka/building.png") 					{template_house_128(400,130)}

// Japan, 〒273-0005 Chiba, Funabashi, Honcho, 6 Chome−6−1 北翔ビル ２階
spriteset (spr_build_osaka_c, 						"src/houses/apartments/osaka/building.png") 					{template_house_128(1,259)}
spriteset (spr_build_osaka_c_snow, 					"src/houses/apartments/osaka/building.png") 					{template_house_128(400,259)}

// Shinkamagaya Otorhinolaryngology, 1 Chome-18-5 Shinkamagaya, Kamagaya, Chiba 273-0107, Japan
spriteset (spr_build_osaka_d, 						"src/houses/apartments/osaka/building.png") 					{template_house_128(1,388)}
spriteset (spr_build_osaka_d_snow, 					"src/houses/apartments/osaka/building.png") 					{template_house_128(400,388)}

// Ground Sprites
spriteset (spr_ground_osaka_a, 						"src/houses/apartments/osaka/ground.png") 						{template_ground(1,1)}
spriteset (spr_ground_osaka_a_snow, 				"src/houses/apartments/osaka/ground.png") 						{template_ground(1,33)}

spriteset (spr_ground_osaka_b, 						"src/houses/apartments/osaka/ground.png") 						{template_ground(261,1)}
spriteset (spr_ground_osaka_b_snow, 				"src/houses/apartments/osaka/ground.png") 						{template_ground(261,33)}

spriteset (spr_ground_osaka_d, 						"src/houses/apartments/osaka/ground_d.png") 					{template_ground(1,1)}
spriteset (spr_ground_osaka_d_snow, 				"src/houses/apartments/osaka/ground_d.png") 					{template_ground(1,33)}

// Spritelayouts

// Normal Sprites
spritelayout sprlay_osaka_a {
	ground {
		sprite: spr_ground_osaka_a (construction_state);
	}
	building {
		sprite: spr_build_osaka_a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_osaka_b {
	ground {
		sprite: spr_ground_osaka_b (construction_state);
	}
	building {
		sprite: spr_build_osaka_b (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_osaka_c {
	ground {
		sprite: spr_ground_osaka_b (construction_state);
	}
	building {
		sprite: spr_build_osaka_c (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_osaka_d {
	ground {
		sprite: spr_ground_osaka_d (construction_state);
	}
	building {
		sprite: spr_build_osaka_d (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_osaka_a_snow {
	ground {
		sprite: spr_ground_osaka_a_snow (construction_state);
	}
	building {
		sprite: spr_build_osaka_a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_osaka_b_snow {
	ground {
		sprite: spr_ground_osaka_b_snow (construction_state);
	}
	building {
		sprite: spr_build_osaka_b_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_osaka_c_snow {
	ground {
		sprite: spr_ground_osaka_b_snow (construction_state);
	}
	building {
		sprite: spr_build_osaka_c_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_osaka_d_snow {
	ground {
		sprite: spr_ground_osaka_d_snow (construction_state);
	}
	building {
		sprite: spr_build_osaka_d_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_osaka_a_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_osaka_a_snow;
	sprlay_osaka_a;
}
switch(FEAT_HOUSES, SELF, switch_osaka_b_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_osaka_b_snow;
	sprlay_osaka_b;
}
switch(FEAT_HOUSES, SELF, switch_osaka_c_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_osaka_c_snow;
	sprlay_osaka_c;
}
switch(FEAT_HOUSES, SELF, switch_osaka_d_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_osaka_d_snow;
	sprlay_osaka_d;
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/shibata/shibata.pnml" 1
// Spritesets

spriteset (spr_shibata_5L_norm, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(1,1)}
spriteset (spr_shibata_5L_snow, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(400,1)}

spriteset (spr_shibata_6L_norm, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(1,82)}
spriteset (spr_shibata_6L_snow, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(400,82)}

spriteset (spr_shibata_7L_norm, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(1,163)}
spriteset (spr_shibata_7L_snow, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(400,163)}

spriteset (spr_shibata_8L_norm, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(1,244)}
spriteset (spr_shibata_8L_snow, 					"src/houses/apartments/shibata/building.png") 				{template_house_80(400,244)}

spriteset (spr_shibata_ground, 						"src/houses/apartments/shibata/ground.png") 					{template_ground(1,1)}
spriteset (spr_shibata_ground_snow, 				"src/houses/apartments/shibata/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 5-story
// Norm Sprites
spritelayout sprlay_shibata_5L_norm {
	ground {
		sprite: spr_shibata_ground (3);
	}
	building {
		sprite: spr_shibata_5L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_shibata_5L_snow {
	ground {
		sprite: spr_shibata_ground_snow (3);
	}
	building {
		sprite: spr_shibata_5L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_shibata_6L_norm {
	ground {
		sprite: spr_shibata_ground (3);
	}
	building {
		sprite: spr_shibata_6L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_shibata_6L_snow {
	ground {
		sprite: spr_shibata_ground_snow (3);
	}
	building {
		sprite: spr_shibata_6L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 7-story
// Norm Sprites
spritelayout sprlay_shibata_7L_norm {
	ground {
		sprite: spr_shibata_ground (3);
	}
	building {
		sprite: spr_shibata_7L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_shibata_7L_snow {
	ground {
		sprite: spr_shibata_ground_snow (3);
	}
	building {
		sprite: spr_shibata_7L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 8-story
// Norm Sprites
spritelayout sprlay_shibata_8L_norm {
	ground {
		sprite: spr_shibata_ground (3);
	}
	building {
		sprite: spr_shibata_8L_norm (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_shibata_8L_snow {
	ground {
		sprite: spr_shibata_ground_snow (3);
	}
	building {
		sprite: spr_shibata_8L_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_shibata_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_shibata_5L_snow;
	sprlay_shibata_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_shibata_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_shibata_6L_snow;
	sprlay_shibata_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_shibata_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_shibata_7L_snow;
	sprlay_shibata_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_shibata_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_shibata_8L_snow;
	sprlay_shibata_8L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_shibata_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/tetsui/tetsui.pnml" 1
// Spritesets

spriteset (spr_tetsui_5L_norm, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(1,1)}
spriteset (spr_tetsui_5L_snow, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(400,1)}

spriteset (spr_tetsui_6L_norm, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(1,82)}
spriteset (spr_tetsui_6L_snow, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(400,82)}

spriteset (spr_tetsui_7L_norm, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(1,163)}
spriteset (spr_tetsui_7L_snow, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(400,163)}

spriteset (spr_tetsui_8L_norm, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(1,244)}
spriteset (spr_tetsui_8L_snow, 					"src/houses/apartments/tetsui/building.png") 				{template_house_80(400,244)}

spriteset (spr_tetsui_ground, 					"src/houses/apartments/tetsui/ground.png") 					{template_ground(1,1)}
spriteset (spr_tetsui_ground_snow, 				"src/houses/apartments/tetsui/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 5-story
// Norm Sprites
spritelayout sprlay_tetsui_5L_norm {
	ground {
		sprite: spr_tetsui_ground (construction_state);
	}
	building {
		sprite: spr_tetsui_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_tetsui_5L_snow {
	ground {
		sprite: spr_tetsui_ground_snow (construction_state);
	}
	building {
		sprite: spr_tetsui_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_tetsui_6L_norm {
	ground {
		sprite: spr_tetsui_ground (construction_state);
	}
	building {
		sprite: spr_tetsui_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_tetsui_6L_snow {
	ground {
		sprite: spr_tetsui_ground_snow (construction_state);
	}
	building {
		sprite: spr_tetsui_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 7-story
// Norm Sprites
spritelayout sprlay_tetsui_7L_norm {
	ground {
		sprite: spr_tetsui_ground (construction_state);
	}
	building {
		sprite: spr_tetsui_7L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_tetsui_7L_snow {
	ground {
		sprite: spr_tetsui_ground_snow (construction_state);
	}
	building {
		sprite: spr_tetsui_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 8-story
// Norm Sprites
spritelayout sprlay_tetsui_8L_norm {
	ground {
		sprite: spr_tetsui_ground (construction_state);
	}
	building {
		sprite: spr_tetsui_8L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_tetsui_8L_snow {
	ground {
		sprite: spr_tetsui_ground_snow (construction_state);
	}
	building {
		sprite: spr_tetsui_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow
switch(FEAT_HOUSES, SELF, switch_tetsui_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_tetsui_5L_snow;
	sprlay_tetsui_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_tetsui_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_tetsui_6L_snow;
	sprlay_tetsui_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_tetsui_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_tetsui_7L_snow;
	sprlay_tetsui_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_tetsui_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_tetsui_8L_snow;
	sprlay_tetsui_8L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_tetsui_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		//3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/toki/toki.pnml" 1
// Spritesets

spriteset (spr_toki_5L, 						"src/houses/apartments/toki/building.png") 						{template_house_128(1,1)}
spriteset (spr_toki_5L_snow, 					"src/houses/apartments/toki/building.png") 						{template_house_128(400,1)}

spriteset (spr_toki_6L, 						"src/houses/apartments/toki/building.png") 						{template_house_128(1,130)}
spriteset (spr_toki_6L_snow, 					"src/houses/apartments/toki/building.png") 						{template_house_128(400,130)}

spriteset (spr_toki_7L, 						"src/houses/apartments/toki/building.png") 						{template_house_128(1,259)}
spriteset (spr_toki_7L_snow, 					"src/houses/apartments/toki/building.png") 						{template_house_128(400,259)}

spriteset (spr_toki_8L, 						"src/houses/apartments/toki/building.png") 						{template_house_128(1,388)}
spriteset (spr_toki_8L_snow, 					"src/houses/apartments/toki/building.png") 						{template_house_128(400,388)}

spriteset (spr_toki_ground, 					"src/houses/apartments/toki/ground.png") 						{template_ground(1,1)}
spriteset (spr_toki_ground_snow, 				"src/houses/apartments/toki/ground.png") 						{template_ground(1,33)}

// Spritelayouts

// Toki 5 Storey

// Normal Sprites
spritelayout sprlay_toki_5L_norm {
	ground {
		sprite: spr_toki_ground(construction_state);
	}
	building {
		sprite: spr_toki_5L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_toki_5L_snow {
	ground {
		sprite: spr_toki_ground_snow(construction_state);
	}
	building {
		sprite: spr_toki_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Toki 6 Storey

// Normal Sprites
spritelayout sprlay_toki_6L_norm {
	ground {
		sprite: spr_toki_ground(construction_state);
	}
	building {
		sprite: spr_toki_6L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_toki_6L_snow {
	ground {
		sprite: spr_toki_ground_snow(construction_state);
	}
	building {
		sprite: spr_toki_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Toki 7 Storey

// Normal Sprites
spritelayout sprlay_toki_7L_norm {
	ground {
		sprite: spr_toki_ground(construction_state);
	}
	building {
		sprite: spr_toki_7L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_toki_7L_snow {
	ground {
		sprite: spr_toki_ground_snow(construction_state);
	}
	building {
		sprite: spr_toki_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Toki 8 Storey

// Normal Sprites
spritelayout sprlay_toki_8L_norm {
	ground {
		sprite: spr_toki_ground(construction_state);
	}
	building {
		sprite: spr_toki_8L (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_toki_8L_snow {
	ground {
		sprite: spr_toki_ground_snow(construction_state);
	}
	building {
		sprite: spr_toki_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_toki_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_toki_5L_snow;
	sprlay_toki_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_toki_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_toki_6L_snow;
	sprlay_toki_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_toki_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_toki_7L_snow;
	sprlay_toki_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_toki_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_toki_8L_snow;
	sprlay_toki_8L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_toki_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		//3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/tokyo/tokyo.pnml" 1
// Spritesets

// Building Sprites
spriteset (spr_build_tokyo_a, 						"src/houses/apartments/tokyo/building.png") 					{template_house_128(1,1)}
spriteset (spr_build_tokyo_b, 						"src/houses/apartments/tokyo/building.png") 					{template_house_128(1,130)}

spriteset (spr_build_tokyo_a_snow, 					"src/houses/apartments/tokyo/building.png") 					{template_house_128(400,1)}
spriteset (spr_build_tokyo_b_snow, 					"src/houses/apartments/tokyo/building.png") 					{template_house_128(400,130)}

// Ground Sprites
spriteset (spr_ground_tokyo_a, 						"src/houses/apartments/tokyo/ground.png") 						{template_ground(1,1)}
spriteset (spr_ground_tokyo_a_snow, 				"src/houses/apartments/tokyo/ground.png") 						{template_ground(261,1)}

spriteset (spr_ground_tokyo_b, 						"src/houses/apartments/tokyo/ground.png") 						{template_ground(1,33)}
spriteset (spr_ground_tokyo_b_snow, 				"src/houses/apartments/tokyo/ground.png") 						{template_ground(261,33)}

// Spritelayouts

// Normal Sprites
spritelayout sprlay_tokyo_a {
	ground {
		sprite: spr_ground_tokyo_a (construction_state);
	}
	building {
		sprite: spr_build_tokyo_a (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tokyo_b {
	ground {
		sprite: spr_ground_tokyo_b (construction_state);
	}
	building {
		sprite: spr_build_tokyo_b (construction_state);
		yoffset:  2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_tokyo_a_snow {
	ground {
		sprite: spr_ground_tokyo_a_snow (construction_state);
	}
	building {
		sprite: spr_build_tokyo_a_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_tokyo_b_snow {
	ground {
		sprite: spr_ground_tokyo_b_snow (construction_state);
	}
	building {
		sprite: spr_build_tokyo_b_snow (construction_state);
		yoffset:  2;
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_tokyo_a_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_tokyo_a_snow;
	sprlay_tokyo_a;
}
switch(FEAT_HOUSES, SELF, switch_tokyo_b_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_tokyo_b_snow;
	sprlay_tokyo_b;
}

random_switch (FEAT_HOUSES, SELF, switch_tokyo_snow) {
	1: switch_tokyo_a_snow;
	1: switch_tokyo_b_snow;
	1: switch_osaka_c_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_osaka_snow) {
	1: switch_osaka_a_snow;
	1: switch_osaka_b_snow;
	1: switch_osaka_c_snow;
	1: switch_osaka_d_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_tokyosaka_random) {
	3: switch_tokyo_snow;
	4: switch_osaka_snow;
}

switch (FEAT_HOUSES, SELF, switch_tokyosaka_snow, SpriteDirections() ) {
	1: switch_osaka_snow;
	2: switch_tokyo_snow;
	4: switch_osaka_snow;
	5: switch_osaka_snow;
	8: switch_tokyo_snow;
	10: switch_tokyo_snow;
	switch_tokyosaka_random;
}

random_switch (FEAT_HOUSES, SELF, switch_tokyosaka_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/yano/yano.pnml" 1
// Spritesets

spriteset (spr_yano_norm, 						"src/houses/apartments/yano/building.png") 					{template_house_80(1,1)}
spriteset (spr_yano_snow, 						"src/houses/apartments/yano/building.png") 					{template_house_80(1,82)}

spriteset (spr_yano_ground, 					"src/houses/apartments/yano/ground.png") 					{template_ground(1,1)}
spriteset (spr_yano_ground_snow, 				"src/houses/apartments/yano/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// Normal Sprites
spritelayout sprlay_yano_norm {
	ground {
		sprite: spr_yano_ground (construction_state);
	}
	building {
		sprite: spr_yano_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yano_snow {
	ground {
		sprite: spr_yano_ground_snow (construction_state);
	}
	building {
		sprite: spr_yano_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yano_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yano_snow;
	sprlay_yano_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_yano_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/yanagi/yanagi.pnml" 1
// Spritesets

spriteset (spr_yanagi_5L_norm, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(1,1)}
spriteset (spr_yanagi_5L_snow, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(400,1)}

spriteset (spr_yanagi_6L_norm, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(1,82)}
spriteset (spr_yanagi_6L_snow, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(400,82)}

spriteset (spr_yanagi_7L_norm, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(1,163)}
spriteset (spr_yanagi_7L_snow, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(400,163)}

spriteset (spr_yanagi_8L_norm, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(1,244)}
spriteset (spr_yanagi_8L_snow, 					"src/houses/apartments/yanagi/building.png") 				{template_house_80(400,244)}

spriteset (spr_yanagi_ground, 					"src/houses/apartments/yanagi/ground.png") 					{template_ground(1,1)}
spriteset (spr_yanagi_ground_snow, 				"src/houses/apartments/yanagi/ground.png") 					{template_ground(1,33)}

// Spritelayouts

// 5-story
// Norm Sprites
spritelayout sprlay_yanagi_5L_norm {
	ground {
		sprite: spr_yanagi_ground (construction_state);
	}
	building {
		sprite: spr_yanagi_5L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yanagi_5L_snow {
	ground {
		sprite: spr_yanagi_ground_snow (construction_state);
	}
	building {
		sprite: spr_yanagi_5L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 6-story
// Norm Sprites
spritelayout sprlay_yanagi_6L_norm {
	ground {
		sprite: spr_yanagi_ground (construction_state);
	}
	building {
		sprite: spr_yanagi_6L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yanagi_6L_snow {
	ground {
		sprite: spr_yanagi_ground_snow (construction_state);
	}
	building {
		sprite: spr_yanagi_6L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 7-story
// Norm Sprites
spritelayout sprlay_yanagi_7L_norm {
	ground {
		sprite: spr_yanagi_ground (construction_state);
	}
	building {
		sprite: spr_yanagi_7L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yanagi_7L_snow {
	ground {
		sprite: spr_yanagi_ground_snow (construction_state);
	}
	building {
		sprite: spr_yanagi_7L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// 8-story
// Norm Sprites
spritelayout sprlay_yanagi_8L_norm {
	ground {
		sprite: spr_yanagi_ground (construction_state);
	}
	building {
		sprite: spr_yanagi_8L_norm (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yanagi_8L_snow {
	ground {
		sprite: spr_yanagi_ground_snow (construction_state);
	}
	building {
		sprite: spr_yanagi_8L_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Norm or Snow

switch(FEAT_HOUSES, SELF, switch_yanagi_5L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yanagi_5L_snow;
	sprlay_yanagi_5L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yanagi_6L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yanagi_6L_snow;
	sprlay_yanagi_6L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yanagi_7L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yanagi_7L_snow;
	sprlay_yanagi_7L_norm;
}

switch(FEAT_HOUSES, SELF, switch_yanagi_8L_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_yanagi_8L_snow;
	sprlay_yanagi_8L_norm;
}

random_switch (FEAT_HOUSES, SELF, switch_yanagi_colors)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
# 1 "JPplusHousesResidential.pnml" 4

// HOUSE IDs

// Houses
# 1 "src/houses/houses/house_hist.pnml" 1
// Begin house_hist

// Townzone Inner Suburb
random_switch (FEAT_HOUSES, SELF, switch_house_hist_inner_sprites) {
	1: switch_two_wooden_houses_01_snow;
	1: switch_two_wooden_houses_02_snow;
	1: switch_two_wooden_houses_03_snow;
	1: switch_wooden_townhouses_01_snow;
	1: switch_wooden_townhouses_02_snow;
	1: switch_wooden_townhouses_03_snow;
	1: switch_wooden_townhouses_04_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_hist_inner_name) {
	dependent: switch_house_hist_inner_sprites;
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_SHOPS),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_TREE),string(PERIOD_HIST));
}

// Townzone Outer Suburb
random_switch (FEAT_HOUSES, SELF, switch_house_hist_outer_sprites) {
	1: switch_two_wooden_houses_01_snow;
	1: switch_two_wooden_houses_02_snow;
	1: switch_two_wooden_houses_03_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_hist_outer_name) {
	dependent: switch_house_hist_outer_sprites;
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_HIST));
}

// Townzone Outskirts
random_switch (FEAT_HOUSES, SELF, switch_house_hist_outskirt_sprites) {
	1: switch_large_wooden_farmhouse_01_snow;
	1: switch_large_wooden_house_01_snow;
	1: switch_large_wooden_house_02_snow;
	1: switch_wooden_farmhouse_01_snow;
	1: switch_wooden_house_01_snow;
	1: switch_wooden_townhouses_01_snow;
	1: switch_wooden_townhouses_02_snow;
	1: switch_wooden_townhouses_03_snow;
	1: switch_wooden_townhouses_04_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_hist_outskirt_name) {
	dependent: switch_house_hist_outskirt_sprites;
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_FARMHOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_FARMHOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_HOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_SHOPS),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_TREE),string(PERIOD_HIST));
}

// Townzone Edge
random_switch (FEAT_HOUSES, SELF, switch_house_hist_edge_sprites) {
	1: switch_large_wooden_farmhouse_01_snow;
	1: switch_large_wooden_house_01_snow;
	1: switch_large_wooden_house_02_snow;
	1: switch_old_villa_01_snow;
	1: switch_wooden_farmhouse_01_snow;
	1: switch_wooden_house_01_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_hist_edge_name) {
	dependent: switch_house_hist_edge_sprites;
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_FARMHOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_OLD_VILLA_01),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_FARMHOUSE),string(PERIOD_HIST));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_HOUSE),string(PERIOD_HIST));
}

switch(FEAT_HOUSES, SELF, switch_house_hist_sprites, town_zone) {
	//TOWNZONE_CENTRE:		switch_house_hist_centre_sprites;
	TOWNZONE_INNER_SUBURB:	switch_house_hist_inner_sprites;
	TOWNZONE_OUTER_SUBURB:	switch_house_hist_outer_sprites;
	TOWNZONE_OUTSKIRT:		switch_house_hist_outskirt_sprites;			
	switch_house_hist_edge_sprites;
}

switch(FEAT_HOUSES, SELF, switch_house_hist_name, town_zone) {
	//TOWNZONE_CENTRE:		switch_house_hist_centre_name;
	TOWNZONE_INNER_SUBURB:	switch_house_hist_inner_name;
	TOWNZONE_OUTER_SUBURB:	switch_house_hist_outer_name;
	TOWNZONE_OUTSKIRT:		switch_house_hist_outskirt_name;			
	switch_house_hist_edge_name;
}

// Construction Check
/*
switch (FEAT_HOUSES, SELF, switch_house_hist_con_check, 
	HouseOfficeGap() 				// Can't build within two tiles of Building Class 2 (Offices, Shops and Skyscrapers)
) {return;}	
*/
item(FEAT_HOUSES, item_house_hist){
	property {
		substitute: 				06;
		name: 						string(NAME_WOODEN_FARMHOUSE);
		population: 				20;										// Agreed to JPS
		accepted_cargos: 			[[PASS, 2],[MAIL, 1],[GOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				4;										// Increased due to only SE facing
		years_available: 			[1700,1869];							// Agreed to JPS
		minimum_lifetime: 			2;										
		availability_mask: 			[bitmask(								// Agreed to JPS
										//TOWNZONE_CENTRE,			// 4
										TOWNZONE_INNER_SUBURB,		// 3
										TOWNZONE_OUTER_SUBURB,		// 2
										TOWNZONE_OUTSKIRT,			// 1
										TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class:				0;
		
		}
	graphics {
		default: 					switch_house_hist_sprites;
		name:						switch_house_hist_name;
		//construction_check: 		switch_house_hist_con_check;
		cargo_production: 			func_produce(1,1);						// 
		//colour: 					rand_recolor_wooden_townhouses;
	}
}

// End house_hist
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/house_hist_dense.pnml" 1
// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_dense_wooden_sprites) {
	1: switch_dense_wooden_a;
	1: switch_dense_wooden_b;
	1: switch_dense_wooden_c;
	1: switch_dense_wooden_d;
	1: switch_dense_wooden_e;
	1: switch_dense_wooden_f;
	1: switch_dense_wooden_g;
	1: switch_dense_wooden_h;
	1: switch_dense_wooden_i;
	1: switch_dense_wooden_j;
	1: switch_dense_wooden_k;
	1: switch_dense_wooden_l;
	1: switch_dense_wooden_m;
	1: switch_dense_wooden_n;
	1: switch_dense_wooden_o;
	1: switch_dense_wooden_p;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_dense_wooden)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Checks
/*
switch (FEAT_HOUSES, SELF, switch_dense_wooden_con_check, 
	HouseOfficeGap() 				// Can't build within two tiles of Building Class 2 (Offices, Shops and Skyscrapers)
) {return;}	
*/
item(FEAT_HOUSES, item_house_hist_dense){
	property {
		substitute: 				06;
		name: 						string(NAME_DENSE_WOODEN);
		population: 				60;										// Agreed to JPS
		accepted_cargos: 			[[PASS, 6],[MAIL, 3],[GOOD, 6]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1700,1950];							// Agreed to JPS
		minimum_lifetime: 			2;										
		availability_mask: 			[bitmask(								// Agreed to JPS
										TOWNZONE_CENTRE,			// 4
										TOWNZONE_INNER_SUBURB		// 3
										//TOWNZONE_OUTER_SUBURB,	// 2
										//TOWNZONE_OUTSKIRT			// 1
										//TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class:				1;										// Reallcoated to BC1 since more like townhouse (and higher popn factor)
		
		}
	graphics {
		default: 					switch_dense_wooden_sprites;
		//construction_check: 		switch_dense_wooden_con_check;
		//destruction:				DestructionCheckHouses;
		cargo_production: 			func_produce(2,1);						// 
		colour: 					rand_recolor_dense_wooden;
	}
}

// End dense_wooden
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/house_1870_dense.pnml" 1
// Begin house_1870_dense

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_house_1870_dense_sprites) {
	1: switch_dense_wooden_a;
	1: switch_dense_wooden_b;
	1: switch_dense_wooden_c;
	1: switch_dense_wooden_d;
	1: switch_dense_wooden_e;
	1: switch_dense_wooden_f;
	1: switch_dense_wooden_g;
	1: switch_dense_wooden_h;
	1: switch_dense_wooden_i;
	1: switch_dense_wooden_j;
	1: switch_dense_wooden_k;
	1: switch_dense_wooden_l;
	1: switch_dense_wooden_m;
	1: switch_dense_wooden_n;
	1: switch_dense_wooden_o;
	1: switch_dense_wooden_p;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1870_dense_name) {
	dependent: switch_house_1870_dense_sprites;
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_DENSE_WOODEN),string(PERIOD_MEIJI));
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_house_1870_dense)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Checks
/*
switch (FEAT_HOUSES, SELF, switch_house_1870_dense_con_check, 
	HouseOfficeGap()
) {return;}	
*/
item(FEAT_HOUSES, item_house_1870_dense){
	property {
		substitute: 				06;
		name: 						string(NAME_TOWNHOUSES_01);
		population: 				40;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1870,1944];
		minimum_lifetime: 			2;
		availability_mask: 			[bitmask(								// Agreed to JPS
										TOWNZONE_CENTRE,			// 4
										TOWNZONE_INNER_SUBURB		// 3
										//TOWNZONE_OUTER_SUBURB,	// 2
										//TOWNZONE_OUTSKIRT,		// 1
										//TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class:				1;
		
		}
	graphics {
		default: 					switch_house_1870_dense_sprites;
		name:						switch_house_1870_dense_name;
		//construction_check: 		switch_house_1870_dense_con_check;
		//destruction:				DestructionCheckHouses;
		cargo_production: 			func_produce(2,1);
		colour: 					rand_recolor_house_1870_dense;
	}
}

// End townhouses
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/house_1870.pnml" 1
// Begin house_1870

// Townzone Inner Suburb
random_switch (FEAT_HOUSES, SELF, switch_house_1870_inner_sprites) {
	1: switch_naganuma_house_snow;
	1: switch_nishikawa_house_snow;
	1: switch_two_wooden_houses_01_snow;
	1: switch_two_wooden_houses_02_snow;
	1: switch_two_wooden_houses_03_snow;
	1: switch_wooden_townhouses_01_snow;
	1: switch_wooden_townhouses_02_snow;
	1: switch_wooden_townhouses_03_snow;
	1: switch_wooden_townhouses_04_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1870_inner_name) {
	dependent: switch_house_1870_inner_sprites;
	1: string(STR_CONCAT_2, string(NAME_NAGANUMA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_NISHIKAWA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_SHOPS),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_TREE),string(PERIOD_MEIJI));
}

// Townzone Outer Suburb
random_switch (FEAT_HOUSES, SELF, switch_house_1870_outer_sprites) {
	1: switch_naganuma_house_snow;
	1: switch_nishikawa_house_snow;
	1: switch_two_wooden_houses_01_snow;
	1: switch_two_wooden_houses_02_snow;
	1: switch_two_wooden_houses_03_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1870_outer_name) {
	dependent: switch_house_1870_outer_sprites;
	1: string(STR_CONCAT_2, string(NAME_NAGANUMA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_NISHIKAWA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_TWO_WOODEN_TOWNHOUSES_TREE),string(PERIOD_MEIJI));
}

// Townzone Outskirts
random_switch (FEAT_HOUSES, SELF, switch_house_1870_outskirt_sprites) {
	1: switch_large_wooden_farmhouse_01_snow;
	1: switch_large_wooden_house_01_snow;
	1: switch_large_wooden_house_02_snow;
	1: switch_naganuma_house_snow;
	1: switch_nishikawa_house_snow;
	1: switch_wooden_farmhouse_01_snow;
	1: switch_wooden_house_01_snow;
	1: switch_wooden_townhouses_01_snow;
	1: switch_wooden_townhouses_02_snow;
	1: switch_wooden_townhouses_03_snow;
	1: switch_wooden_townhouses_04_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1870_outskirt_name) {
	dependent: switch_house_1870_outskirt_sprites;
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_FARMHOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_NAGANUMA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_NISHIKAWA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_FARMHOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_SHOPS),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_TOWNHOUSES_TREE),string(PERIOD_MEIJI));
}

// Townzone Edge
random_switch (FEAT_HOUSES, SELF, switch_house_1870_edge_sprites) {
	1: switch_large_wooden_farmhouse_01_snow;
	1: switch_large_wooden_house_01_snow;
	1: switch_large_wooden_house_02_snow;
	1: switch_naganuma_house_snow;
	1: switch_nishikawa_house_snow;
	1: switch_old_villa_01_snow;
	1: switch_wooden_farmhouse_01_snow;
	1: switch_wooden_house_01_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1870_edge_name) {
	dependent: switch_house_1870_edge_sprites;
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_FARMHOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_LARGE_WOODEN_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_NAGANUMA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_NISHIKAWA_HOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_OLD_VILLA_01),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_FARMHOUSE),string(PERIOD_MEIJI));
	1: string(STR_CONCAT_2, string(NAME_WOODEN_HOUSE),string(PERIOD_MEIJI));
}

switch(FEAT_HOUSES, SELF, switch_house_1870_sprites, town_zone) {
	TOWNZONE_INNER_SUBURB:	switch_house_1870_inner_sprites;
	TOWNZONE_OUTER_SUBURB:	switch_house_1870_outer_sprites;
	TOWNZONE_OUTSKIRT:		switch_house_1870_outskirt_sprites;
	switch_house_1870_edge_sprites;
}

switch(FEAT_HOUSES, SELF, switch_house_1870_name, town_zone) {
	TOWNZONE_INNER_SUBURB:	switch_house_1870_inner_name;
	TOWNZONE_OUTER_SUBURB:	switch_house_1870_outer_name;
	TOWNZONE_OUTSKIRT:		switch_house_1870_outskirt_name;
	switch_house_1870_edge_name;
}


// Construction Check
/*
switch (FEAT_HOUSES, SELF, switch_house_1870_con_check, 
	HouseOfficeGap() 				// Can't build within two tiles of Building Class 2 (Offices, Shops and Skyscrapers)
	) {return;}	
*/

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_house_1870)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

item(FEAT_HOUSES, item_house_1870){
	property {
		substitute: 				26;
		name: 						string(NAME_NISHIKAWA_HOUSE);
		population: 				20;	
		accepted_cargos: 			[[PASS, 2],[MAIL, 1],[FOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1870,1944];
		minimum_lifetime: 			2;
		availability_mask: 			[bitmask(								// Agreed to JPS
										//TOWNZONE_CENTRE,			// 4
										TOWNZONE_INNER_SUBURB,		// 3
										TOWNZONE_OUTER_SUBURB,		// 2
										TOWNZONE_OUTSKIRT,			// 1
										TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class: 			0;
		
		}
	graphics {
		default: 					switch_house_1870_sprites;
		name:						switch_house_1870_name;
		//construction_check: 		switch_house_1870_con_check;
		cargo_production: 			func_produce(2,1);
		colour: 					rand_recolor_house_1870;
	}
}

// End house_1870
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/house_1945_dense.pnml" 1
// Begin house_1945_dense

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_house_1945_dense_central_sprites) {
	1: switch_townhouses_01_a_snow;
	1: switch_townhouses_01_b_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1945_dense_central_name) {
	dependent: switch_house_1945_dense_central_sprites;
	1: string(STR_CONCAT_2, string(NAME_TOWNHOUSES_01),string(PERIOD_MODERN));
	1: string(STR_CONCAT_2, string(NAME_TOWNHOUSES_01),string(PERIOD_MODERN));
}

random_switch (FEAT_HOUSES, SELF, switch_house_1945_dense_other_sprites) {
	4: switch_townhouses_01_a_snow;
	4: switch_townhouses_01_b_snow;
	1: switch_townhouses_02_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1945_dense_other_name) {
	dependent: switch_house_1945_dense_other_sprites;
	4: string(STR_CONCAT_2, string(NAME_TOWNHOUSES_01),string(PERIOD_MODERN));
	4: string(STR_CONCAT_2, string(NAME_TOWNHOUSES_01),string(PERIOD_MODERN));
	1: string(STR_CONCAT_2, string(NAME_TOWNHOUSES_02),string(PERIOD_MODERN));
}

switch(FEAT_HOUSES, SELF, switch_house_1945_dense_sprites, town_zone) {
	TOWNZONE_CENTRE:			switch_house_1945_dense_central_sprites;
	TOWNZONE_INNER_SUBURB:		switch_house_1945_dense_central_sprites;
	switch_house_1945_dense_other_sprites;
}

switch(FEAT_HOUSES, SELF, switch_house_1945_dense_name, town_zone) {
	TOWNZONE_CENTRE:			switch_house_1945_dense_central_name;
	TOWNZONE_INNER_SUBURB:		switch_house_1945_dense_central_name;
	switch_house_1945_dense_other_name;
}


// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_house_1945_dense)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Checks

switch (FEAT_HOUSES, SELF, switch_house_1945_dense_con_check, 
	HouseOfficeGap() && 			// Can't build within two tiles of Building Class 2 (Offices, Shops and Skyscrapers)
	!FuncServicePASS() 				// Builds where there is no Passenger service
) {return;}	


item(FEAT_HOUSES, item_house_1945_dense){
	property {
		substitute: 				06;
		name: 						string(NAME_TOWNHOUSES_01);
		population: 				40;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1945,0xFFFF];
		minimum_lifetime: 			2;
		availability_mask: 			[bitmask(								// Agreed to JPS
										TOWNZONE_CENTRE,			// 4
										TOWNZONE_INNER_SUBURB,		// 3
										TOWNZONE_OUTER_SUBURB,		// 2
										TOWNZONE_OUTSKIRT			// 1
										//TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class:				1;
		
		}
	graphics {
		default: 					switch_house_1945_dense_sprites;
		name:						switch_house_1945_dense_name;
		construction_check: 		switch_house_1945_dense_con_check;
		cargo_production: 			func_produce(4,1);
		colour: 					rand_recolor_house_1945_dense;
	}
}

// End townhouses
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/houses/house_1945.pnml" 1
// Begin nishikawa_house

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_house_1945_other_sprites) {
	10: switch_naganuma_house_snow;
	10: switch_nishikawa_house_snow;
	1: switch_shotengai_01_new_sprites;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1945_other_name) {
	dependent: switch_house_1945_other_sprites;
	10: string(STR_CONCAT_2, string(NAME_NAGANUMA_HOUSE),string(PERIOD_MODERN));
	10: string(STR_CONCAT_2, string(NAME_NISHIKAWA_HOUSE),string(PERIOD_MODERN));
	1: string(STR_CONCAT_2, string(NAME_SHOTENGAI_01),string(PERIOD_MODERN));
}

random_switch (FEAT_HOUSES, SELF, switch_house_1945_edge_sprites) {
	10: switch_naganuma_house_snow;
	10: switch_nishikawa_house_snow;
	1: switch_old_villa_01_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_house_1945_edge_name) {
	dependent: switch_house_1945_edge_sprites;
	10: string(STR_CONCAT_2, string(NAME_NAGANUMA_HOUSE),string(PERIOD_MODERN));
	10: string(STR_CONCAT_2, string(NAME_NISHIKAWA_HOUSE),string(PERIOD_MODERN));
	1: string(STR_CONCAT_2, string(NAME_OLD_VILLA_01),string(PERIOD_MODERN));
}

switch(FEAT_HOUSES, SELF, switch_house_1945_sprites, town_zone) {
	TOWNZONE_EDGE:			switch_house_1945_edge_sprites;
	switch_house_1945_other_sprites;
}

switch(FEAT_HOUSES, SELF, switch_house_1945_name, town_zone) {
	TOWNZONE_EDGE:			switch_house_1945_edge_name;
	switch_house_1945_other_name;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_house_1945_con_check, 
	HouseOfficeGap() &&				// Can't build within two tiles of Building Class 2 (Offices, Shops and Skyscrapers)
	!FuncServicePASS() 
	) {return;}	

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_house_1945)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

item(FEAT_HOUSES, item_house_1945){
	property {
		substitute: 				26;
		name: 						string(NAME_NISHIKAWA_HOUSE);
		population: 				20;	
		accepted_cargos: 			[[PASS, 2],[MAIL, 1],[FOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1945,0xFFFF];
		minimum_lifetime: 			2;
		availability_mask: 			[bitmask(								// Agreed to JPS
										//TOWNZONE_CENTRE,			// 4
										//TOWNZONE_INNER_SUBURB,	// 3
										TOWNZONE_OUTER_SUBURB,		// 2
										TOWNZONE_OUTSKIRT,			// 1
										TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class: 			0;
		
		}
	graphics {
		default: 					switch_house_1945_sprites;
		name:						switch_house_1945_name;
		construction_check: 		switch_house_1945_con_check;
		cargo_production: 			func_produce(2,1);
		colour: 					rand_recolor_house_1945;
	}
}

// End nishikawa_house
# 1 "JPplusHousesResidential.pnml" 4

// Apartments

// Postwar Apartments
# 1 "src/houses/apartments/apartments_post_3L4L.pnml" 1
// Begin Apartments_post_3L4L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_post_3L4L_sprites) {
	1: switch_hayashi_3L_snow;
	1: switch_hayashi_4L_snow;
	10: switch_hirano_3L_snow;
	10: switch_hirano_4L_snow;
	1: switch_hirata_3L_snow;
	1: switch_hirata_4L_snow;
	1: switch_kimura_3L_snow;
	1: switch_kimura_4L_snow;
	10: switch_mori_3L_snow;
	10: switch_mori_4L_snow;
	1: switch_murakami_3L_snow;
	1: switch_murakami_4L_snow;
	10: switch_nakamura_3L_snow;
	10: switch_nakamura_4L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_post_3L4L_name) {
	dependent: switch_apartments_post_3L4L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_POSTWAR),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_POSTWAR),string(L4));
	10: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_POSTWAR),string(L3));
	10: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_POSTWAR),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_POSTWAR),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_POSTWAR),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_POSTWAR),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_POSTWAR),string(L4));
	10: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_POSTWAR),string(L3));
	10: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_POSTWAR),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_POSTWAR),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_POSTWAR),string(L4));
	10: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L3));
	10: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L4));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_post_3L4L_colors) {
	dependent: switch_apartments_post_3L4L_sprites;	
	
	1: switch_hayashi_colors;
	1: switch_hayashi_colors;
	10: switch_hirano_colors;
	10: switch_hirano_colors;
	1: switch_hirata_colors;
	1: switch_hirata_colors;
	1: switch_kimura_colors;
	1: switch_kimura_colors;
	10: switch_mori_colors;
	10: switch_mori_colors;
	1: switch_murakami_colors;
	1: switch_murakami_colors;
	10: switch_nakamura_colors;
	10: switch_nakamura_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_post_3L4L_con_check, 	
	FuncServicePASS() 				// Only build within the catchment area of a station which received passengers this month or last month
) {return;}	

item(FEAT_HOUSES, item_apartments_post_3L4L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_HARADA);
		population: 				75;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1945,1959];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES, ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;		
		}
	graphics {
		name:						switch_apartments_post_3L4L_name;
		default: 					switch_apartments_post_3L4L_sprites;
		construction_check: 		switch_apartments_post_3L4L_con_check;
		cargo_production: 			func_produce(6,2);
		colour: 					switch_apartments_post_3L4L_colors;
	}
}

// End apartments_post_3L4L
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_post_5L6L.pnml" 1
// Begin Apartments_post_5L6L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_post_5L6L_sprites) {
	1: switch_fukuda_6L_snow;
	1: switch_hayashi_6L_snow;
	1: switch_hayashi_5L_snow;
	1: switch_hirano_6L_snow;
	1: switch_hirano_5L_snow;
	1: switch_hirata_6L_snow;
	1: switch_hirata_5L_snow;
	1: switch_kimura_6L_snow;
	1: switch_kimura_5L_snow;
	1: switch_mori_6L_snow;
	1: switch_mori_5L_snow;
	1: switch_murakami_6L_snow;
	1: switch_murakami_5L_snow;
	1: switch_nakamura_6L_snow;
	1: switch_nakamura_5L_snow;
	1: switch_nakayama_ashita_snow;
	1: switch_nakayama_dual_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_post_5L6L_name) {
	dependent: switch_apartments_post_5L6L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_FUKUDA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAYAMA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAYAMA),string(PERIOD_POSTWAR),string(L6));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_post_5L6L_colors) {
	dependent: switch_apartments_post_5L6L_sprites;	
	
	1: switch_fukuda_colors;
	1: switch_hayashi_colors;
	1: switch_hayashi_colors;
	1: switch_hirano_colors;
	1: switch_hirano_colors;
	1: switch_hirata_colors;
	1: switch_hirata_colors;
	1: switch_kimura_colors;
	1: switch_kimura_colors;
	1: switch_mori_colors;
	1: switch_mori_colors;
	1: switch_murakami_colors;
	1: switch_murakami_colors;
	1: switch_nakamura_colors;
	1: switch_nakamura_colors;
	1: switch_nakayama_colors;
	1: switch_nakayama_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_post_5L6L_con_check, 	
	FuncServicePASS() &&				// Only build within the catchment area of a station which received passengers this month or last month
	PopOver5L6LResidentialThreshold()	// Only build if above population threshold
) {return;}	

item(FEAT_HOUSES, item_apartments_post_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_HARADA);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1945,1959];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;		
		}
	graphics {
		name:						switch_apartments_post_5L6L_name;
		default: 					switch_apartments_post_5L6L_sprites;
		construction_check: 		switch_apartments_post_5L6L_con_check;
		cargo_production: 			func_produce(10,4);
		colour: 					switch_apartments_post_5L6L_colors;
	}
}

// End apartments_post_5L6L
# 1 "JPplusHousesResidential.pnml" 4

// Economic Boom Period Apartments
# 1 "src/houses/apartments/apartments_boom_7L8L.pnml" 1
// Begin apartments_boom_7L8L_21

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_7L8L_sprites) {
	1: switch_fukuda_8L_snow;
	1: switch_fukuda_7L_snow;
	1: switch_harada_8L_snow;
	1: switch_harada_7L_snow;
	1: switch_kono_8L_snow;
	1: switch_kono_7L_snow;
	1: switch_shibata_8L_snow;
	1: switch_shibata_7L_snow;
	1: switch_tetsui_8L_snow;
	1: switch_tetsui_7L_snow;
	1: switch_toki_8L_snow;
	1: switch_toki_7L_snow;
	1: switch_tokyosaka_snow;
	1: switch_yanagi_8L_snow;
	1: switch_yanagi_7L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_7L8L_name) {
	dependent: switch_apartments_boom_7L8L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_FUKUDA),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_FUKUDA),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_BOOM),string(L7));
	1: string(STR_CONCAT_2, string(NAME_APARTMENTS_TOKYO),string(PERIOD_BOOM));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_BOOM),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_BOOM),string(L7));
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_switch_recolor_apartments_boom_7L8L)
	{
		//1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_boom_7L8L_con_check, 	
	FuncServicePASS() &&				// Only build within the catchment area of a station which received passengers this month or last month
	PopOver7L8LResidentialThreshold() 	// Only build if above population threshold
	) {return;}	

item(FEAT_HOUSES, item_apartments_boom_7L8L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				125;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1960,1979];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_boom_7L8L_name;
		default: 					switch_apartments_boom_7L8L_sprites;
		construction_check: 		switch_apartments_boom_7L8L_con_check;
		cargo_production: 			func_produce(14,5);
		colour: 					rand_switch_recolor_apartments_boom_7L8L;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_boom_5L6L.pnml" 1
// Begin apartments_boom_5L6L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_sprites) {
	//1: switch_hayashi_6L_snow;
	//1: switch_hayashi_5L_snow;
	//1: switch_harada_6L_snow;
	1: switch_hirano_6L_snow;
	1: switch_hirano_5L_snow;
	//1: switch_hirata_6L_snow;
	//1: switch_hirata_5L_snow;
	//1: switch_kimura_6L_snow;
	//1: switch_kimura_5L_snow;
	//1: switch_kono_6L_snow;
	1: switch_mori_5L_snow;
	1: switch_mori_6L_snow;
	//1: switch_murakami_6L_snow;
	//1: switch_murakami_5L_snow;
	1: switch_nakamura_6L_snow;
	1: switch_nakamura_5L_snow;
	1: switch_nakayama_ashita_snow;
	1: switch_nakayama_dual_snow;
	//1: switch_shibata_6L_snow;
	//1: switch_shibata_5L_snow;
	//1: switch_tetsui_6L_snow;
	//1: switch_tetsui_5L_snow;
	//1: switch_toki_6L_snow;
	//1: switch_toki_5L_snow;
	3: switch_tokyosaka_snow;
	//1: switch_yanagi_6L_snow;
	//1: switch_yanagi_5L_snow;
	//1: switch_yano_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_name) {
	dependent: switch_apartments_boom_5L6L_sprites;
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_BOOM),string(L5));*/
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAYAMA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAYAMA),string(PERIOD_POSTWAR),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_BOOM),string(L5));
	3: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKYO),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANO),string(PERIOD_BOOM),string(L6));*/
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_colors) {
	dependent: switch_apartments_boom_5L6L_sprites;	
	//1: switch_hayashi_colors;
	//1: switch_hayashi_colors;
	//1: switch_harada_colors;
	1: switch_hirano_colors;
	1: switch_hirano_colors;
	//1: switch_hirata_colors;
	//1: switch_hirata_colors;
	//1: switch_kimura_colors;
	//1: switch_kimura_colors;
	//1: switch_kono_colors;
	1: switch_mori_colors;
	1: switch_mori_colors;
	//1: switch_murakami_colors;
	//1: switch_murakami_colors;
	1: switch_nakamura_colors;
	1: switch_nakamura_colors;
	1: switch_nakayama_colors;
	1: switch_nakayama_colors;
	//1: switch_shibata_colors;
	//1: switch_shibata_colors;
	//1: switch_tetsui_colors;
	//1: switch_tetsui_colors;
	//1: switch_toki_colors;
	//1: switch_toki_colors;
	3: switch_tokyosaka_colors;
	//1: switch_yanagi_colors;
	//1: switch_yanagi_colors;
	//1: switch_yano_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_con_check, 	
	FuncServicePASS() &&				// Only build within the catchment area of a station which received passengers this month or last month
	PopOver5L6LResidentialThreshold()	// Only build if above population threshold
	) {return;}	

item(FEAT_HOUSES, item_apartments_boom_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				2;
		years_available: 			[1960,1979];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES & ~bitmask(TOWNZONE_EDGE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_boom_5L6L_name;
		default: 					switch_apartments_boom_5L6L_sprites;
		construction_check: 		switch_apartments_boom_5L6L_con_check;
		cargo_production: 			func_produce(10,4);
		colour: 					switch_apartments_boom_5L6L_colors;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_boom_3L4L.pnml" 1
// Begin Apartments_boom_3L4L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_3L4L_sprites) {
	//1: switch_hayashi_3L_snow;
	//1: switch_hayashi_4L_snow;
	1: switch_hirano_3L_snow;
	1: switch_hirano_4L_snow;
	//1: switch_hirata_3L_snow;
	//1: switch_hirata_4L_snow;
	//1: switch_kimura_3L_snow;
	//1: switch_kimura_4L_snow;
	1: switch_mori_3L_snow;
	1: switch_mori_4L_snow;
	//1: switch_murakami_3L_snow;
	//1: switch_murakami_4L_snow;
	1: switch_nakamura_3L_snow;
	1: switch_nakamura_4L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_3L4L_name) {
	dependent: switch_apartments_boom_3L4L_sprites;
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_BOOM),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_BOOM),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_BOOM),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_BOOM),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_BOOM),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_BOOM),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_BOOM),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_BOOM),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_BOOM),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_BOOM),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_BOOM),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_BOOM),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_BOOM),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_BOOM),string(L4));
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_apartments_boom_3L4L)
	{
		//1: PALETTE_CC_RED;			// too in your face
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;			// too silly
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;			// nah
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_boom_3L4L_con_check, 	
	FuncServicePASS() &&					// Only build within the catchment area of a station which received passengers this month or last month
	((PopOver5L6LResidentialThreshold()	&& 	(town_zone == TOWNZONE_OUTER_SUBURB || town_zone == TOWNZONE_OUTSKIRT || town_zone == TOWNZONE_EDGE))
	|| // Above next threshold AND not in the central zones, OR, not above the next Threshold
	!PopOver5L6LResidentialThreshold())
) {return;}	

item(FEAT_HOUSES, item_apartments_boom_3L4L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_HARADA);
		population: 				75;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				3;
		years_available: 			[1960,1979];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES, ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;		
		}
	graphics {
		name:						switch_apartments_boom_3L4L_name;
		default: 					switch_apartments_boom_3L4L_sprites;
		construction_check: 		switch_apartments_boom_3L4L_con_check;
		cargo_production: 			func_produce(6,2);
		colour: 					rand_recolor_apartments_boom_3L4L;
	}
}

// End apartments_boom_3L4L
# 1 "JPplusHousesResidential.pnml" 4

// Late 20th Century Apartments
# 1 "src/houses/apartments/apartments_late_9L10L.pnml" 1
// Begin apartments_late_9L10L_21

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_9L10L_sprites) {
	1: switch_fukuda_9L_snow;
	1: switch_harada_9L_snow;
	1: switch_kono_9L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_late_9L10L_name) {
	dependent: switch_apartments_late_9L10L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_FUKUDA),string(PERIOD_LATE),string(L9));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_LATE),string(L9));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_LATE),string(L9));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_9L10L_colors) {
	dependent: switch_apartments_late_9L10L_sprites;	
	1: switch_fukuda_colors;
	1: switch_harada_colors;
	1: switch_kono_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_late_9L10L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	PopOver9L10LResidentialThreshold()		// Cities only
	) {return;}	

item(FEAT_HOUSES, item_apartments_late_9L10L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				2;
		years_available: 			[1980,1999];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_late_9L10L_name;
		default: 					switch_apartments_late_9L10L_sprites;
		construction_check: 		switch_apartments_late_9L10L_con_check;
		cargo_production: 			func_produce(18,6);
		colour: 					switch_apartments_late_9L10L_colors;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_late_7L8L.pnml" 1
// Begin apartments_late_7L8L_21

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_7L8L_sprites) {
	1: switch_fukuda_8L_snow;
	1: switch_fukuda_7L_snow;
	1: switch_harada_8L_snow;
	1: switch_harada_7L_snow;
	1: switch_kono_8L_snow;
	1: switch_kono_7L_snow;
	1: switch_shibata_8L_snow;
	1: switch_shibata_7L_snow;
	1: switch_tetsui_8L_snow;
	1: switch_tetsui_7L_snow;
	1: switch_toki_8L_snow;
	1: switch_toki_7L_snow;
	1: switch_yanagi_8L_snow;
	1: switch_yanagi_7L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_late_7L8L_name) {
	dependent: switch_apartments_late_7L8L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_FUKUDA),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_FUKUDA),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_LATE),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_LATE),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_LATE),string(L7));
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_7L8L_colors) {
		dependent: switch_apartments_late_7L8L_sprites;
		1: switch_fukuda_colors;
		1: switch_fukuda_colors;
		1: switch_harada_colors;
		1: switch_harada_colors;
		1: switch_kono_colors;
		1: switch_kono_colors;
		1: switch_shibata_colors;
		1: switch_shibata_colors;
		1: switch_tetsui_colors;
		1: switch_tetsui_colors;
		1: switch_toki_colors;
		1: switch_toki_colors;
		1: switch_yanagi_colors;
		1: switch_yanagi_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_late_7L8L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	PopOver7L8LResidentialThreshold()		// Cities only
	) {return;}	

item(FEAT_HOUSES, item_apartments_late_7L8L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				125;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				3;
		years_available: 			[1980,1999];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB,TOWNZONE_OUTER_SUBURB), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_late_7L8L_name;
		default: 					switch_apartments_late_7L8L_sprites;
		construction_check: 		switch_apartments_late_7L8L_con_check;
		cargo_production: 			func_produce(14,5);
		colour: 					switch_apartments_late_7L8L_colors;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_late_5L6L.pnml" 1
// Begin apartments_late_5L6L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_5L6L_sprites) {
	1: switch_hayashi_6L_snow;
	1: switch_hayashi_5L_snow;
	1: switch_harada_6L_snow;
	1: switch_hirata_6L_snow;
	1: switch_hirata_5L_snow;
	1: switch_kimura_6L_snow;
	1: switch_kimura_5L_snow;
	1: switch_kono_6L_snow;
	1: switch_murakami_6L_snow;
	1: switch_murakami_5L_snow;
	1: switch_shibata_6L_snow;
	1: switch_shibata_5L_snow;
	1: switch_tetsui_6L_snow;
	1: switch_tetsui_5L_snow;
	1: switch_toki_6L_snow;
	1: switch_toki_5L_snow;
	5: switch_tokyosaka_snow;
	1: switch_yanagi_6L_snow;
	1: switch_yanagi_5L_snow;
	1: switch_yano_snow;	
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_late_5L6L_name) {
	dependent: switch_apartments_late_5L6L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_LATE),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_LATE),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_LATE),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_LATE),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_LATE),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_LATE),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_LATE),string(L5));
	5: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKYO),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_LATE),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_LATE),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANO),string(PERIOD_LATE),string(L6));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_5L6L_colors) {
	dependent: switch_apartments_late_5L6L_sprites;	
	1: switch_hayashi_colors;
	1: switch_hayashi_colors;
	1: switch_harada_colors;
	1: switch_hirata_colors;
	1: switch_hirata_colors;
	1: switch_kimura_colors;
	1: switch_kimura_colors;
	1: switch_kono_colors;
	1: switch_murakami_colors;
	1: switch_murakami_colors;
	1: switch_shibata_colors;
	1: switch_shibata_colors;
	1: switch_tetsui_colors;
	1: switch_tetsui_colors;
	1: switch_toki_colors;
	1: switch_toki_colors;
	5: switch_tokyosaka_colors;
	1: switch_yanagi_colors;
	1: switch_yanagi_colors;
	1: switch_yano_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_late_5L6L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	PopOver5L6LResidentialThreshold()	
	) {return;}	

item(FEAT_HOUSES, item_apartments_late_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				6;
		years_available: 			[1980,1999];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES & ~bitmask(TOWNZONE_EDGE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_late_5L6L_name;
		default: 					switch_apartments_late_5L6L_sprites;
		construction_check: 		switch_apartments_late_5L6L_con_check;
		cargo_production: 			func_produce(10,4);
		colour: 					switch_apartments_late_5L6L_colors;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_late_3L4L.pnml" 1
// Begin Apartments_late_3L4L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_3L4L_sprites) {
	//1: switch_hayashi_3L_snow;
	//1: switch_hayashi_4L_snow;
	1: switch_hirano_3L_snow;
	1: switch_hirano_4L_snow;
	//1: switch_hirata_3L_snow;
	//1: switch_hirata_4L_snow;
	//1: switch_kimura_3L_snow;
	//1: switch_kimura_4L_snow;
	1: switch_mori_3L_snow;
	1: switch_mori_4L_snow;
	//1: switch_murakami_3L_snow;
	//1: switch_murakami_4L_snow;
	1: switch_nakamura_3L_snow;
	1: switch_nakamura_4L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_late_3L4L_name) {
	dependent: switch_apartments_late_3L4L_sprites;
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_LATE),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_LATE),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_LATE),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_LATE),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_LATE),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_LATE),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_LATE),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_LATE),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_LATE),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_LATE),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_LATE),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_LATE),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_LATE),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_LATE),string(L4));
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_apartments_late_3L4L_colors) {
	dependent: switch_apartments_late_3L4L_sprites;
	
	//1: switch_hayashi_colors;
	//1: switch_hayashi_colors;
	1: switch_hirano_colors;
	1: switch_hirano_colors;
	//1: switch_hirata_colors;
	//1: switch_hirata_colors;
	//1: switch_kimura_colors;
	//1: switch_kimura_colors;
	1: switch_mori_colors;
	1: switch_mori_colors;
	//1: switch_murakami_colors;
	//1: switch_murakami_colors;
	1: switch_nakamura_colors;
	1: switch_nakamura_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_late_3L4L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	((PopOver5L6LResidentialThreshold() && town_zone == TOWNZONE_EDGE) || !PopOver5L6LResidentialThreshold())
) {return;}	

item(FEAT_HOUSES, item_apartments_late_3L4L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_HARADA);
		population: 				75;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				9;
		years_available: 			[1980,1999];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES, ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;		
		}
	graphics {
		name:						switch_apartments_late_3L4L_name;
		default: 					switch_apartments_late_3L4L_sprites;
		construction_check: 		switch_apartments_late_3L4L_con_check;
		cargo_production: 			func_produce(6,2);
		colour: 					switch_apartments_late_3L4L_colors;
	}
}

// End apartments_late_3L4L
# 1 "JPplusHousesResidential.pnml" 4

// Post Y2K Apartments
# 1 "src/houses/apartments/apartments_y2kp_9L10L.pnml" 1
// Begin apartments_y2kp_9L10L_21

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_9L10L_sprites) {
	1: switch_harada_9L_snow;
	1: switch_kaneko_10L_snow;
	1: switch_kaneko_9L_snow;
	1: switch_kono_9L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_9L10L_name) {
	dependent: switch_apartments_y2kp_9L10L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_POSTY2K),string(L9));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KANEKO),string(PERIOD_POSTY2K),string(L10));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KANEKO),string(PERIOD_POSTY2K),string(L9));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_POSTY2K),string(L9));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_9L10L_colors) {
	dependent: switch_apartments_y2kp_9L10L_sprites;	
	1: switch_harada_colors;
	1: switch_kaneko_colors;
	1: switch_kaneko_colors;
	1: switch_kono_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_9L10L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	PopOver9L10LResidentialThreshold()		// Cities only
	) {return;}	

item(FEAT_HOUSES, item_apartments_y2kp_9L10L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				2;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_y2kp_9L10L_name;
		default: 					switch_apartments_y2kp_9L10L_sprites;
		construction_check: 		switch_apartments_y2kp_9L10L_con_check;
		cargo_production: 			func_produce(18,6);
		colour: 					switch_apartments_y2kp_9L10L_colors;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_y2kp_7L8L.pnml" 1
// Begin apartments_y2kp_7L8L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_7L8L_sprites) {
	1: switch_harada_8L_snow;
	1: switch_harada_7L_snow;
	1: switch_kaneko_8L_snow;
	1: switch_kaneko_7L_snow;
	1: switch_kono_8L_snow;
	1: switch_kono_7L_snow;
	1: switch_shibata_8L_snow;
	1: switch_shibata_7L_snow;
	1: switch_tetsui_8L_snow;
	1: switch_tetsui_7L_snow;
	1: switch_toki_8L_snow;
	1: switch_toki_7L_snow;
	1: switch_yanagi_8L_snow;
	1: switch_yanagi_7L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_7L8L_name) {
	dependent: switch_apartments_y2kp_7L8L_sprites;
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_POSTY2K),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_POSTY2K),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KANEKO),string(PERIOD_POSTY2K),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KANEKO),string(PERIOD_POSTY2K),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_POSTY2K),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_POSTY2K),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_POSTY2K),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_POSTY2K),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_POSTY2K),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_POSTY2K),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_POSTY2K),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_POSTY2K),string(L7));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_POSTY2K),string(L8));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_POSTY2K),string(L7));
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_7L8L_colors)
	{
	dependent: switch_apartments_y2kp_7L8L_sprites;	
	1: switch_harada_colors;
	1: switch_harada_colors;
	1: switch_kaneko_colors;
	1: switch_kaneko_colors;
	1: switch_kono_colors;
	1: switch_kono_colors;
	1: switch_shibata_colors;
	1: switch_shibata_colors;
	1: switch_tetsui_colors;
	1: switch_tetsui_colors;
	1: switch_toki_colors;
	1: switch_toki_colors;
	1: switch_yanagi_colors;
	1: switch_yanagi_colors;	
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_7L8L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	PopOver7L8LResidentialThreshold()		// Cities only
	) {return;}	

item(FEAT_HOUSES, item_apartments_y2kp_7L8L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				3;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE,TOWNZONE_INNER_SUBURB,TOWNZONE_OUTER_SUBURB), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_y2kp_7L8L_name;
		default: 					switch_apartments_y2kp_7L8L_sprites;
		construction_check: 		switch_apartments_y2kp_7L8L_con_check;
		cargo_production: 			func_produce(13,4);
		colour: 					switch_apartments_y2kp_7L8L_colors;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_y2kp_5L6L.pnml" 1
// Begin apartments_y2kp_5L6L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_sprites) {
	1: switch_hayashi_6L_snow;
	1: switch_hayashi_5L_snow;
	1: switch_hirata_6L_snow;
	1: switch_hirata_5L_snow;
	1: switch_kimura_6L_snow;
	1: switch_kimura_5L_snow;
	1: switch_murakami_6L_snow;
	1: switch_murakami_5L_snow;
	1: switch_shibata_6L_snow;
	1: switch_shibata_5L_snow;
	1: switch_tetsui_6L_snow;
	1: switch_tetsui_5L_snow;
	1: switch_toki_6L_snow;
	1: switch_toki_5L_snow;
	5: switch_tokyosaka_snow;
	1: switch_yanagi_6L_snow;
	1: switch_yanagi_5L_snow;
	1: switch_yano_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_name) {
	dependent: switch_apartments_y2kp_5L6L_sprites;
	1: string(NAME_APARTMENTS_HAYASHI);
	1: string(NAME_APARTMENTS_HAYASHI);
	1: string(NAME_APARTMENTS_HIRATA);
	1: string(NAME_APARTMENTS_HIRATA);
	1: string(NAME_APARTMENTS_KIMURA);
	1: string(NAME_APARTMENTS_KIMURA);
	1: string(NAME_APARTMENTS_MURAKAMI);
	1: string(NAME_APARTMENTS_MURAKAMI);
	1: string(NAME_APARTMENTS_SHIBATA);
	1: string(NAME_APARTMENTS_SHIBATA);
	1: string(NAME_APARTMENTS_TETSUI);
	1: string(NAME_APARTMENTS_TETSUI);
	1: string(NAME_APARTMENTS_TOKI);
	1: string(NAME_APARTMENTS_TOKI);
	5: string(NAME_APARTMENTS_TOKYO);
	1: string(NAME_APARTMENTS_YANAGI);
	1: string(NAME_APARTMENTS_YANAGI);
	1: string(NAME_APARTMENTS_YANO);
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_colors) {
	dependent: switch_apartments_y2kp_5L6L_sprites;
	1: switch_hayashi_colors;
	1: switch_hayashi_colors;
	1: switch_hirata_colors;
	1: switch_hirata_colors;
	1: switch_kimura_colors;
	1: switch_kimura_colors;
	1: switch_kono_colors;
	1: switch_murakami_colors;
	1: switch_murakami_colors;
	1: switch_shibata_colors;
	1: switch_shibata_colors;
	1: switch_tetsui_colors;
	1: switch_tetsui_colors;
	1: switch_toki_colors;
	1: switch_toki_colors;
	5: switch_tokyosaka_colors;
	1: switch_yanagi_colors;
	1: switch_yanagi_colors;
	1: switch_yano_colors;	
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	PopOver5L6LResidentialThreshold()	
	) {return;}	

item(FEAT_HOUSES, item_apartments_y2kp_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				6;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES & ~bitmask(TOWNZONE_EDGE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_y2kp_5L6L_name;
		default: 					switch_apartments_y2kp_5L6L_sprites;
		construction_check: 		switch_apartments_y2kp_5L6L_con_check;
		cargo_production: 			func_produce(13,4);
		colour: 					switch_apartments_y2kp_5L6L_colors;
	}
}
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/apartments/apartments_y2kp_3L4L.pnml" 1
// Begin Apartments_y2kp_3L4L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_3L4L_sprites) {
	//1: switch_hayashi_3L_snow;
	//1: switch_hayashi_4L_snow;
	1: switch_hirano_3L_snow;
	1: switch_hirano_4L_snow;
	//1: switch_hirata_3L_snow;
	//1: switch_hirata_4L_snow;
	//1: switch_kimura_3L_snow;
	//1: switch_kimura_4L_snow;
	1: switch_mori_3L_snow;
	1: switch_mori_4L_snow;
	//1: switch_murakami_3L_snow;
	//1: switch_murakami_4L_snow;
	1: switch_nakamura_3L_snow;
	1: switch_nakamura_4L_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_3L4L_name) {
	dependent: switch_apartments_y2kp_3L4L_sprites;
//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_POSTY2K),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_POSTY2K),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_POSTY2K),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_POSTY2K),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_POSTY2K),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_POSTY2K),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_POSTY2K),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_POSTY2K),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_POSTY2K),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_POSTY2K),string(L4));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_POSTY2K),string(L3));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_POSTY2K),string(L4));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTY2K),string(L3));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTY2K),string(L4));
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_3L4L_colors) {
	dependent: switch_apartments_y2kp_3L4L_sprites;
	//1: switch_hayashi_colors;
	//1: switch_hayashi_colors;
	1: switch_hirano_colors;
	1: switch_hirano_colors;
	//1: switch_hirata_colors;
	//1: switch_hirata_colors;
	//1: switch_kimura_colors;
	//1: switch_kimura_colors;
	1: switch_mori_colors;
	1: switch_mori_colors;
	//1: switch_murakami_colors;
	//1: switch_murakami_colors;
	1: switch_nakamura_colors;
	1: switch_nakamura_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_3L4L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	((PopOver5L6LResidentialThreshold() && town_zone == TOWNZONE_EDGE) || !PopOver5L6LResidentialThreshold())
) {return;}	

item(FEAT_HOUSES, item_apartments_y2kp_3L4L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_HARADA);
		population: 				75;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				9;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES, ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;		
		}
	graphics {
		name:						switch_apartments_y2kp_3L4L_name;
		default: 					switch_apartments_y2kp_3L4L_sprites;
		construction_check: 		switch_apartments_y2kp_3L4L_con_check;
		cargo_production: 			func_produce(6,2);
		colour: 					switch_apartments_y2kp_3L4L_colors;
	}
}

// End apartments_y2kp_3L4L
# 1 "JPplusHousesResidential.pnml" 4

//#include "src/houses/apartments/apartments_nakayama.pnml"

// SHOPS AND OFFICES

// SHOPS
# 1 "src/houses/shops/convini_01.pnml" 1
// Begin convini_01

// Building Sprites
spriteset (spr_build_convini_01, 							"src/gfx/shops/convini_01/building.png") 					{template_house_80(1,1)}
spriteset (spr_build_convini_01_snow, 						"src/gfx/shops/convini_01/building.png") 					{template_house_80(1,82)}

// Ground Sprites
spriteset (spr_ground_convini_01, 							"src/gfx/shops/convini_01/ground.png") 						{template_ground(1,1)}
spriteset (spr_ground_convini_01_snow, 						"src/gfx/shops/convini_01/ground.png") 						{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_convini_01 {
	ground {
		sprite: spr_ground_convini_01 (construction_state);
	}
	building {
		sprite: spr_build_convini_01 (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_convini_01_snow {
	ground {
		sprite: spr_ground_convini_01_snow (construction_state);
	}
	building {
		sprite: spr_build_convini_01_snow (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_convini_01,terrain_type) {
	TILETYPE_SNOW: sprlay_convini_01_snow;
	sprlay_convini_01;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_convini_01)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_convini_01_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	TileGap(30)					// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_convini_01_pro_check, 
	FuncServicePASS() 	&&		// Must have PASS delivered
	(FuncServiceFOOD()	||		// Must have either FOOD delivered
	FuncServiceEOIL()	||		// or Edible Oil
	FuncServiceFISH()   )		// or Fish	
	) {return;}	

item(FEAT_HOUSES, item_convini_01){
	property {
		substitute: 				29; 													
		name: 						string(NAME_CONVINI_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);		// Want flat land
		population: 				50;									// Agreed to JPS
		accepted_cargos: 			[
										[PASS, 4],[MAIL, 2],			// Of course
										[FOOD, 8],						// Food in general
										[JAVA ,8],						// Coffee
										[EOIL, 8],						// Oil for cooking
										[LVST, 8],						// Meat for restaurant
										[FISH, 8],						// It's a sushi restuarant!
									];							
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1950,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		default: 					switch_convini_01;
		construction_check:			switch_convini_01_con_check;
		protection:					switch_convini_01_pro_check;
		cargo_production: 			func_produce(5,3);
		colour: 					rand_recolor_convini_01;
	}
}

// End convini_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/shops/onsen_01.pnml" 1
// Begin onsen_01

// Building Sprites
spriteset (spr_build_onsen_01, 							"src/gfx/shops/onsen_01/building.png") 					{template_house_100_wide(1,1)}
spriteset (spr_build_onsen_01_snow, 					"src/gfx/shops/onsen_01/building.png") 					{template_house_100_wide(1,102)}

// Ground Sprites
spriteset (spr_ground_onsen_01, 						"src/gfx/shops/onsen_01/ground.png") 					{template_ground(1,1)}
spriteset (spr_ground_onsen_01_snow, 					"src/gfx/shops/onsen_01/ground.png") 					{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_onsen_01 {
	ground {
		sprite: spr_ground_onsen_01(construction_state);
	}
	building {
		sprite: spr_build_onsen_01(construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_onsen_01_snow {
	ground {
		sprite: spr_ground_onsen_01_snow(construction_state);
	}
	building {
		sprite: spr_build_onsen_01_snow(construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_onsen_01,terrain_type) {
	TILETYPE_SNOW: sprlay_onsen_01_snow;
	sprlay_onsen_01;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_onsen_01)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}
*/

// Construction Check
switch (FEAT_HOUSES, SELF, switch_onsen_01_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	TileGap(30)					// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_onsen_01_pro_check, 
	FuncServicePASS() 	&&		// Must have PASS delivered
	(FuncServiceFOOD()	||		// Must have either FOOD delivered
	FuncServiceEOIL()	||		// or Edible Oil
	FuncServiceFISH()   )		// or Fish	
	) {return;}	

item(FEAT_HOUSES, item_onsen_01){
	property {
		substitute: 				29; 													
		name: 						string(NAME_ONSEN_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);		// Want flat land
		population: 				40;									// Agreed to JPS
		accepted_cargos: 			[[PASS, 8],[MAIL, 1]];							
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1870,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_INNER_SUBURB,		// 3
										TOWNZONE_OUTER_SUBURB,		// 2
										TOWNZONE_OUTSKIRT			// 1
										//TOWNZONE_EDGE				// 0
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		default: 					switch_onsen_01;
		construction_check:			switch_onsen_01_con_check;
		protection:					switch_onsen_01_pro_check;
		cargo_production: 			func_produce(20,5);
		//colour: 					rand_recolor_onsen_01;
	}
}

// End onsen_01
# 1 "JPplusHousesResidential.pnml" 4
//#include "src/houses/shops/cinema.pnml"
# 1 "src/houses/shops/petrol_station_01.pnml" 1
// Begin petrol_station_01

// Building Sprites
spriteset (spr_build_petrol_station_01, 							"src/gfx/shops/petrol_station_01/building.png") 						{template_house_80(1,1)}
spriteset (spr_build_petrol_station_01_snow, 						"src/gfx/shops/petrol_station_01/building.png") 						{template_house_80(1,82)}

// Ground Sprites
spriteset (spr_ground_petrol_station_01, 							"src/gfx/shops/petrol_station_01/ground.png") 						{template_house_80(1,1)}
spriteset (spr_ground_petrol_station_01_snow, 						"src/gfx/shops/petrol_station_01/ground.png") 						{template_house_80(1,82)}

// Normal Sprites
spritelayout sprlay_petrol_station_01_north {
	ground {
		sprite: spr_ground_petrol_station_01(0);
	}
	building {
		sprite: spr_build_petrol_station_01(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_petrol_station_01_east {
	ground {
		sprite: spr_ground_petrol_station_01(1);
	}
	building {
		sprite: spr_build_petrol_station_01(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_petrol_station_01_snow_north {
	ground {
		sprite: spr_ground_petrol_station_01_snow(0);
	}
	building {
		sprite: spr_build_petrol_station_01_snow(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_petrol_station_01_snow_east {
	ground {
		sprite: spr_ground_petrol_station_01_snow(1);
	}
	building {
		sprite: spr_build_petrol_station_01_snow(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_petrol_station_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_petrol_station_01_snow_north;
	sprlay_petrol_station_01_north;
}
switch(FEAT_HOUSES, SELF, switch_petrol_station_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_petrol_station_01_snow_east;
	sprlay_petrol_station_01_east;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_petrol_station_01)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_petrol_station_01_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	TileGap(30)					// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_petrol_station_01_pro_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	FuncServicePETR()			// Must have PETR delivered
	) {return;}	

item(FEAT_HOUSES, item_petrol_station_01, 50, HOUSE_SIZE_1X2){
	property {
		substitute: 				7; 													
		name: 						string(NAME_PETROL_STATION_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);	// Want flat land
		population: 				80;														// Agreed to JPS
		accepted_cargos: 			[[PASS, 4],[MAIL, 2],[GOOD, 2],[PETR,8]];				// Agreed to JPS and added Petrol
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1970,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT,
										TOWNZONE_EDGE
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		graphics_north: 			switch_petrol_station_01_north;
		graphics_east: 				switch_petrol_station_01_east;
		construction_check:			switch_petrol_station_01_con_check;
		protection:					switch_petrol_station_01_pro_check;
		cargo_production: 			func_produce(20,5);
		colour: 					rand_recolor_petrol_station_01;
	}
}

// End petrol_station_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/shops/petrol_station_02.pnml" 1
// Begin petrol_station_02

// Building Sprites
spriteset (spr_build_petrol_station_02, 				"src/gfx/shops/petrol_station_02/building.png") 		{template_house_80(1,1)}
spriteset (spr_build_petrol_station_02_snow, 			"src/gfx/shops/petrol_station_02/building.png") 		{template_house_80(1,82)}

// Ground Sprites
spriteset (spr_ground_petrol_station_02, 				"src/gfx/shops/petrol_station_02/ground.png") 			{template_ground(1,1)}
spriteset (spr_ground_petrol_station_02_snow, 			"src/gfx/shops/petrol_station_02/ground.png") 			{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_petrol_station_02 {
	ground {
		sprite: spr_ground_petrol_station_02 (3);
	}
	building {
		sprite: spr_build_petrol_station_02 (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_petrol_station_02_snow {
	ground {
		sprite: spr_ground_petrol_station_02_snow (3);
	}
	building {
		sprite: spr_build_petrol_station_02_snow (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_petrol_station_02,terrain_type) {
	TILETYPE_SNOW: sprlay_petrol_station_02_snow;
	sprlay_petrol_station_02;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_petrol_station_02)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_petrol_station_02_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	HasRoadAdjacentSE() &&		// Must have road to the SE
	TileGap(30)					// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_petrol_station_02_pro_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	HasRoadAdjacentSE() &&		// Must have road to the SE
	FuncServicePETR()			// Must have PETR delivered
	) {return;}	

item(FEAT_HOUSES, item_petrol_station_02){
	property {
		substitute: 				29; 													
		name: 						string(NAME_PETROL_STATION_02);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);		// Want flat land
		population: 				40;									// Agreed to JPS
		accepted_cargos: 			[
										[PASS, 4],[MAIL, 2],			// Of course
										[GOOD, 2],[PETR, 8]				// Goods & Petrol
									];							
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1950,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										//TOWNZONE_CENTRE,
										//TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT,
										TOWNZONE_EDGE
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		default: 					switch_petrol_station_02;
		construction_check:			switch_petrol_station_02_con_check;
		protection:					switch_petrol_station_02_pro_check;
		cargo_production: 			func_produce(5,3);
		colour: 					rand_recolor_petrol_station_02;
	}
}

// End petrol_station_02
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/shops/petrol_station_03.pnml" 1
// Begin petrol_station_03

// Building Sprites
spriteset (spr_build_petrol_station_03, 			"src/gfx/shops/petrol_station_03/building.png") 			{template_house_80(1,1)}
spriteset (spr_build_petrol_station_03_snow, 		"src/gfx/shops/petrol_station_03/building.png") 			{template_house_80(1,82)}

// Ground Sprites
spriteset (spr_ground_petrol_station_03, 			"src/gfx/shops/petrol_station_03/ground.png") 				{template_ground(1,1)}
spriteset (spr_ground_petrol_station_03_snow, 		"src/gfx/shops/petrol_station_03/ground.png") 				{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_petrol_station_03_north {
	ground {
		sprite: spr_ground_petrol_station_03(0);
	}
	building {
		sprite: spr_build_petrol_station_03(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_petrol_station_03_west {
	ground {
		sprite: spr_ground_petrol_station_03(1);
	}
	building {
		sprite: spr_build_petrol_station_03(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_petrol_station_03_snow_north {
	ground {
		sprite: spr_ground_petrol_station_03_snow(0);
	}
	building {
		sprite: spr_build_petrol_station_03_snow(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_petrol_station_03_snow_west {
	ground {
		sprite: spr_ground_petrol_station_03_snow(1);
	}
	building {
		sprite: spr_build_petrol_station_03_snow(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_petrol_station_03_north,terrain_type) {
	TILETYPE_SNOW: sprlay_petrol_station_03_snow_north;
	sprlay_petrol_station_03_north;
}
switch(FEAT_HOUSES, SELF, switch_petrol_station_03_west,terrain_type) {
	TILETYPE_SNOW: sprlay_petrol_station_03_snow_west;
	sprlay_petrol_station_03_west;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_petrol_station_03)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_petrol_station_03_con_check, 
	HasRoadAdjacentSE() &&		// Must have road to the SW
	TileGap(30)					// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_petrol_station_03_pro_check, 
	HasRoadAdjacentSE() &&		// Must have road to the SW
	FuncServicePETR()			// Must have PETR delivered
	) {return;}	

item(FEAT_HOUSES, item_petrol_station_03, 110, HOUSE_SIZE_2X1){
	property {
		substitute: 				76; 													
		name: 						string(NAME_PETROL_STATION_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);	// Want flat land
		population: 				80;														// Agreed to JPS
		accepted_cargos: 			[[PASS, 4],[MAIL, 2],[GOOD, 2],[PETR, 8]];				// Agreed to JPS and added Petrol
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1950,1989];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										//TOWNZONE_CENTRE,
										//TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT,
										TOWNZONE_EDGE
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		graphics_north: 			switch_petrol_station_03_north;
		graphics_west: 				switch_petrol_station_03_west;
		construction_check:			switch_petrol_station_03_con_check;
		protection:					switch_petrol_station_03_pro_check;
		cargo_production: 			func_produce(20,5);
		colour: 					rand_recolor_petrol_station_03;
	}
}

// End petrol_station_03
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/shops/yoshinoya_sushi_restaurant.pnml" 1
// Begin yoshinoya_sushi_restaurant

// Building Sprites
spriteset (spr_build_yoshinoya_sushi_restaurant, 							"src/gfx/shops/yoshinoya_sushi_restaurant/building.png") 					{template_house_80(1,1)}
spriteset (spr_build_yoshinoya_sushi_restaurant_snow, 						"src/gfx/shops/yoshinoya_sushi_restaurant/building.png") 					{template_house_80(1,82)}

// Ground Sprites
spriteset (spr_ground_yoshinoya_sushi_restaurant, 							"src/gfx/shops/yoshinoya_sushi_restaurant/ground.png") 						{template_house_80(1,1)}
spriteset (spr_ground_yoshinoya_sushi_restaurant_snow, 						"src/gfx/shops/yoshinoya_sushi_restaurant/ground.png") 						{template_house_80(1,82)}

// Normal Sprites
spritelayout sprlay_yoshinoya_sushi_restaurant {
	ground {
		sprite: spr_ground_yoshinoya_sushi_restaurant(construction_state);
	}
	building {
		sprite: spr_build_yoshinoya_sushi_restaurant(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yoshinoya_sushi_restaurant_snow {
	ground {
		sprite: spr_ground_yoshinoya_sushi_restaurant_snow(construction_state);
	}
	building {
		sprite: spr_build_yoshinoya_sushi_restaurant_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yoshinoya_sushi_restaurant,terrain_type) {
	TILETYPE_SNOW: sprlay_yoshinoya_sushi_restaurant_snow;
	sprlay_yoshinoya_sushi_restaurant;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_yoshinoya_sushi_restaurant)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_yoshinoya_sushi_restaurant_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	TileGap(30)					// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_yoshinoya_sushi_restaurant_pro_check, 
	FuncServicePASS() 	&&		// Must have PASS delivered
	(FuncServiceFOOD()	||		// Must have either FOOD delivered
	FuncServiceEOIL()	||		// or Edible Oil
	FuncServiceFISH()   )		// or Fish	
	) {return;}	

item(FEAT_HOUSES, item_yoshinoya_sushi_restaurant){
	property {
		substitute: 				29; 													
		name: 						string(NAME_YOSHINOYA_SUSHI_RESTAURANT);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);		// Want flat land
		population: 				50;									// Agreed to JPS
		accepted_cargos: 			[
										[PASS, 4],[MAIL, 2],			// Of course
										[FOOD, 8],						// Food in general
										[JAVA ,8],						// Coffee
										[EOIL, 8],						// Oil for cooking
										[LVST, 8],						// Meat for restaurant
										[FISH, 8],						// It's a sushi restuarant!
									];							
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1950,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		default: 					switch_yoshinoya_sushi_restaurant;
		construction_check:			switch_yoshinoya_sushi_restaurant_con_check;
		protection:					switch_yoshinoya_sushi_restaurant_pro_check;
		cargo_production: 			func_produce(20,5);
		colour: 					rand_recolor_yoshinoya_sushi_restaurant;
	}
}

// End yoshinoya_sushi_restaurant
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/shops/yoshinoya_restaurant.pnml" 1
// Begin yoshinoya_restaurant

// Building Sprites
spriteset (spr_build_yoshinoya_restaurant, 							"src/gfx/shops/yoshinoya_restaurant/building.png") 					{template_house_80_wide(1,1)}
spriteset (spr_build_yoshinoya_restaurant_snow, 					"src/gfx/shops/yoshinoya_restaurant/building.png") 					{template_house_80_wide(1,82)}

// Ground Sprites
spriteset (spr_ground_yoshinoya_restaurant, 						"src/gfx/shops/yoshinoya_restaurant/ground.png") 					{template_ground(1,1)}
spriteset (spr_ground_yoshinoya_restaurant_snow, 					"src/gfx/shops/yoshinoya_restaurant/ground.png") 					{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_yoshinoya_restaurant {
	ground {
		sprite: spr_ground_yoshinoya_restaurant(construction_state);
	}
	building {
		sprite: spr_build_yoshinoya_restaurant(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yoshinoya_restaurant_snow {
	ground {
		sprite: spr_ground_yoshinoya_restaurant_snow(construction_state);
	}
	building {
		sprite: spr_build_yoshinoya_restaurant_snow(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yoshinoya_restaurant,terrain_type) {
	TILETYPE_SNOW: sprlay_yoshinoya_restaurant_snow;
	sprlay_yoshinoya_restaurant;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_yoshinoya_restaurant)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_yoshinoya_restaurant_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	TileGap(30)					// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_yoshinoya_restaurant_pro_check, 
	FuncServicePASS() 	&&		// Must have PASS delivered
	(FuncServiceFOOD()	||		// Must have either FOOD delivered
	FuncServiceEOIL()	||		// or Edible Oil
	FuncServiceFISH()   )		// or Fish	
	) {return;}	

item(FEAT_HOUSES, item_yoshinoya_restaurant){
	property {
		substitute: 				29; 													
		name: 						string(NAME_YOSHINOYA_RESTAURANT);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);		// Want flat land
		population: 				60;									// Agreed to JPS
		accepted_cargos: 			[
										[PASS, 4],[MAIL, 2],			// Of course
										[FOOD, 8],						// Food in general
										[JAVA ,8],						// Coffee
										[EOIL, 8],						// Oil for cooking
										[LVST, 8],						// Meat for restaurant
										[FISH, 8],						// It's a sushi restuarant!
									];							
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1955,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		default: 					switch_yoshinoya_restaurant;
		construction_check:			switch_yoshinoya_restaurant_con_check;
		protection:					switch_yoshinoya_restaurant_pro_check;
		cargo_production: 			func_produce(20,5);
		colour: 					rand_recolor_yoshinoya_restaurant;
	}
}

// End yoshinoya_restaurant
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/shops/shops_small_01.pnml" 1
// Begin shops_small_01

// Building Sprites
spriteset (spr_build_shops_small_01, 							"src/gfx/shops/shops_small_01/building.png") 					{template_house_80(1,1)}
spriteset (spr_build_shops_small_01_snow, 						"src/gfx/shops/shops_small_01/building.png") 					{template_house_80(1,82)}

// Ground Sprites
spriteset (spr_ground_shops_small_01, 							"src/gfx/shops/shops_small_01/ground.png") 						{template_house_80(1,1)}
spriteset (spr_ground_shops_small_01_snow, 						"src/gfx/shops/shops_small_01/ground.png") 						{template_house_80(1,82)}

// Normal Sprites
spritelayout sprlay_shops_small_01 {
	ground {
		sprite: spr_ground_shops_small_01(construction_state);
	}
	building {
		sprite: spr_build_shops_small_01(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_shops_small_01_snow {
	ground {
		sprite: spr_ground_shops_small_01_snow(construction_state);
	}
	building {
		sprite: spr_build_shops_small_01_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_shops_small_01,terrain_type) {
	TILETYPE_SNOW: sprlay_shops_small_01_snow;
	sprlay_shops_small_01;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_shops_small_01)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_shops_small_01_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	TileGap(20)					// Can't appear within 20 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_shops_small_01_pro_check, 
	FuncServicePASS() 	&&		// Must have PASS delivered
	(FuncServiceFOOD()	||		// Must have either FOOD delivered
	FuncServiceGOOD()	||		// or GOOD
	FuncServiceCASS()	||		// or CASS
	FuncServiceFRUT()   )		// or FRUT	
) {return;}	

item(FEAT_HOUSES, item_shops_small_01){
	property {
		substitute: 				29; 													
		name: 						string(NAME_SHOPS_SMALL_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);		// Want flat land
		population: 				50;									// Agreed to JPS
		accepted_cargos: 			[
										[PASS, 4],[MAIL, 2],			// Of course
										[FOOD, 8],						// Food in general
										[GOOD, 8],						// Food in general
										[FRUT ,8],						// Fruit
										[LVST, 8],						// Meat
										[CASS, 8],						// Cassava
									];							
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1930,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_CENTRE,
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB
										//TOWNZONE_OUTSKIRT
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		default: 					switch_shops_small_01;
		construction_check:			switch_shops_small_01_con_check;
		protection:					switch_shops_small_01_pro_check;
		cargo_production: 			func_produce(10,3);
		colour: 					rand_recolor_shops_small_01;
	}
}

// End shops_small_01
# 1 "JPplusHousesResidential.pnml" 4

// LANDMARKS
// Buildings
# 1 "src/houses/landmarks/temple/temple_01.pnml" 1
// Begin temple_01

// Sprites
spriteset (spr_temple_01, 							"src/houses/landmarks/temple/temple.png") 						{template_house_128(1,1)}
spriteset (spr_temple_01_snow, 						"src/houses/landmarks/temple/temple.png") 						{template_house_128(1,130)}

// Normal Sprites
spritelayout sprlay_temple_01_north {
	ground {
		sprite: spr_temple_01(3);
	}
	building {
		sprite: spr_temple_01(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_01_east {
	ground {
		sprite: spr_temple_01(3);
	}
	building {
		sprite: spr_temple_01(2);
		xoffset: 1;
		yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_01_west {
	ground {
		sprite: spr_temple_01(3);
	}
	building {
		sprite: spr_temple_01(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_01_south {
	ground {
		sprite: spr_temple_01(3);
	}
	building {
		sprite: spr_temple_01(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_temple_01_snow_north {
	ground {
		sprite: spr_temple_01_snow(3);
	}
	building {
		sprite: spr_temple_01_snow(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_01_snow_east {
	ground {
		sprite: spr_temple_01_snow(3);
	}
	building {
		sprite: spr_temple_01_snow(2);
		xoffset: 1;
		yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_01_snow_west {
	ground {
		sprite: spr_temple_01_snow(3);
	}
	building {
		sprite: spr_temple_01_snow(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_01_snow_south {
	ground {
		sprite: spr_temple_01_snow(3);
	}
	building {
		sprite: spr_temple_01_snow(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_temple_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_01_snow_north;
	sprlay_temple_01_north;
}
switch(FEAT_HOUSES, SELF, switch_temple_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_01_snow_east;
	sprlay_temple_01_east;
}
switch(FEAT_HOUSES, SELF, switch_temple_01_west,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_01_snow_west;
	sprlay_temple_01_west;
}
switch(FEAT_HOUSES, SELF, switch_temple_01_south,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_01_snow_south;
	sprlay_temple_01_south;
}

// End temple_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/temple/temple_02.pnml" 1
// Begin temple_02

// Sprites
spriteset (spr_temple_02, 							"src/houses/landmarks/temple/temple_02.png") 						{template_house_128(1,1)}
spriteset (spr_temple_02_snow, 						"src/houses/landmarks/temple/temple_02.png") 						{template_house_128(1,130)}

// Normal Sprites
spritelayout sprlay_temple_02_north {
	ground {
		sprite: spr_temple_02(3);
	}
	building {
		sprite: spr_temple_02(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_02_east {
	ground {
		sprite: spr_temple_02(3);
	}
	building {
		sprite: spr_temple_02(2);
		xoffset: 1;
		yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_02_west {
	ground {
		sprite: spr_temple_02(3);
	}
	building {
		sprite: spr_temple_02(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_02_south {
	ground {
		sprite: spr_temple_02(3);
	}
	building {
		sprite: spr_temple_02(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_temple_02_snow_north {
	ground {
		sprite: spr_temple_02_snow(3);
	}
	building {
		sprite: spr_temple_02_snow(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_02_snow_east {
	ground {
		sprite: spr_temple_02_snow(3);
	}
	building {
		sprite: spr_temple_02_snow(2);
		xoffset: 1;
		yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_02_snow_west {
	ground {
		sprite: spr_temple_02_snow(3);
	}
	building {
		sprite: spr_temple_02_snow(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_temple_02_snow_south {
	ground {
		sprite: spr_temple_02_snow(3);
	}
	building {
		sprite: spr_temple_02_snow(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_temple_02_north,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_02_snow_north;
	sprlay_temple_02_north;
}
switch(FEAT_HOUSES, SELF, switch_temple_02_east,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_02_snow_east;
	sprlay_temple_02_east;
}
switch(FEAT_HOUSES, SELF, switch_temple_02_west,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_02_snow_west;
	sprlay_temple_02_west;
}
switch(FEAT_HOUSES, SELF, switch_temple_02_south,terrain_type) {
	TILETYPE_SNOW: sprlay_temple_02_snow_south;
	sprlay_temple_02_south;
}

// End temple_02
# 1 "JPplusHousesResidential.pnml" 4
//#include "src/houses/landmarks/sbc/sbc.pnml"

// House IDs
# 1 "src/houses/landmarks/fire_station_01/fire_station_01.pnml" 1
// Begin fire_station_01

// Building Sprites

// A
spriteset (spr_build_fire_station_01_north_a, 			"src/houses/landmarks/fire_station_01/building_a.png") 		{template_house_80(1,1)}
spriteset (spr_build_fire_station_01_north_a_snow, 		"src/houses/landmarks/fire_station_01/building_a.png") 		{template_house_80(1,82)}

spriteset (spr_build_fire_station_01_west_a, 			"src/houses/landmarks/fire_station_01/building_a.png") 		{template_house_80(261,1)}
spriteset (spr_build_fire_station_01_west_a_snow, 		"src/houses/landmarks/fire_station_01/building_a.png") 		{template_house_80(261,82)}

// B
spriteset (spr_build_fire_station_01_north_b, 			"src/houses/landmarks/fire_station_01/building_b.png") 		{template_house_80(1,1)}
spriteset (spr_build_fire_station_01_north_b_snow, 		"src/houses/landmarks/fire_station_01/building_b.png") 		{template_house_80(1,82)}

spriteset (spr_build_fire_station_01_west_b, 			"src/houses/landmarks/fire_station_01/building_b.png") 		{template_house_80(261,1)}
spriteset (spr_build_fire_station_01_west_b_snow, 		"src/houses/landmarks/fire_station_01/building_b.png") 		{template_house_80(261,82)}

// C
spriteset (spr_build_fire_station_01_north_c, 			"src/houses/landmarks/fire_station_01/building_c.png") 		{template_house_80(1,1)}
spriteset (spr_build_fire_station_01_north_c_snow, 		"src/houses/landmarks/fire_station_01/building_c.png") 		{template_house_80(1,82)}

spriteset (spr_build_fire_station_01_west_c, 			"src/houses/landmarks/fire_station_01/building_c.png") 		{template_house_80(261,1)}
spriteset (spr_build_fire_station_01_west_c_snow, 		"src/houses/landmarks/fire_station_01/building_c.png") 		{template_house_80(261,82)}

// D
spriteset (spr_build_fire_station_01_north_d, 			"src/houses/landmarks/fire_station_01/building_d.png") 		{template_house_80(1,1)}
spriteset (spr_build_fire_station_01_north_d_snow, 		"src/houses/landmarks/fire_station_01/building_d.png") 		{template_house_80(1,82)}

spriteset (spr_build_fire_station_01_west_d, 			"src/houses/landmarks/fire_station_01/building_d.png") 		{template_house_80(261,1)}
spriteset (spr_build_fire_station_01_west_d_snow, 		"src/houses/landmarks/fire_station_01/building_d.png") 		{template_house_80(261,82)}

// Ground Sprites
spriteset (spr_ground_fire_station_01_north, 			"src/houses/landmarks/fire_station_01/ground.png") 			{template_ground(1,1)}
spriteset (spr_ground_fire_station_01_north_snow, 		"src/houses/landmarks/fire_station_01/ground.png") 			{template_ground(1,33)}

spriteset (spr_ground_fire_station_01_west, 			"src/houses/landmarks/fire_station_01/ground.png") 			{template_ground(261,1)}
spriteset (spr_ground_fire_station_01_west_snow, 		"src/houses/landmarks/fire_station_01/ground.png") 			{template_ground(261,33)}

// Normal Sprites

// A
spritelayout sprlay_fire_station_01_north_a {
	ground {
		sprite: spr_ground_fire_station_01_north (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_a (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_a {
	ground {
		sprite: spr_ground_fire_station_01_west (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_a (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// B
spritelayout sprlay_fire_station_01_north_b {
	ground {
		sprite: spr_ground_fire_station_01_north (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_b (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_b {
	ground {
		sprite: spr_ground_fire_station_01_west (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_b (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// C
spritelayout sprlay_fire_station_01_north_c {
	ground {
		sprite: spr_ground_fire_station_01_north (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_c (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_c {
	ground {
		sprite: spr_ground_fire_station_01_west (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_c (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// D
spritelayout sprlay_fire_station_01_north_d {
	ground {
		sprite: spr_ground_fire_station_01_north (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_d (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_d {
	ground {
		sprite: spr_ground_fire_station_01_west (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_d (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// Snow Sprites

// A
spritelayout sprlay_fire_station_01_north_a_snow {
	ground {
		sprite: spr_ground_fire_station_01_north_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_a_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_a_snow {
	ground {
		sprite: spr_ground_fire_station_01_west_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_a_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// B
spritelayout sprlay_fire_station_01_north_b_snow {
	ground {
		sprite: spr_ground_fire_station_01_north_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_b_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_b_snow {
	ground {
		sprite: spr_ground_fire_station_01_west_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_b_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// C
spritelayout sprlay_fire_station_01_north_c_snow {
	ground {
		sprite: spr_ground_fire_station_01_north_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_c_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_c_snow {
	ground {
		sprite: spr_ground_fire_station_01_west_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_c_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// D
spritelayout sprlay_fire_station_01_north_d_snow {
	ground {
		sprite: spr_ground_fire_station_01_north_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_north_d_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

spritelayout sprlay_fire_station_01_west_d_snow {
	ground {
		sprite: spr_ground_fire_station_01_west_snow (construction_state);
	}
	building {
		sprite: spr_build_fire_station_01_west_d_snow (construction_state);
		xoffset: 1;
		yoffset: 1;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_fire_station_01_north_a,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_north_a_snow;
	sprlay_fire_station_01_north_a;
}
switch(FEAT_HOUSES, SELF, switch_fire_station_01_west_a,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_west_a_snow;
	sprlay_fire_station_01_west_a;
}

switch(FEAT_HOUSES, SELF, switch_fire_station_01_north_b,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_north_b_snow;
	sprlay_fire_station_01_north_b;
}
switch(FEAT_HOUSES, SELF, switch_fire_station_01_west_b,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_west_b_snow;
	sprlay_fire_station_01_west_b;
}

switch(FEAT_HOUSES, SELF, switch_fire_station_01_north_c,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_north_c_snow;
	sprlay_fire_station_01_north_c;
}
switch(FEAT_HOUSES, SELF, switch_fire_station_01_west_c,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_west_c_snow;
	sprlay_fire_station_01_west_c;
}

switch(FEAT_HOUSES, SELF, switch_fire_station_01_north_d,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_north_d_snow;
	sprlay_fire_station_01_north_d;
}
switch(FEAT_HOUSES, SELF, switch_fire_station_01_west_d,terrain_type) {
	TILETYPE_SNOW: sprlay_fire_station_01_west_d_snow;
	sprlay_fire_station_01_west_d;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_fire_station_01_north_sprites) {
	1: switch_fire_station_01_north_a;
	1: switch_fire_station_01_north_b;
	1: switch_fire_station_01_north_c;
	1: switch_fire_station_01_north_d;
}

random_switch (FEAT_HOUSES, SELF, switch_fire_station_01_west_sprites) {
	dependent: switch_fire_station_01_north_sprites;
	1: switch_fire_station_01_west_a;
	1: switch_fire_station_01_west_b;
	1: switch_fire_station_01_west_c;
	1: switch_fire_station_01_west_d;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_fire_station_01_con_check, 
	HasRoadAdjacentSE() &&					// Must have road to the SW
	PopOver5L6LResidentialThreshold() &&	// Population must be > threshold
	TileGap(30)								// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_fire_station_01_pro_check, 
	HasRoadAdjacentSE()						// Must have road to the SW
	) {return;}	

item(FEAT_HOUSES, item_fire_station_01, 107, HOUSE_SIZE_2X1){
	property {
		substitute: 				76; 													
		name: 						string(NAME_FIRE_STATION_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);						// Want flat land
		population: 				80;													// Agreed to JPS
		accepted_cargos: 			[[PASS, 4],[MAIL, 2],[GOOD, 2]];					// Agreed to JPS and added Petrol
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1970,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT,
										TOWNZONE_EDGE
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		graphics_north: 			switch_fire_station_01_north_sprites;
		graphics_west: 				switch_fire_station_01_west_sprites;
		construction_check:			switch_fire_station_01_con_check;
		protection:					switch_fire_station_01_pro_check;
		cargo_production: 			func_produce(20,5);
		//colour: 					rand_recolor_fire_station_01;
	}
}

// End fire_station_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/police_station_01/police_station_01.pnml" 1
// Begin police_station_01

// Building Sprites
spriteset (spr_build_police_station_01_north, 				"src/houses/landmarks/police_station_01/building.png") 			{template_house_80(1,1)}
spriteset (spr_build_police_station_01_north_snow, 			"src/houses/landmarks/police_station_01/building.png") 			{template_house_80(1,82)}

spriteset (spr_build_police_station_01_east, 				"src/houses/landmarks/police_station_01/building.png") 			{template_house_80(261,1)}
spriteset (spr_build_police_station_01_east_snow, 			"src/houses/landmarks/police_station_01/building.png") 			{template_house_80(261,82)}

// Ground Sprites
spriteset (spr_ground_police_station_01_north, 				"src/houses/landmarks/police_station_01/ground.png") 			{template_ground(1,1)}
spriteset (spr_ground_police_station_01_north_snow, 		"src/houses/landmarks/police_station_01/ground.png") 			{template_ground(1,33)}

spriteset (spr_ground_police_station_01_east, 				"src/houses/landmarks/police_station_01/ground.png") 			{template_ground(261,1)}
spriteset (spr_ground_police_station_01_east_snow, 			"src/houses/landmarks/police_station_01/ground.png") 			{template_ground(261,33)}

// Normal Sprites
spritelayout sprlay_police_station_01_north {
	ground {
		sprite: spr_ground_police_station_01_north (construction_state);
	}
	building {
		sprite: spr_build_police_station_01_north (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_police_station_01_east {
	ground {
		sprite: spr_ground_police_station_01_east (construction_state);
	}
	building {
		sprite: spr_build_police_station_01_east (construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_police_station_01_snow_north {
	ground {
		sprite: spr_ground_police_station_01_north_snow (construction_state);
	}
	building {
		sprite: spr_build_police_station_01_north_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_police_station_01_snow_east {
	ground {
		sprite: spr_ground_police_station_01_east_snow (construction_state);
	}
	building {
		sprite: spr_build_police_station_01_east_snow (construction_state);
		//recolour_mode: RECOLOUR_REMAP; 
		//palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_police_station_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_police_station_01_snow_north;
	sprlay_police_station_01_north;
}
switch(FEAT_HOUSES, SELF, switch_police_station_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_police_station_01_snow_east;
	sprlay_police_station_01_east;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_police_station_01)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}
*/

// Construction Check
switch (FEAT_HOUSES, SELF, switch_police_station_01_con_check, 
	HasRoadAdjacentSW() &&					// Must have road to the SW
	PopOver5L6LResidentialThreshold() &&	// Population must be > 10k
	TileGap(30)								// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_police_station_01_pro_check, 
	HasRoadAdjacentSW()						// Must have road to the SW
	) {return;}	

item(FEAT_HOUSES, item_police_station_01, 105, HOUSE_SIZE_1X2){
	property {
		substitute: 				7; 													
		name: 						string(NAME_POLICE_STATION_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);						// Want flat land
		population: 				80;													// Agreed to JPS
		accepted_cargos: 			[[PASS, 4],[MAIL, 2],[GOOD, 2]];					// Agreed to JPS and added Petrol
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1970,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT,
										TOWNZONE_EDGE
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		graphics_north: 			switch_police_station_01_north;
		graphics_east: 				switch_police_station_01_east;
		construction_check:			switch_police_station_01_con_check;
		protection:					switch_police_station_01_pro_check;
		cargo_production: 			func_produce(20,5);
		//colour: 					rand_recolor_police_station_01;
	}
}

// End police_station_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/temple/temple.pnml" 1
// Begin temple

random_switch (FEAT_HOUSES, SELF, switch_temple_north_sprites) {
	1: switch_temple_01_north;
	1: switch_temple_02_north;
	//10: switch_sbc_north;
}

random_switch (FEAT_HOUSES, SELF, switch_temple_east_sprites) {
	dependent: switch_temple_north_sprites;
	1: switch_temple_01_east;
	1: switch_temple_02_east;
	//10: switch_sbc_east;
}

random_switch (FEAT_HOUSES, SELF, switch_temple_west_sprites) {
	dependent: switch_temple_north_sprites;
	1: switch_temple_01_west;
	1: switch_temple_02_west;
	//10: switch_sbc_west;
}

random_switch (FEAT_HOUSES, SELF, switch_temple_south_sprites) {
	dependent: switch_temple_north_sprites;
	1: switch_temple_01_south;
	1: switch_temple_02_south;
	//10: switch_sbc_south;
}

random_switch (FEAT_HOUSES, SELF, switch_temple_name) {
	dependent: switch_temple_north_sprites;
	1: string(NAME_TEMPLE_01);
	1: string(NAME_TEMPLE_02);
	//10: string(NAME_TEMPLE_02);
}


// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_temple)
	{
		//1: PALETTE_CC_RED;			Nah
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;			Nah
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;			Nah
		2: PALETTE_CC_DARK_GREEN;
		//3: PALETTE_CC_CREAM;
		//1: PALETTE_CC_MAUVE;			Nah
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_temple_con_check, 
	IsCity() && 				// Can only appear in Cities
	IsUniqueHouse() && 			// Only one Temple per city
	OnGenerationOnly() && 		// Will only spawn when Map is generated - not realistic being built in modern times!
	nearby_tile_class(0,2) == TILE_CLASS_ROAD || nearby_tile_class(0,2) == TILE_CLASS_STATION 		// Requires a road to the SE, due to sticking out entrance
	) {return;}	

item(FEAT_HOUSES, item_temple, 66, HOUSE_SIZE_2X2){
	property {
		substitute: 				20; //Stadium since 2x2
		name: 						string(NAME_TEMPLE_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED, HOUSE_FLAG_CHURCH, HOUSE_FLAG_PROTECTED);
		population: 				100;
		accepted_cargos: 			[[PASS, 8],[MAIL, 1],[FOOD, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				5;
		years_available: 			[1700,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES, bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				6;	
		}
	graphics {
		name:						switch_temple_name;				
		graphics_north: 			switch_temple_north_sprites;
		graphics_east: 				switch_temple_east_sprites;
		graphics_west: 				switch_temple_west_sprites;
		graphics_south: 			switch_temple_south_sprites;
		construction_check:			switch_temple_con_check;	
		cargo_production: 			func_produce(10,2);
		colour: 					rand_recolor_temple;
	}
}

// End temple
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/shiro_01/shiro_01.pnml" 1
// Begin shiro_01

// Sprites
spriteset (spr_shiro_01, 							"src/houses/landmarks/shiro_01/shiro.png") 						{template_house_200(1,1)}
spriteset (spr_shiro_01_snow, 						"src/houses/landmarks/shiro_01/shiro.png") 						{template_house_200(1,202)}

// Normal Sprites
spritelayout sprlay_shiro_01_north {
	ground {
		sprite: spr_ground_shiro(0);
	}
	building {
		sprite: spr_shiro_01(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_east {
	ground {
		sprite: spr_ground_shiro(2);
	}
	building {
		sprite: spr_shiro_01(2);
		xoffset: -1;
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_west {
	ground {
		sprite: spr_ground_shiro(1);
	}
	building {
		sprite: spr_shiro_01(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_south {
	ground {
		sprite: spr_ground_shiro(3);
	}
	building {
		sprite: spr_shiro_01(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_shiro_01_snow_north {
	ground {
		sprite: spr_ground_shiro(0);
	}
	building {
		sprite: spr_shiro_01_snow(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_snow_east {
	ground {
		sprite: spr_ground_shiro(2);
	}
	building {
		sprite: spr_shiro_01_snow(2);
		xoffset: -1;
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_snow_west {
	ground {
		sprite: spr_ground_shiro(1);
	}
	building {
		sprite: spr_shiro_01_snow(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_snow_south {
	ground {
		sprite: spr_ground_shiro(3);
	}
	building {
		sprite: spr_shiro_01_snow(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_shiro_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_north;
	sprlay_shiro_01_north;
}
switch(FEAT_HOUSES, SELF, switch_shiro_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_east;
	sprlay_shiro_01_east;
}
switch(FEAT_HOUSES, SELF, switch_shiro_01_west,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_west;
	sprlay_shiro_01_west;
}
switch(FEAT_HOUSES, SELF, switch_shiro_01_south,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_south;
	sprlay_shiro_01_south;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_shiro_01)
	{
		//1: PALETTE_CC_RED;			nah
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		//4: PALETTE_CC_WHITE;			too much like snow
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_shiro_01_con_check, 
	IsCity() && 				// Can only appear in Cities
	IsUniqueHouse() && 			// Only one Shiro per city
	TownIndex() % 4 == 0 && 	// Proportion of cities
	OnGenerationOnly() 			// Will only spawn when Map is generated - not realistic being built in modern times!
	) {return;}	

item(FEAT_HOUSES, item_shiro_01, 70, HOUSE_SIZE_2X2){
	property {
		substitute: 				20; 								//Stadium since 2x2
		name: 						string(NAME_SHIRO_01);
		building_flags: 			bitmask(HOUSE_FLAG_PROTECTED);		// Cities should delete
		population: 				160;								// Same as JPS
		accepted_cargos: 			[[PASS, 8],[MAIL, 1],[FOOD, 2]];	// Same as JPS
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;									
		years_available: 			[0,0xFFFF];
		minimum_lifetime: 			50;
		availability_mask: 			[	
										bitmask(TOWNZONE_OUTER_SUBURB,TOWNZONE_OUTSKIRT), 				// Same as JPS
									 	bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)
									];	
		}
	graphics {
		graphics_north: 			switch_shiro_01_north;
		graphics_east: 				switch_shiro_01_east;
		graphics_west: 				switch_shiro_01_west;
		graphics_south: 			switch_shiro_01_south;
		construction_check:			switch_shiro_01_con_check;
		cargo_production: 			func_produce(10,2);
		colour: 					rand_recolor_shiro_01;
	}
}

// End shiro_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/stadium_01/stadium_01.pnml" 1
// Begin stadium_01

// Sprites
spriteset (spr_build_stadium_01, 						"src/houses/landmarks/stadium_01/building.png") 					{template_house_100(1,1)}
spriteset (spr_build_stadium_01_snow, 					"src/houses/landmarks/stadium_01/building.png") 					{template_house_100(1,102)}

spriteset (spr_ground_stadium_01, 						"src/houses/landmarks/stadium_01/ground.png") 						{template_house_100(1,1)}
spriteset (spr_ground_stadium_01_snow, 					"src/houses/landmarks/stadium_01/ground.png") 						{template_house_100(1,102)}

// Normal Sprites
spritelayout sprlay_stadium_01_north {
	ground {
		sprite: spr_ground_stadium_01(0);
	}
	building {
		sprite: spr_build_stadium_01(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_stadium_01_east {
	ground {
		sprite: spr_ground_stadium_01(2);
	}
	building {
		sprite: spr_build_stadium_01(2);
		//xoffset: 1;
		//yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_stadium_01_west {
	ground {
		sprite: spr_ground_stadium_01(1);
	}
	building {
		sprite: spr_build_stadium_01(1);
		//xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_stadium_01_south {
	ground {
		sprite: spr_ground_stadium_01(3);
	}
	building {
		sprite: spr_build_stadium_01(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_stadium_01_snow_north {
	ground {
		sprite: spr_ground_stadium_01_snow(0);
	}
	building {
		sprite: spr_build_stadium_01_snow(0);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_stadium_01_snow_east {
	ground {
		sprite: spr_ground_stadium_01_snow(2);
	}
	building {
		sprite: spr_build_stadium_01_snow(2);
		//xoffset: 1;
		//yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_stadium_01_snow_west {
	ground {
		sprite: spr_ground_stadium_01_snow(1);
	}
	building {
		sprite: spr_build_stadium_01_snow(1);
		//xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_stadium_01_snow_south {
	ground {
		sprite: spr_ground_stadium_01_snow(3);
	}
	building {
		sprite: spr_build_stadium_01_snow(3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_stadium_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_stadium_01_snow_north;
	sprlay_stadium_01_north;
}
switch(FEAT_HOUSES, SELF, switch_stadium_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_stadium_01_snow_east;
	sprlay_stadium_01_east;
}
switch(FEAT_HOUSES, SELF, switch_stadium_01_west,terrain_type) {
	TILETYPE_SNOW: sprlay_stadium_01_snow_west;
	sprlay_stadium_01_west;
}
switch(FEAT_HOUSES, SELF, switch_stadium_01_south,terrain_type) {
	TILETYPE_SNOW: sprlay_stadium_01_snow_south;
	sprlay_stadium_01_south;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_stadium_01)
	{
		//1: PALETTE_CC_RED;			Nah
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;			Nah
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;			Nah
		2: PALETTE_CC_DARK_GREEN;
		//3: PALETTE_CC_CREAM;
		//1: PALETTE_CC_MAUVE;			Nah
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_stadium_01_con_check, 
	IsCity() && 							// Can only appear in Cities
	PopOver5L6LResidentialThreshold() &&	// Population criteria
	IsUniqueHouse()							// Only one per city
	) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_stadium_01_pro_check, 
	FuncServiceFOOD() ||		
	FuncServiceBEER()			
	) {return;}	

item(FEAT_HOUSES, item_stadium_01, 60, HOUSE_SIZE_2X2){
	property {
		substitute: 				20; //Stadium since 2x2
		name: 						string(NAME_STADIUM_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);
		population: 				65;
		accepted_cargos: 			[[PASS, 8],[MAIL, 1],[FOOD, 8],[BEER, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				5;
		years_available: 			[1970,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_OUTER_SUBURB,TOWNZONE_OUTSKIRT), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		//building_class:			3;	
		}
	graphics {
		graphics_north: 			switch_stadium_01_north;
		graphics_east: 				switch_stadium_01_east;
		graphics_west: 				switch_stadium_01_west;
		graphics_south: 			switch_stadium_01_south;
		construction_check:			switch_stadium_01_con_check;
		protection:					switch_stadium_01_pro_check;	
		cargo_production: 			func_produce(10,2);
		colour: 					rand_recolor_stadium_01;
	}
}

// End stadium_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/hospital_01/hospital_01.pnml" 1
// Begin hospital_01

// Sprites
spriteset (spr_build_hospital_01_north, 				"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(1,1)}
spriteset (spr_build_hospital_01_north_snow, 			"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(1,130)}

spriteset (spr_build_hospital_01_west, 					"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(261,1)}
spriteset (spr_build_hospital_01_west_snow, 			"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(261,130)}

spriteset (spr_build_hospital_01_east, 					"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(521,1)}
spriteset (spr_build_hospital_01_east_snow, 			"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(521,130)}

spriteset (spr_build_hospital_01_south, 				"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(781,1)}
spriteset (spr_build_hospital_01_south_snow, 			"src/houses/landmarks/hospital_01/building.png") 				{template_house_128(781,130)}


spriteset (spr_ground_hospital_01_north, 				"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(1,1)}
spriteset (spr_ground_hospital_01_north_snow, 			"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(1,130)}

spriteset (spr_ground_hospital_01_west, 				"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(261,1)}
spriteset (spr_ground_hospital_01_west_snow, 			"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(261,130)}

spriteset (spr_ground_hospital_01_east, 				"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(521,1)}
spriteset (spr_ground_hospital_01_east_snow, 			"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(521,130)}

spriteset (spr_ground_hospital_01_south, 				"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(781,1)}
spriteset (spr_ground_hospital_01_south_snow, 			"src/houses/landmarks/hospital_01/ground.png") 					{template_house_128(781,130)}

// Normal Sprites
spritelayout sprlay_hospital_01_north {
	ground {
		sprite: spr_ground_hospital_01_north(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_north(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hospital_01_east {
	ground {
		sprite: spr_ground_hospital_01_east(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_east(construction_state);
		//xoffset: 1;
		//yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hospital_01_west {
	ground {
		sprite: spr_ground_hospital_01_west(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_west(construction_state);
		//xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hospital_01_south {
	ground {
		sprite: spr_ground_hospital_01_south(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_south(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_hospital_01_snow_north {
	ground {
		sprite: spr_ground_hospital_01_north_snow(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_north_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hospital_01_snow_east {
	ground {
		sprite: spr_ground_hospital_01_east_snow(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_east_snow(construction_state);
		//xoffset: 1;
		//yoffset: 3;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hospital_01_snow_west {
	ground {
		sprite: spr_ground_hospital_01_west_snow(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_west_snow(construction_state);
		//xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_hospital_01_snow_south {
	ground {
		sprite: spr_ground_hospital_01_south_snow(construction_state);
	}
	building {
		sprite: spr_build_hospital_01_south_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_hospital_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_hospital_01_snow_north;
	sprlay_hospital_01_north;
}
switch(FEAT_HOUSES, SELF, switch_hospital_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_hospital_01_snow_east;
	sprlay_hospital_01_east;
}
switch(FEAT_HOUSES, SELF, switch_hospital_01_west,terrain_type) {
	TILETYPE_SNOW: sprlay_hospital_01_snow_west;
	sprlay_hospital_01_west;
}
switch(FEAT_HOUSES, SELF, switch_hospital_01_south,terrain_type) {
	TILETYPE_SNOW: sprlay_hospital_01_snow_south;
	sprlay_hospital_01_south;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_hospital_01)
	{
		//1: PALETTE_CC_RED;			Nah
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;			Nah
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;			Nah
		2: PALETTE_CC_DARK_GREEN;
		//3: PALETTE_CC_CREAM;
		//1: PALETTE_CC_MAUVE;			Nah
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_hospital_01_con_check, 
	IsCity() && 						// Can only appear in Cities
	IsUniqueHouse()	&&					// Only one per city
	PopOver5L6LResidentialThreshold()	// Required city population
	) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_hospital_01_pro_check, 
	FuncServicePASS() ||		
	FuncServiceRFPR()			
	) {return;}	

item(FEAT_HOUSES, item_hospital_01, 40, HOUSE_SIZE_2X2){
	property {
		substitute: 				20; //Stadium since 2x2
		name: 						string(NAME_HOSPITAL_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);
		population: 				150;
		accepted_cargos: 			[
										[PASS, 8],
										[MAIL, 4],
										[GOOD, 4],
										[RFPR, 8]
									];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				5;
		years_available: 			[1970,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_OUTER_SUBURB,TOWNZONE_OUTSKIRT), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		//building_class:			3;	
		}
	graphics {
		graphics_north: 			switch_hospital_01_north;
		graphics_east: 				switch_hospital_01_east;
		graphics_west: 				switch_hospital_01_west;
		graphics_south: 			switch_hospital_01_south;
		construction_check:			switch_hospital_01_con_check;
		protection:					switch_hospital_01_pro_check;	
		cargo_production: 			func_produce(10,2);
		colour: 					rand_recolor_hospital_01;
	}
}

// End hospital_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/shrine_01/shrine_01.pnml" 1
// Begin shrine_01

// Ground Sprites
spriteset (spr_shrine_01_ground, 		"src/houses/landmarks/shrine_01/ground.png") 			{template_ground(1,1)}
spriteset (spr_shrine_01_ground_snow, 	"src/houses/landmarks/shrine_01/ground.png") 			{template_ground(1,33)}

// Buildings
spriteset (spr_shrine_01, 				"src/houses/landmarks/shrine_01/building.png") 			{template_house_80(1,1)}
spriteset (spr_shrine_01_snow, 			"src/houses/landmarks/shrine_01/building.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_shrine_01 {
	ground {
		sprite: spr_shrine_01_ground (3);
	}
	building {
		sprite: spr_shrine_01 (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shrine_01_snow {
	ground {
		sprite: spr_shrine_01_ground_snow (3);
	}
	building {
		sprite: spr_shrine_01_snow (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_shrine_01_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_shrine_01_snow;
	sprlay_shrine_01;
}

// Random recolour
random_switch (FEAT_HOUSES, SELF, rand_recolor_shrine_01)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_shrine_01_con_check, 
	IsCity() &&							// Can only build in a city
	IsUniqueHouse() &&					// Only one per town
	OnGenerationOnly()					// Doesn't build during gamereplay, only upon map generation
) {return;}	

if (param_prohibition_shrine == 1) {	// Only appears if parameter is turned on (default: off)

	item(FEAT_HOUSES, item_shrine_01){
		property {
			substitute: 				06;
			name: 						string(NAME_SHRINE_01);
			building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED, HOUSE_FLAG_PROTECTED);
			population: 				40;									// Agreed to JPS
			accepted_cargos: 			[[PASS, 4]];
			local_authority_impact: 	0;
			removal_cost_multiplier: 	0;
			probability: 				15;									// High to make sure it spawns
			years_available: 			[0,0xFFFF];							// Agreed to JPS
			minimum_lifetime: 			2;										
			availability_mask: 			[bitmask(							// Agreed to JPS, also, all zones to give more opportunity to appear
											TOWNZONE_CENTRE,			// 4
											TOWNZONE_INNER_SUBURB,		// 3
											TOWNZONE_OUTER_SUBURB,		// 2
											TOWNZONE_OUTSKIRT,			// 1
											TOWNZONE_EDGE				// 0
										), bitmask(
											CLIMATE_TEMPERATE,
											CLIMATE_ARCTIC, ABOVE_SNOWLINE,
											CLIMATE_TROPIC
										)];
			//building_class:				0;
		
			}
		graphics {
			default: 					switch_shrine_01_sprites;
			construction_check: 		switch_shrine_01_con_check;
			cargo_production: 			func_produce(1,1);			
			colour: 					rand_recolor_shrine_01;
		}
	}
}

// End shrine_01
# 1 "JPplusHousesResidential.pnml" 4
# 1 "src/houses/landmarks/shrine_02/shrine_02.pnml" 1
// Begin shrine_02

// Ground Sprites
spriteset (spr_shrine_02_ground, 		"src/houses/landmarks/shrine_02/ground.png") 			{template_ground(1,1)}
spriteset (spr_shrine_02_ground_snow, 	"src/houses/landmarks/shrine_02/ground.png") 			{template_ground(1,33)}

// Buildings
spriteset (spr_shrine_02, 				"src/houses/landmarks/shrine_02/building.png") 			{template_house_80(1,1)}
spriteset (spr_shrine_02_snow, 			"src/houses/landmarks/shrine_02/building.png") 			{template_house_80(1,82)}

// Spritelayouts
spritelayout sprlay_shrine_02_a {
	ground {
		sprite: spr_shrine_02_ground (3);
	}
	building {
		sprite: spr_shrine_02 (2);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shrine_02_snow_a {
	ground {
		sprite: spr_shrine_02_ground_snow (3);
	}
	building {
		sprite: spr_shrine_02_snow (2);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}


spritelayout sprlay_shrine_02_b {
	ground {
		sprite: spr_shrine_02_ground (3);
	}
	building {
		sprite: spr_shrine_02 (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shrine_02_snow_b {
	ground {
		sprite: spr_shrine_02_ground_snow (3);
	}
	building {
		sprite: spr_shrine_02_snow (3);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_shrine_02_sprites_a,terrain_type) {
	TILETYPE_SNOW: sprlay_shrine_02_snow_a;
	sprlay_shrine_02_a;
}

switch(FEAT_HOUSES, SELF, switch_shrine_02_sprites_b,terrain_type) {
	TILETYPE_SNOW: sprlay_shrine_02_snow_b;
	sprlay_shrine_02_b;
}

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_shrine_02_sprites) {
	1: switch_shrine_02_sprites_a;
	1: switch_shrine_02_sprites_b;
}

// Random recolour
random_switch (FEAT_HOUSES, SELF, rand_recolor_shrine_02)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_shrine_02_con_check, 
	TileGap(30) 				// Cannot build within thirty tiles of another
) {return;}	

item(FEAT_HOUSES, item_shrine_02){
	property {
		substitute: 				06;
		name: 						string(NAME_SHRINE_02);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED, HOUSE_FLAG_PROTECTED);
		population: 				5;									// Agreed to JPS
		accepted_cargos: 			[[PASS, 4]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;									// High to make sure it spawns
		years_available: 			[1700,0xFFFF];							// Agreed to JPS
		minimum_lifetime: 			2;										
		availability_mask: 			[bitmask(							// Agreed to JPS, also, all zones to give more opportunity to appear
										TOWNZONE_CENTRE,			// 4
										TOWNZONE_INNER_SUBURB,		// 3
										TOWNZONE_OUTER_SUBURB,		// 2
										TOWNZONE_OUTSKIRT,			// 1
										TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		//building_class:				0;
		
		}
	graphics {
		default: 					switch_shrine_02_sprites;
		construction_check: 		switch_shrine_02_con_check;
		cargo_production: 			func_produce(1,1);			
		colour: 					rand_recolor_shrine_02;
	}
}

// End shrine_02
# 1 "JPplusHousesResidential.pnml" 4

// RURAL
# 1 "src/houses/rural/farm_01/farm_01.pnml" 1
// Begin farm_01

// Sprites
spriteset (spr_build_farm_01, 						"src/houses/rural/farm_01/building.png") 					{template_house_80(1,1)}
spriteset (spr_build_farm_01_snow, 					"src/houses/rural/farm_01/building.png") 					{template_house_80(1,82)}

spriteset (spr_ground_farm_01, 						"src/houses/rural/farm_01/ground.png") 					{template_house_80(1,1)}
spriteset (spr_ground_farm_01_snow, 				"src/houses/rural/farm_01/ground.png") 					{template_house_80(1,82)}

// Normal Sprites
spritelayout sprlay_farm_01_north {
	ground {
		sprite: spr_ground_farm_01(0);
	}
	building {
		sprite: spr_build_farm_01(0);
	}
}

spritelayout sprlay_farm_01_west {
	ground {
		sprite: spr_ground_farm_01(1);
	}
	building {
		sprite: spr_build_farm_01(1);
	}
}

spritelayout sprlay_farm_01_east {
	ground {
		sprite: spr_ground_farm_01(2);
	}
	building {
		sprite: spr_build_farm_01(2);
	}
}

spritelayout sprlay_farm_01_south {
	ground {
		sprite: spr_ground_farm_01(3);
	}
	building {
		sprite: spr_build_farm_01(3);
	}
}

// Snow Sprites
spritelayout sprlay_farm_01_snow_north {
	ground {
		sprite: spr_ground_farm_01_snow(0);
	}
	building {
		sprite: spr_build_farm_01_snow(0);
	}
}

spritelayout sprlay_farm_01_snow_east {
	ground {
		sprite: spr_ground_farm_01_snow(2);
	}
	building {
		sprite: spr_build_farm_01_snow(2);
	}
}

spritelayout sprlay_farm_01_snow_west {
	ground {
		sprite: spr_ground_farm_01_snow(1);
	}
	building {
		sprite: spr_build_farm_01_snow(1);
	}
}

spritelayout sprlay_farm_01_snow_south {
	ground {
		sprite: spr_ground_farm_01_snow(3);
	}
	building {
		sprite: spr_build_farm_01_snow(3);
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_farm_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_farm_01_snow_north;
	sprlay_farm_01_north;
}
switch(FEAT_HOUSES, SELF, switch_farm_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_farm_01_snow_east;
	sprlay_farm_01_east;
}
switch(FEAT_HOUSES, SELF, switch_farm_01_west,terrain_type) {
	TILETYPE_SNOW: sprlay_farm_01_snow_west;
	sprlay_farm_01_west;
}
switch(FEAT_HOUSES, SELF, switch_farm_01_south,terrain_type) {
	TILETYPE_SNOW: sprlay_farm_01_snow_south;
	sprlay_farm_01_south;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_farm_01_con_check, 
	!IsCity() && 							// Cannot appear in Cities
	!PopOver5L6LResidentialThreshold()		// Population criteria
	) {return;}	

item(FEAT_HOUSES, item_farm_01, 52, HOUSE_SIZE_2X2){
	property {
		substitute: 				20; 								//Stadium since 2x2
		name: 						string(NAME_FARM_01);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);
		population: 				15;
		accepted_cargos: 			[[PASS, 1],[MAIL, 1],[FOOD, 1]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1700,0xFFFF];
		minimum_lifetime: 			7;
		availability_mask: 			[bitmask(								// Agreed to JPS
										//TOWNZONE_CENTRE,			// 4
										//TOWNZONE_INNER_SUBURB,	// 3
										//TOWNZONE_OUTER_SUBURB,	// 2
										TOWNZONE_OUTSKIRT,			// 1
										TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		//building_class:			#;	
		}
	graphics {
		graphics_north: 			switch_farm_01_north;
		graphics_east: 				switch_farm_01_east;
		graphics_west: 				switch_farm_01_west;
		graphics_south: 			switch_farm_01_south;
		construction_check:			switch_farm_01_con_check;
		//protection:				switch_farm_01_pro_check;	
		cargo_production: 			func_produce(10,2);
		//colour: 					rand_recolor_farm_01;
	}
}

// End farm_01
# 1 "JPplusHousesResidential.pnml" 4
