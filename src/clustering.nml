/* Begin clustering */

/* Note: Per NML specs, returns 256+X (X = 0..255) if the house has been defined by this NewGRF with building_class X */

switch (FEAT_HOUSES, SELF, IsTileHouseClass, x, y, class_num, nearby_tile_house_class(x,y) == 256 + class_num) {return;}

switch (FEAT_HOUSES, SELF, IsAdjacentToHouseClass, class_num,
	// One square radius
	IsTileHouseClass(-1, 0, class_num) ||
	IsTileHouseClass(-1,-1, class_num) ||
	IsTileHouseClass(-1, 1, class_num) ||
	IsTileHouseClass( 0,-1, class_num) ||
	IsTileHouseClass( 0, 1, class_num) ||
	IsTileHouseClass( 1, 0, class_num) ||
	IsTileHouseClass( 1,-1, class_num) ||
	IsTileHouseClass( 1, 1, class_num) ||
	// Two square radius
	IsTileHouseClass(-2,-2, class_num) ||
	IsTileHouseClass(-2,-1, class_num) ||
	IsTileHouseClass(-2, 0, class_num) ||
	IsTileHouseClass(-2, 1, class_num) ||
	IsTileHouseClass(-2, 2, class_num) ||
	IsTileHouseClass(-1,-2, class_num) ||
	IsTileHouseClass(-1, 2, class_num) ||
	IsTileHouseClass( 0,-2, class_num) ||
	IsTileHouseClass( 0, 2, class_num) ||
	IsTileHouseClass( 1,-2, class_num) ||
	IsTileHouseClass( 1, 2, class_num) ||
	IsTileHouseClass( 2,-2, class_num) ||
	IsTileHouseClass( 2,-1, class_num) ||
	IsTileHouseClass( 2, 0, class_num) ||
	IsTileHouseClass( 2, 1, class_num) ||
	IsTileHouseClass( 2, 2, class_num) ||
	// Three square radius
	IsTileHouseClass(-3,-3, class_num) ||
	IsTileHouseClass(-3,-2, class_num) ||
	IsTileHouseClass(-3,-1, class_num) ||
	IsTileHouseClass(-3, 0, class_num) ||
	IsTileHouseClass(-3, 1, class_num) ||
	IsTileHouseClass(-3, 2, class_num) ||
	IsTileHouseClass(-3, 3, class_num) ||
	IsTileHouseClass(-1,-3, class_num) ||
	IsTileHouseClass(-1, 3, class_num) ||
	IsTileHouseClass( 0,-3, class_num) ||
	IsTileHouseClass( 0, 3, class_num) ||
	IsTileHouseClass( 1,-3, class_num) ||
	IsTileHouseClass( 1, 3, class_num) ||
	IsTileHouseClass( 2,-3, class_num) ||
	IsTileHouseClass( 2, 3, class_num) ||
	IsTileHouseClass( 3,-3, class_num) ||
	IsTileHouseClass( 3,-2, class_num) ||
	IsTileHouseClass( 3,-1, class_num) ||
	IsTileHouseClass( 3, 0, class_num) ||
	IsTileHouseClass( 3, 1, class_num) ||
	IsTileHouseClass( 3, 2, class_num) ||
	IsTileHouseClass( 3, 3, class_num) ||
	// Four square radius - adjustments to take into consideration that Temple is 2x2
	IsTileHouseClass(-4,-4, class_num) ||
	IsTileHouseClass(-4,-3, class_num) ||
	IsTileHouseClass(-4,-2, class_num) ||
	IsTileHouseClass(-4,-1, class_num) ||
	IsTileHouseClass(-4, 0, class_num) ||
	IsTileHouseClass(-4, 1, class_num) ||
	IsTileHouseClass(-4, 2, class_num) ||
	IsTileHouseClass(-4, 3, class_num) ||
	IsTileHouseClass(-4, 4, class_num) ||
	IsTileHouseClass(-3,-4, class_num) ||
	IsTileHouseClass(-2,-4, class_num) ||
	IsTileHouseClass(-1,-4, class_num) ||
	IsTileHouseClass( 0,-4, class_num) ||
	IsTileHouseClass( 1,-4, class_num) ||
	IsTileHouseClass( 2,-4, class_num) ||
	IsTileHouseClass( 3,-4, class_num) ||
	IsTileHouseClass( 4,-4, class_num)
	){return;}

switch (FEAT_HOUSES, SELF, HasTrackAdjacent, 
	nearby_tile_class( 0,-1) == TILE_CLASS_RAIL || 
	nearby_tile_class( 0, 1) == TILE_CLASS_RAIL || 
	nearby_tile_class(-1, 0) == TILE_CLASS_RAIL || 
	nearby_tile_class( 1, 0) == TILE_CLASS_RAIL
	) {return;}

switch (FEAT_HOUSES, SELF, WithinTwoOfSameClass, nearest_house_matching_criterion(2, SEARCH_HOUSE_BY_CLASS) >= 1 || same_class_count_town == 0 ) {return;}
switch (FEAT_HOUSES, SELF, WithinThreeOfSameClass, nearest_house_matching_criterion(3, SEARCH_HOUSE_BY_CLASS) >= 1 || same_class_count_town == 0 ) {return;}

/* Functions to appears in Construction Checks of buildings */

// Allow first skyscraper to build near Class 2
switch (FEAT_HOUSES, SELF, IfFirstSkyscraper, 
	((same_class_count_town == 0 && IsAdjacentToHouseClass(2)) || 
	nearest_house_matching_criterion(2, SEARCH_HOUSE_BY_CLASS) >= 1 )
	) {return;}

// Buildings after the first of the class must cluster near the same class
switch (FEAT_HOUSES, SELF, ClusterBuildingClass, 
	same_class_count_town == 0 || 								// No building of same class in town OR
	AcrossAnAvenue()  ||										// Allowing buildings accross an avenue
	(WithinThreeOfSameClass() && HasTrackAdjacent() ) ||		// Same class within 3 and track beside new building OR
	WithinTwoOfSameClass()										// Same class within 2
	) {return;}

// Function for Buildings that cannot build near Temple (Building Class 3)
switch (FEAT_HOUSES, SELF, BanFromHistDistrict, IsAdjacentToHouseClass(3) == 0 
	) {return;}

// Function for Buildings that can build near the Temple (Building Class 3) to create a Historical District
switch (FEAT_HOUSES, SELF, AllowInHistDistrict, IsAdjacentToHouseClass(3) != 0 
	) {return;}

/* End clustering */
