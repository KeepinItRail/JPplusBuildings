/* Begin Functions */

/* Small Apartments Check */
switch(FEAT_HOUSES, SELF, SmallApartmentsCheck,
	// If there is NO PASS Service, but would be beside a Commercial building (which will have PASS service)
	(FuncNoServicePASS() && CommercialWithinOneTile() )	
	// OR
	||	
	// There is PASS service and is not beside a Commercial building
	(FuncServicePASS() && NoCommercialWithinOneTile() )
){return;}

// Check for road (and stations) in adjacent tiles functions
//switch (FEAT_HOUSES, SELF, HasRoadAdjacentNW, nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || nearby_tile_class( 0,-1) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSE, nearby_tile_class( 0, 1) == TILE_CLASS_ROAD || nearby_tile_class( 0, 1) == TILE_CLASS_STATION) {return;}
switch (FEAT_HOUSES, SELF, HasRoadAdjacentSW, nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || nearby_tile_class( 1, 0) == TILE_CLASS_STATION) {return;}

switch (FEAT_HOUSES, SELF, HasRoadAdjacentSE2x2, nearby_tile_class(0,2) == TILE_CLASS_ROAD || nearby_tile_class(0,2) == TILE_CLASS_STATION) {return;}

switch (FEAT_HOUSES, SELF, HasRoadAdjacentNWSW, 
	nearby_tile_class( 0,-1) == TILE_CLASS_ROAD || 
	nearby_tile_class( 0,-1) == TILE_CLASS_STATION || 
	nearby_tile_class( 1, 0) == TILE_CLASS_ROAD || 
	nearby_tile_class( 1, 0) == TILE_CLASS_STATION
	) {return;}

/* House is Unique */
switch (FEAT_HOUSES, SELF, IsUniqueHouse, same_house_count_town == 0) {return;}

/* Can only appear when town is being generated */
switch (FEAT_HOUSES, SELF, OnGenerationOnly, generating_town == 1) {return;}

/* Probabilities */
switch (FEAT_HOUSES, SELF, RandomBitsFour, random_bits % 4 == 0) {return;}

switch (FEAT_HOUSES, SELF, TwentyTileGap, nearest_house_matching_criterion(20, SEARCH_HOUSE_BY_TYPE) == 0 ) {return;}
switch (FEAT_HOUSES, SELF, ThirtyTileGap, nearest_house_matching_criterion(30, SEARCH_HOUSE_BY_TYPE) == 0 ) {return;}

//switch (FEAT_HOUSES, SELF, IsUniqueInRadius, radius, nearest_house_matching_criterion(radius, SEARCH_HOUSE_BY_TYPE) == 0) {return;}

//switch (FEAT_HOUSES, SELF, HasSameClassNearby, radius, nearest_house_matching_criterion(radius, SEARCH_HOUSE_BY_CLASS) ) {0: return 0; return 1;}

//switch (FEAT_HOUSES, SELF, IsFirstHouseOfClass, same_class_count_town == 0) {return;}

/* End Functions */
