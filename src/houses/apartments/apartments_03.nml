// Begin apartments_03

// Building Sprites
spriteset (spr_apartments_03, 							"src/gfx/apartments/apartments_03/building.png") 						{template_house_80(1,1)}
spriteset (spr_apartments_03_snow, 						"src/gfx/apartments/apartments_03/building.png") 						{template_house_80(1,82)}

// Ground Tiles
spriteset (spr_apartments_03_ground, 					"src/gfx/apartments/apartments_03/ground.png") 						{template_house_80(1,1)}
spriteset (spr_apartments_03_ground_snow, 				"src/gfx/apartments/apartments_03/ground.png") 						{template_house_80(1,82)}

// Normal Sprites
spritelayout sprlay_apartments_03_norm {
	ground {
		sprite: spr_apartments_03_ground(3);
	}
	building {
		sprite: 		spr_apartments_03(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_apartments_03_snow {
	ground {
		sprite: 		spr_apartments_03_ground_snow(3);
	}
	building {
		sprite: 		spr_apartments_03_snow(3);
		recolour_mode: 	RECOLOUR_REMAP; 
		palette: 		PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_apartments_03_snow,terrain_type) {
	TILETYPE_SNOW: sprlay_apartments_03_snow;
	sprlay_apartments_03_norm;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_apartments_03)
	{
		//1: PALETTE_CC_RED;			// too in your face
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;			// too silly
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;			// nah
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
*/
// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_03_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	BanFromHistDistrict()			// Do not allow building near Temple
	) {return;}	

item(FEAT_HOUSES, item_apartments_03, 31, HOUSE_SIZE_1X1){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_03);
		population: 				100;
		accepted_cargos: 			[[PASS, 8],[MAIL, 4],[FOOD, 4]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1950,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(					// JPS Zones = 3 & 2, ITL = All Zones
										TOWNZONE_CENTRE,		// 4
										TOWNZONE_INNER_SUBURB,	// 3
										TOWNZONE_OUTER_SUBURB	// 2
										//TOWNZONE_OUTSKIRT		// 1
										//TOWNZONE_EDGE			// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
				
		}
	graphics {
		default: 					switch_apartments_03_snow;
		construction_check: 		switch_apartments_03_con_check;
		cargo_production: 			func_produce(13,4);
		//colour: 					rand_recolor_apartments_03;
	}
}

// End apartments_03
