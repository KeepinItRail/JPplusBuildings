// Begin apartments_boom_5L6L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_sprites) {
	//1: switch_hayashi_6L_snow;
	//1: switch_hayashi_5L_snow;
	//1: switch_harada_6L_snow;
	1: switch_hirano_6L_snow;
	1: switch_hirano_5L_snow;
	//1: switch_hirata_6L_snow;
	//1: switch_hirata_5L_snow;
	//1: switch_kimura_6L_snow;
	//1: switch_kimura_5L_snow;
	//1: switch_kono_6L_snow;
	1: switch_mori_5L_snow;
	1: switch_mori_6L_snow;
	//1: switch_murakami_6L_snow;
	//1: switch_murakami_5L_snow;
	1: switch_nakamura_6L_snow;
	1: switch_nakamura_5L_snow;
	1: switch_nakayama_ashita_snow;
	1: switch_nakayama_dual_snow;
	//1: switch_shibata_6L_snow;
	//1: switch_shibata_5L_snow;
	//1: switch_tetsui_6L_snow;
	//1: switch_tetsui_5L_snow;
	//1: switch_toki_6L_snow;
	//1: switch_toki_5L_snow;
	3: switch_tokyosaka_snow;
	//1: switch_yanagi_6L_snow;
	//1: switch_yanagi_5L_snow;
	//1: switch_yano_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_name) {
	dependent: switch_apartments_boom_5L6L_sprites;
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HAYASHI),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HARADA),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRANO),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_HIRATA),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KIMURA),string(PERIOD_BOOM),string(L5));*/
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_KONO),string(PERIOD_BOOM),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MORI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_MURAKAMI),string(PERIOD_BOOM),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAMURA),string(PERIOD_POSTWAR),string(L5));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAYAMA),string(PERIOD_POSTWAR),string(L6));
	1: string(STR_CONCAT_3, string(NAME_APARTMENTS_NAKAYAMA),string(PERIOD_POSTWAR),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_SHIBATA),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TETSUI),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKI),string(PERIOD_BOOM),string(L5));
	3: string(STR_CONCAT_3, string(NAME_APARTMENTS_TOKYO),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_BOOM),string(L6));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANAGI),string(PERIOD_BOOM),string(L5));
	//1: string(STR_CONCAT_3, string(NAME_APARTMENTS_YANO),string(PERIOD_BOOM),string(L6));*/
}

// Colours
random_switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_colors) {
	dependent: switch_apartments_boom_5L6L_sprites;	
	//1: switch_hayashi_colors;
	//1: switch_hayashi_colors;
	//1: switch_harada_colors;
	1: switch_hirano_colors;
	1: switch_hirano_colors;
	//1: switch_hirata_colors;
	//1: switch_hirata_colors;
	//1: switch_kimura_colors;
	//1: switch_kimura_colors;
	//1: switch_kono_colors;
	1: switch_mori_colors;
	1: switch_mori_colors;
	//1: switch_murakami_colors;
	//1: switch_murakami_colors;
	1: switch_nakamura_colors;
	1: switch_nakamura_colors;
	1: switch_nakayama_colors;
	1: switch_nakayama_colors;
	//1: switch_shibata_colors;
	//1: switch_shibata_colors;
	//1: switch_tetsui_colors;
	//1: switch_tetsui_colors;
	//1: switch_toki_colors;
	//1: switch_toki_colors;
	3: switch_tokyosaka_colors;
	//1: switch_yanagi_colors;
	//1: switch_yanagi_colors;
	//1: switch_yano_colors;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_boom_5L6L_con_check, 	
	FuncServicePASS() &&				// Only build within the catchment area of a station which received passengers this month or last month
	PopOver5L6LResidentialThreshold()	// Only build if above population threshold
	) {return;}	

item(FEAT_HOUSES, item_apartments_boom_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				100;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				2;
		years_available: 			[1960,1979];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES & ~bitmask(TOWNZONE_EDGE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_boom_5L6L_name;
		default: 					switch_apartments_boom_5L6L_sprites;
		construction_check: 		switch_apartments_boom_5L6L_con_check;
		cargo_production: 			func_produce(10,4);
		colour: 					switch_apartments_boom_5L6L_colors;
	}
}
