// Begin apartments_y2kp_5L6L

// Random selection of sprites
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_sprites) {
	1: switch_hayashi_6L_snow;
	1: switch_hayashi_5L_snow;
	1: switch_hirata_6L_snow;
	1: switch_hirata_5L_snow;
	1: switch_kimura_6L_snow;
	1: switch_kimura_5L_snow;
	1: switch_murakami_6L_snow;
	1: switch_murakami_5L_snow;
	1: switch_shibata_6L_snow;
	1: switch_shibata_5L_snow;
	1: switch_tetsui_6L_snow;
	1: switch_tetsui_5L_snow;
	1: switch_toki_6L_snow;
	1: switch_toki_5L_snow;
	1: switch_tokyosaka_snow;
	1: switch_yanagi_6L_snow;
	1: switch_yanagi_5L_snow;
	1: switch_yano_snow;
}

random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_name) {
	dependent: switch_apartments_y2kp_5L6L_sprites;
	1: string(NAME_APARTMENTS_HAYASHI);
	1: string(NAME_APARTMENTS_HAYASHI);
	1: string(NAME_APARTMENTS_HIRATA);
	1: string(NAME_APARTMENTS_HIRATA);
	1: string(NAME_APARTMENTS_KIMURA);
	1: string(NAME_APARTMENTS_KIMURA);
	1: string(NAME_APARTMENTS_MURAKAMI);
	1: string(NAME_APARTMENTS_MURAKAMI);
	1: string(NAME_APARTMENTS_SHIBATA);
	1: string(NAME_APARTMENTS_SHIBATA);
	1: string(NAME_APARTMENTS_TETSUI);
	1: string(NAME_APARTMENTS_TETSUI);
	1: string(NAME_APARTMENTS_TOKI);
	1: string(NAME_APARTMENTS_TOKI);
	1: string(NAME_APARTMENTS_TOKYO);
	1: string(NAME_APARTMENTS_YANAGI);
	1: string(NAME_APARTMENTS_YANAGI);
	1: string(NAME_APARTMENTS_YANO);
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_colors) {
	dependent: switch_apartments_y2kp_5L6L_sprites;
	1: switch_hayashi_colors;
	1: switch_hayashi_colors;
	1: switch_hirata_colors;
	1: switch_hirata_colors;
	1: switch_kimura_colors;
	1: switch_kimura_colors;
	1: switch_kono_colors;
	1: switch_murakami_colors;
	1: switch_murakami_colors;
	1: switch_shibata_colors;
	1: switch_shibata_colors;
	1: switch_tetsui_colors;
	1: switch_tetsui_colors;
	1: switch_toki_colors;
	1: switch_toki_colors;
	1: switch_tokyosaka_colors;
	1: switch_yanagi_colors;
	1: switch_yanagi_colors;
	1: switch_yano_colors;	
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_apartments_y2kp_5L6L_con_check, 	
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	((PopOver5L6LResidentialThreshold()	&&	town_zone == (TOWNZONE_OUTER_SUBURB || TOWNZONE_OUTSKIRT))
	||
	(!PopOver5L6LResidentialThreshold()	&&	town_zone == (TOWNZONE_CENTRE || TOWNZONE_INNER_SUBURB)))
	) {return;}	

item(FEAT_HOUSES, item_apartments_y2kp_5L6L){
	property {
		substitute: 				27;
		name: 						string(NAME_APARTMENTS_YANO);
		population: 				150;
		accepted_cargos: 			[[PASS, 4],[MAIL, 2]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[ALL_TOWNZONES & ~bitmask(TOWNZONE_EDGE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];
		building_class:				4;
				
		}
	graphics {
		name:						switch_apartments_y2kp_5L6L_name;
		default: 					switch_apartments_y2kp_5L6L_sprites;
		construction_check: 		switch_apartments_y2kp_5L6L_con_check;
		cargo_production: 			func_produce(13,4);
		colour: 					switch_apartments_y2kp_5L6L_colors;
	}
}
