// Begin shiro_01

// Sprites
spriteset (spr_shiro_01, 							"src/houses/landmarks/shiro_01/shiro.png") 						{template_house_200(1,1)}
spriteset (spr_shiro_01_snow, 						"src/houses/landmarks/shiro_01/shiro.png") 						{template_house_200(1,202)}

// Normal Sprites
spritelayout sprlay_shiro_01_north {
	ground {
		sprite: spr_ground_shiro(0);
	}
	building {
		sprite: spr_shiro_01(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_east {
	ground {
		sprite: spr_ground_shiro(2);
	}
	building {
		sprite: spr_shiro_01(2);
		xoffset: -1;
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_west {
	ground {
		sprite: spr_ground_shiro(1);
	}
	building {
		sprite: spr_shiro_01(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_south {
	ground {
		sprite: spr_ground_shiro(3);
	}
	building {
		sprite: spr_shiro_01(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_shiro_01_snow_north {
	ground {
		sprite: spr_ground_shiro(0);
	}
	building {
		sprite: spr_shiro_01_snow(2);
		hide_sprite: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_snow_east {
	ground {
		sprite: spr_ground_shiro(2);
	}
	building {
		sprite: spr_shiro_01_snow(2);
		xoffset: -1;
		yoffset: 2;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_snow_west {
	ground {
		sprite: spr_ground_shiro(1);
	}
	building {
		sprite: spr_shiro_01_snow(0);
		xoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shiro_01_snow_south {
	ground {
		sprite: spr_ground_shiro(3);
	}
	building {
		sprite: spr_shiro_01_snow(1);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_shiro_01_north,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_north;
	sprlay_shiro_01_north;
}
switch(FEAT_HOUSES, SELF, switch_shiro_01_east,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_east;
	sprlay_shiro_01_east;
}
switch(FEAT_HOUSES, SELF, switch_shiro_01_west,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_west;
	sprlay_shiro_01_west;
}
switch(FEAT_HOUSES, SELF, switch_shiro_01_south,terrain_type) {
	TILETYPE_SNOW: sprlay_shiro_01_snow_south;
	sprlay_shiro_01_south;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_shiro_01)
	{
		//1: PALETTE_CC_RED;			nah
		2: PALETTE_CC_LIGHT_BLUE;
		//1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		//1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		//4: PALETTE_CC_WHITE;			too much like snow
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_shiro_01_con_check, 
	IsCity() && 				// Can only appear in Cities
	IsUniqueHouse() && 			// Only one Shiro per city
	TownIndex() % 4 == 0 && 	// Proportion of cities
	OnGenerationOnly() 			// Will only spawn when Map is generated - not realistic being built in modern times!
	) {return;}	

item(FEAT_HOUSES, item_shiro_01, 70, HOUSE_SIZE_2X2){
	property {
		substitute: 				20; 								//Stadium since 2x2
		name: 						string(NAME_SHIRO_01);
		building_flags: 			bitmask(HOUSE_FLAG_PROTECTED);		// Cities should delete
		population: 				160;								// Same as JPS
		accepted_cargos: 			[[PASS, 8],[MAIL, 1],[FOOD, 2]];	// Same as JPS
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;									
		years_available: 			[0,0xFFFF];
		minimum_lifetime: 			50;
		availability_mask: 			[	
										bitmask(TOWNZONE_OUTER_SUBURB,TOWNZONE_OUTSKIRT), 				// Same as JPS
									 	bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)
									];	
		}
	graphics {
		graphics_north: 			switch_shiro_01_north;
		graphics_east: 				switch_shiro_01_east;
		graphics_west: 				switch_shiro_01_west;
		graphics_south: 			switch_shiro_01_south;
		construction_check:			switch_shiro_01_con_check;
		cargo_production: 			func_produce(10,2);
		colour: 					rand_recolor_shiro_01;
	}
}

// End shiro_01
