// Begin naganuma_house

spriteset (spr_naganuma_house, 								"src/gfx/houses/naganuma/building.png") 						{template_house_2dir(1,1)}
spriteset (spr_naganuma_house_snow, 						"src/gfx/houses/naganuma/building.png") 						{template_house_2dir(1,80)}
spriteset (spr_naganuma_house_ground, 						"src/gfx/houses/naganuma/ground.png") 						{template_house_2dir(1,1)}
spriteset (spr_naganuma_house_ground_snow, 					"src/gfx/houses/naganuma/ground.png") 						{template_house_2dir(1,80)}

spritelayout sprlay_naganuma_house_norm {
	ground {
		sprite: spr_naganuma_house_ground(LOAD_TEMP(1));
	}
	building {
		sprite: spr_naganuma_house(LOAD_TEMP(1));
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_naganuma_house_snow {
	ground {
		sprite: spr_naganuma_house_ground_snow(LOAD_TEMP(1));
	}
	building {
		sprite: spr_naganuma_house_snow(LOAD_TEMP(1));
	}
}

switch (FEAT_HOUSES, SELF, switch_naganuma_house_sprites, [ 
 	// Check for snow and set the groundsprite in temporary variable 0
 	STORE_TEMP(GROUNDSPRITE_NORMAL, 0),
 	STORE_TEMP(terrain_type == TILETYPE_SNOW ? GROUNDSPRITE_SNOW : LOAD_TEMP(0), 0),
	// Check the rotation of the house
	STORE_TEMP(switch_road_adjacency(), 1),
	terrain_type == TILETYPE_SNOW])
	{1: sprlay_naganuma_house_snow; sprlay_naganuma_house_norm;}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_naganuma_house)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}


item(FEAT_HOUSES, item_naganuma_house, 26, HOUSE_SIZE_1X1){
	property {
		substitute: 				26;
		name: 						string(NAME_NAGANUMA_HOUSE);
		population: 				20;	
		accepted_cargos: 			[[PASS, 2],[MAIL, 1]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				1;
		years_available: 			[1870,0xFFFF];
		minimum_lifetime: 			2;
		availability_mask: 			[ALL_TOWNZONES & ~bitmask(TOWNZONE_CENTRE), ALL_CLIMATES | bitmask(ABOVE_SNOWLINE)];	// House office gap to restrict placement in inner zones
		building_class: 			0;
		
		}
	graphics {
		default: 					switch_naganuma_house_sprites;
		construction_check: 		switch_house_office_gap;
		cargo_production: 			func_produce(2,1,1);
		colour: 					rand_recolor_naganuma_house;
	}
}

// End naganuma_house
