// Begin shops_01

// Building Sprites
spriteset (spr_shops_01, 							"src/gfx/shops/shops_01/building.png") 						{template_house_100(1,1)}
spriteset (spr_shops_01_snow, 						"src/gfx/shops/shops_01/building.png") 						{template_house_100(1,102)}

// Ground Tiles
spriteset (spr_shops_01_ground, 					"src/gfx/shops/shops_01/ground.png") 						{template_house_100(1,1)}
spriteset (spr_shops_01_ground_snow, 				"src/gfx/shops/shops_01/ground.png") 						{template_house_100(1,102)}

spritelayout sprlay_shops_01_norm {
	ground {
		sprite: spr_shops_01_ground(construction_state);
	}
	building {
		sprite: spr_shops_01(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_shops_01_snow {
	ground {
		sprite: spr_shops_01_ground_snow(construction_state);
	}
	building {
		sprite: spr_shops_01_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_shops_01_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_shops_01_snow;
	sprlay_shops_01_norm;
}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_shops_01_con_check, 
	FuncServicePASS() &&			// Only build within the catchment area of a station which received passengers this month or last month
	BanFromHistDistrict() &&		// Cannot build close to Temple
	HasRoadAdjacentSW() && 
	HasRoadAdjacentSE() && 
	ModernOfficePopCheck() &&		// Is there population to allow another
	ClusterBuildingClass()			// Must be within two tiles of the same building class
	) {return;}	

// Recolouring
random_switch (FEAT_HOUSES, SELF, random_recolour_shops_01) {
	1:	return PALETTE_CC_DARK_BLUE;
	1:	return PALETTE_CC_GREY;
	1:	return PALETTE_CC_BROWN;
	1:	return PALETTE_CC_MAUVE;
	1:	return PALETTE_CC_WHITE;
	1:	return PALETTE_CC_DARK_GREEN;
}

item(FEAT_HOUSES, item_shops_01, 48, HOUSE_SIZE_1X1) {
	property {
		substitute: 				30;
		name: 						string(NAME_SHOPS_01);
		population: 				180;
		mail_multiplier: 			75;
		accepted_cargos: 			[[PASS, 8],[MAIL,8],[GOOD, 8]];
		local_authority_impact: 	180;
		removal_cost_multiplier: 	155;
		probability: 				1;
		years_available: 			[1970,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];	// JPSet Zones 4,3
		building_class: 			2;
	}
	graphics {
		default: 					switch_shops_01_sprites;
		construction_check: 		switch_shops_01_con_check;
		colour: 					random_recolour_shops_01;
		cargo_production: 			func_produce(24,10);
	}
}
// End shops_01
