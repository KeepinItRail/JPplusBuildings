// Begin yoshinoya_restaurant

// Building Sprites
spriteset (spr_build_yoshinoya_restaurant, 							"src/gfx/shops/yoshinoya_restaurant/building.png") 					{template_house_80_wide(1,1)}
spriteset (spr_build_yoshinoya_restaurant_snow, 					"src/gfx/shops/yoshinoya_restaurant/building.png") 					{template_house_80_wide(1,82)}

// Ground Sprites
spriteset (spr_ground_yoshinoya_restaurant, 						"src/gfx/shops/yoshinoya_restaurant/ground.png") 					{template_ground(1,1)}
spriteset (spr_ground_yoshinoya_restaurant_snow, 					"src/gfx/shops/yoshinoya_restaurant/ground.png") 					{template_ground(1,33)}

// Normal Sprites
spritelayout sprlay_yoshinoya_restaurant {
	ground {
		sprite: spr_ground_yoshinoya_restaurant(construction_state);
	}
	building {
		sprite: spr_build_yoshinoya_restaurant(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_yoshinoya_restaurant_snow {
	ground {
		sprite: spr_ground_yoshinoya_restaurant_snow(construction_state);
	}
	building {
		sprite: spr_build_yoshinoya_restaurant_snow(construction_state);
		yoffset: 1;
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_yoshinoya_restaurant,terrain_type) {
	TILETYPE_SNOW: sprlay_yoshinoya_restaurant_snow;
	sprlay_yoshinoya_restaurant;
}

// Recolouring

random_switch (FEAT_HOUSES, SELF, rand_recolor_yoshinoya_restaurant)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
	}


// Construction Check
switch (FEAT_HOUSES, SELF, switch_yoshinoya_restaurant_con_check, 
	HasRoadAdjacentSW() &&		// Must have road to the SW
	ThirtyTileGap()				// Can't appear within 30 tiles of another
) {return;}	

// Protection Check
switch (FEAT_HOUSES, SELF, switch_yoshinoya_restaurant_pro_check, 
	FuncServicePASS() 	&&		// Must have PASS delivered
	(FuncServiceFOOD()	||		// Must have either FOOD delivered
	FuncServiceEOIL()	||		// or Edible Oil
	FuncServiceFISH()   )		// or Fish	
	) {return;}	

item(FEAT_HOUSES, item_yoshinoya_restaurant){
	property {
		substitute: 				29; 													
		name: 						string(NAME_YOSHINOYA_RESTAURANT);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED);		// Want flat land
		population: 				60;									// Agreed to JPS
		accepted_cargos: 			[
										[PASS, 4],[MAIL, 2],			// Of course
										[FOOD, 8],						// Food in general
										[JAVA ,8],						// Coffee
										[EOIL, 8],						// Oil for cooking
										[LVST, 8],						// Meat for restaurant
										[FISH, 8],						// It's a sushi restuarant!
									];							
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[1955,0xFFFF];	
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(
										TOWNZONE_INNER_SUBURB,
										TOWNZONE_OUTER_SUBURB,
										TOWNZONE_OUTSKIRT
										), 
									bitmask(
										CLIMATE_TEMPERATE, 
										CLIMATE_ARCTIC, 
										ABOVE_SNOWLINE
										)];
		//building_class:			2;	
		}
	graphics {
		default: 					switch_yoshinoya_restaurant;
		construction_check:			switch_yoshinoya_restaurant_con_check;
		protection:					switch_yoshinoya_restaurant_pro_check;
		cargo_production: 			func_produce(20,5);
		colour: 					rand_recolor_yoshinoya_restaurant;
	}
}

// End yoshinoya_restaurant
