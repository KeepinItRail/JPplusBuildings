// Begin skyscraper_02

// Building Sprites
spriteset (spr_build_skyscraper_02, 							"src/gfx/skyscrapers/skyscraper_02/building.png") 							{template_house_250(1,1)}
spriteset (spr_build_skyscraper_02_snow, 						"src/gfx/skyscrapers/skyscraper_02/building.png") 						{template_house_250(1,252)}

// Ground Sprites
spriteset (spr_ground_skyscraper_02, 							"src/gfx/skyscrapers/skyscraper_02/ground.png") 						{template_house_250(1,1)}
spriteset (spr_ground_skyscraper_02_snow, 						"src/gfx/skyscrapers/skyscraper_02/ground.png") 						{template_house_250(1,252)}

// Normal Sprites
spritelayout sprlay_skyscraper_02 {
	ground {
		sprite: spr_ground_skyscraper_02(construction_state);
	}
	building {
		sprite: spr_build_skyscraper_02(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Snow Sprites
spritelayout sprlay_skyscraper_02_snow {
	ground {
		sprite: spr_ground_skyscraper_02_snow(construction_state);
	}
	building {
		sprite: spr_build_skyscraper_02_snow(construction_state);
		recolour_mode: RECOLOUR_REMAP; 
		palette: PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_skyscraper_02,terrain_type) {
	TILETYPE_SNOW: sprlay_skyscraper_02_snow;
	sprlay_skyscraper_02;
}

// Recolouring
random_switch (FEAT_HOUSES, SELF, rand_recolor_skyscraper_02)
	{
		1: PALETTE_CC_RED;			
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;			
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}

// Construction Check
switch (FEAT_HOUSES, SELF, switch_skyscraper_02_con_check, 
	FuncServicePASS() &&		// Must have passenger service
	IsCity() && 				// Can only appear in cities
	IsUniqueHouse() &&			// Only one in city
	PopOver30k() &&				// Population of city is over 30k
	ModernOfficePopCheck() &&	// Residential population is sufficient for another modern office building class
	WithinTwoOfSameClass() &&	// Must be within two tiles of the same building class
	BanFromHistDistrict()		// Cannot build close to Temple
	) {return;}	

item(FEAT_HOUSES, item_skyscraper_02, 78, HOUSE_SIZE_1X1){
	property {
		substitute: 				4; 													
		name: 						string(NAME_SKYSCRAPER_02);
		building_flags: 			bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
		population: 				220;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				10;
		years_available: 			[2000,0xFFFF];
		minimum_lifetime: 			5;
		availability_mask: 			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE)];
		building_class:				5;	
		}
	graphics {
		default: 					switch_skyscraper_02;
		construction_check:			switch_skyscraper_02_con_check;
		cargo_production: 			func_produce(24,10);
		colour: 					rand_recolor_skyscraper_02; 						// No recolouring
	}
}

// End skyscraper_02
