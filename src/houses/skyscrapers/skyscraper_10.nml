// Begin skyscraper_10

// Building Sprites
spriteset (spr_skyscraper_10, 						"src/gfx/skyscrapers/skyscraper_10/building.png") 						{template_house_150_wide(1,1)}
spriteset (spr_skyscraper_10_snow, 					"src/gfx/skyscrapers/skyscraper_10/building.png") 						{template_house_150_wide(1,152)}

// Ground Tiles
spriteset (spr_skyscraper_10_ground, 				"src/gfx/skyscrapers/skyscraper_10/ground.png") 						{template_ground(1,1)}
spriteset (spr_skyscraper_10_ground_snow, 			"src/gfx/skyscrapers/skyscraper_10/ground.png") 						{template_ground(1,33)}

spritelayout sprlay_skyscraper_10_norm {
	ground {
		sprite: 		spr_skyscraper_10_ground(3);
	}
	building {
		sprite: 		spr_skyscraper_10(3);
		yoffset:  		-1;
		//recolour_mode: 	RECOLOUR_REMAP; 
		//palette: 		PALETTE_USE_DEFAULT;
	}
}

spritelayout sprlay_skyscraper_10_snow {
	ground {
		sprite: 		spr_skyscraper_10_ground_snow(3);
	}
	building {
		sprite: 		spr_skyscraper_10_snow(3);
		yoffset:  		-1;
		//recolour_mode: 	RECOLOUR_REMAP; 
		//palette: 		PALETTE_USE_DEFAULT;
	}
}

// Choose between Normal Sprites and Snow Sprites
switch(FEAT_HOUSES, SELF, switch_skyscraper_10_sprites,terrain_type) {
	TILETYPE_SNOW: sprlay_skyscraper_10_snow;
	sprlay_skyscraper_10_norm;
}

// Recolouring
/*
random_switch (FEAT_HOUSES, SELF, rand_recolor_skyscraper_10)
	{
		1: PALETTE_CC_RED;
		2: PALETTE_CC_LIGHT_BLUE;
		1: PALETTE_CC_PINK;
		1: PALETTE_CC_DARK_BLUE;
		1: PALETTE_CC_GREEN;
		2: PALETTE_CC_DARK_GREEN;
		3: PALETTE_CC_CREAM;
		1: PALETTE_CC_MAUVE;
		4: PALETTE_CC_BROWN;
		4: PALETTE_CC_GREY;
		4: PALETTE_CC_WHITE;
	}
*/
// Construction Check
switch (FEAT_HOUSES, SELF, switch_skyscraper_10_con_check, 
	FuncServicePASS() &&			// Must have passenger service
	IsCity() && 					// Can only appear in cities
	IsUniqueHouse() &&				// Only one in city
	PopOver10k() &&					// Population of city check
	Class5PopCheck() &&				// Residential population is sufficient for another Skyscraper
	ClusterBuildingClass() &&		// Must be within two tiles of the same building class
	IfFirstSkyscraper() 			// If first skyscraper, it must build beside a Class 2
) {return;}	


item(FEAT_HOUSES, item_skyscraper_10, 87, HOUSE_SIZE_1X1){
	property {
		substitute: 				27;
		name: 						string(NAME_SKYSCRAPER_10);
		population: 				200;
		accepted_cargos: 			[[PASS, 8],[MAIL, 8],[GOOD, 8]];
		local_authority_impact: 	80;
		removal_cost_multiplier: 	80;
		probability: 				5;
		years_available: 			[1990,0xFFFF];
		minimum_lifetime: 			8;
		availability_mask: 			[bitmask(						
										TOWNZONE_CENTRE				// 4
										//TOWNZONE_INNER_SUBURB,	// 3
										//TOWNZONE_OUTER_SUBURB,	// 2
										//TOWNZONE_OUTSKIRT			// 1
										//TOWNZONE_EDGE				// 0
									), bitmask(
										CLIMATE_TEMPERATE,
										CLIMATE_ARCTIC, ABOVE_SNOWLINE,
										CLIMATE_TROPIC
									)];
		building_class: 			2;
		}
	graphics {
		default: 					switch_skyscraper_10_sprites;
		construction_check: 		switch_skyscraper_10_con_check; 	
		cargo_production: 			func_produce(13,4);
		//colour: 					rand_recolor_skyscraper_10;
	}
}

// End skyscraper_10
